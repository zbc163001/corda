@net.corda.core.serialization.CordaSerializable public class net.corda.core.CordaException extends java.lang.Exception implements net.corda.core.CordaThrowable
  public <init>()
  public <init>(String)
  public <init>(String, String, Throwable)
  public <init>(String, Throwable)
  public void addSuppressed(Throwable[])
  public boolean equals(Object)
  @org.jetbrains.annotations.Nullable public Throwable getCause()
  @org.jetbrains.annotations.Nullable public String getMessage()
  @org.jetbrains.annotations.Nullable public String getOriginalExceptionClassName()
  @org.jetbrains.annotations.Nullable public String getOriginalMessage()
  public int hashCode()
  public void setCause(Throwable)
  public void setMessage(String)
  public void setOriginalExceptionClassName(String)
##
@net.corda.core.serialization.CordaSerializable public class net.corda.core.CordaRuntimeException extends java.lang.RuntimeException implements net.corda.core.CordaThrowable
  public <init>(String)
  public <init>(String, String, Throwable)
  public <init>(String, Throwable)
  public void addSuppressed(Throwable[])
  public boolean equals(Object)
  @org.jetbrains.annotations.Nullable public Throwable getCause()
  @org.jetbrains.annotations.Nullable public String getMessage()
  @org.jetbrains.annotations.Nullable public String getOriginalExceptionClassName()
  @org.jetbrains.annotations.Nullable public String getOriginalMessage()
  public int hashCode()
  public void setCause(Throwable)
  public void setMessage(String)
  public void setOriginalExceptionClassName(String)
##
@net.corda.core.serialization.CordaSerializable public interface net.corda.core.CordaThrowable
  public abstract void addSuppressed(Throwable[])
  @org.jetbrains.annotations.Nullable public abstract String getOriginalExceptionClassName()
  @org.jetbrains.annotations.Nullable public abstract String getOriginalMessage()
  public abstract void setCause(Throwable)
  public abstract void setMessage(String)
  public abstract void setOriginalExceptionClassName(String)
##
public @interface net.corda.core.DoNotImplement
##
public final class net.corda.core.Utils extends java.lang.Object
  @org.jetbrains.annotations.NotNull public static final net.corda.core.concurrent.CordaFuture toFuture(rx.Observable)
  @org.jetbrains.annotations.NotNull public static final rx.Observable toObservable(net.corda.core.concurrent.CordaFuture)
##
public final class net.corda.core.concurrent.ConcurrencyUtils extends java.lang.Object
  @org.jetbrains.annotations.NotNull public static final net.corda.core.concurrent.CordaFuture firstOf(net.corda.core.concurrent.CordaFuture[], kotlin.jvm.functions.Function1)
  @org.jetbrains.annotations.NotNull public static final net.corda.core.concurrent.CordaFuture firstOf(net.corda.core.concurrent.CordaFuture[], org.slf4j.Logger, kotlin.jvm.functions.Function1)
  public static final Object match(concurrent.Future, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
  @org.jetbrains.annotations.NotNull public static final String shortCircuitedTaskFailedMessage = "Short-circuited task failed:"
##
public interface net.corda.core.concurrent.CordaFuture extends java.util.concurrent.Future
  public abstract void then(kotlin.jvm.functions.Function1)
  @org.jetbrains.annotations.NotNull public abstract concurrent.CompletableFuture toCompletableFuture()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.context.Actor extends java.lang.Object
  public <init>(net.corda.core.context.Actor$Id, net.corda.core.context.AuthServiceId, net.corda.core.identity.CordaX500Name)
  @org.jetbrains.annotations.NotNull public final net.corda.core.context.Actor$Id component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.context.AuthServiceId component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.CordaX500Name component3()
  @org.jetbrains.annotations.NotNull public final net.corda.core.context.Actor copy(net.corda.core.context.Actor$Id, net.corda.core.context.AuthServiceId, net.corda.core.identity.CordaX500Name)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.context.Actor$Id getId()
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.CordaX500Name getOwningLegalIdentity()
  @org.jetbrains.annotations.NotNull public final net.corda.core.context.AuthServiceId getServiceId()
  public int hashCode()
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.context.Actor service(String, net.corda.core.identity.CordaX500Name)
  public String toString()
  public static final net.corda.core.context.Actor$Companion Companion
##
public static final class net.corda.core.context.Actor$Companion extends java.lang.Object
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.context.Actor service(String, net.corda.core.identity.CordaX500Name)
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.context.Actor$Id extends java.lang.Object
  public <init>(String)
  @org.jetbrains.annotations.NotNull public final String component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.context.Actor$Id copy(String)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final String getValue()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.context.AuthServiceId extends java.lang.Object
  public <init>(String)
  @org.jetbrains.annotations.NotNull public final String component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.context.AuthServiceId copy(String)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final String getValue()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.context.InvocationContext extends java.lang.Object
  public <init>(net.corda.core.context.Origin, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Actor)
  @org.jetbrains.annotations.NotNull public final net.corda.core.context.Origin component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.context.Trace component2()
  @org.jetbrains.annotations.Nullable public final net.corda.core.context.Actor component3()
  @org.jetbrains.annotations.Nullable public final net.corda.core.context.Trace component4()
  @org.jetbrains.annotations.Nullable public final net.corda.core.context.Actor component5()
  @org.jetbrains.annotations.NotNull public final net.corda.core.context.InvocationContext copy(net.corda.core.context.Origin, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Actor)
  public boolean equals(Object)
  @org.jetbrains.annotations.Nullable public final net.corda.core.context.Actor getActor()
  @org.jetbrains.annotations.Nullable public final net.corda.core.context.Trace getExternalTrace()
  @org.jetbrains.annotations.Nullable public final net.corda.core.context.Actor getImpersonatedActor()
  @org.jetbrains.annotations.NotNull public final net.corda.core.context.Origin getOrigin()
  @org.jetbrains.annotations.NotNull public final net.corda.core.context.Trace getTrace()
  public int hashCode()
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.context.InvocationContext newInstance(net.corda.core.context.Origin, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Actor)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.context.InvocationContext peer(net.corda.core.identity.CordaX500Name, net.corda.core.context.Trace, net.corda.core.context.Trace, net.corda.core.context.Actor)
  @org.jetbrains.annotations.NotNull public final java.security.Principal principal()
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.context.InvocationContext rpc(net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Trace, net.corda.core.context.Actor)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.context.InvocationContext scheduled(net.corda.core.contracts.ScheduledStateRef, net.corda.core.context.Trace, net.corda.core.context.Trace)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.context.InvocationContext service(String, net.corda.core.identity.CordaX500Name, net.corda.core.context.Trace, net.corda.core.context.Trace)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.context.InvocationContext shell(net.corda.core.context.Trace, net.corda.core.context.Trace)
  public String toString()
  public static final net.corda.core.context.InvocationContext$Companion Companion
##
public static final class net.corda.core.context.InvocationContext$Companion extends java.lang.Object
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.context.InvocationContext newInstance(net.corda.core.context.Origin, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Actor)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.context.InvocationContext peer(net.corda.core.identity.CordaX500Name, net.corda.core.context.Trace, net.corda.core.context.Trace, net.corda.core.context.Actor)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.context.InvocationContext rpc(net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Trace, net.corda.core.context.Actor)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.context.InvocationContext scheduled(net.corda.core.contracts.ScheduledStateRef, net.corda.core.context.Trace, net.corda.core.context.Trace)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.context.InvocationContext service(String, net.corda.core.identity.CordaX500Name, net.corda.core.context.Trace, net.corda.core.context.Trace)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.context.InvocationContext shell(net.corda.core.context.Trace, net.corda.core.context.Trace)
##
@net.corda.core.serialization.CordaSerializable public abstract class net.corda.core.context.Origin extends java.lang.Object
  @org.jetbrains.annotations.NotNull public abstract java.security.Principal principal()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.context.Origin$Peer extends net.corda.core.context.Origin
  public <init>(net.corda.core.identity.CordaX500Name)
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.CordaX500Name component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.context.Origin$Peer copy(net.corda.core.identity.CordaX500Name)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.CordaX500Name getParty()
  public int hashCode()
  @org.jetbrains.annotations.NotNull public java.security.Principal principal()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.context.Origin$RPC extends net.corda.core.context.Origin
  public <init>(net.corda.core.context.Actor)
  @org.jetbrains.annotations.NotNull public final net.corda.core.context.Origin$RPC copy(net.corda.core.context.Actor)
  public boolean equals(Object)
  public int hashCode()
  @org.jetbrains.annotations.NotNull public java.security.Principal principal()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.context.Origin$Scheduled extends net.corda.core.context.Origin
  public <init>(net.corda.core.contracts.ScheduledStateRef)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.ScheduledStateRef component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.context.Origin$Scheduled copy(net.corda.core.contracts.ScheduledStateRef)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.ScheduledStateRef getScheduledState()
  public int hashCode()
  @org.jetbrains.annotations.NotNull public java.security.Principal principal()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.context.Origin$Service extends net.corda.core.context.Origin
  public <init>(String, net.corda.core.identity.CordaX500Name)
  @org.jetbrains.annotations.NotNull public final String component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.CordaX500Name component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.context.Origin$Service copy(String, net.corda.core.identity.CordaX500Name)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.CordaX500Name getOwningLegalIdentity()
  @org.jetbrains.annotations.NotNull public final String getServiceClassName()
  public int hashCode()
  @org.jetbrains.annotations.NotNull public java.security.Principal principal()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.context.Origin$Shell extends net.corda.core.context.Origin
  @org.jetbrains.annotations.NotNull public java.security.Principal principal()
  public static final net.corda.core.context.Origin$Shell INSTANCE
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.context.Trace extends java.lang.Object
  public <init>(net.corda.core.context.Trace$InvocationId, net.corda.core.context.Trace$SessionId)
  @org.jetbrains.annotations.NotNull public final net.corda.core.context.Trace$InvocationId component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.context.Trace$SessionId component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.context.Trace copy(net.corda.core.context.Trace$InvocationId, net.corda.core.context.Trace$SessionId)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.context.Trace$InvocationId getInvocationId()
  @org.jetbrains.annotations.NotNull public final net.corda.core.context.Trace$SessionId getSessionId()
  public int hashCode()
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.context.Trace newInstance(net.corda.core.context.Trace$InvocationId, net.corda.core.context.Trace$SessionId)
  public String toString()
  public static final net.corda.core.context.Trace$Companion Companion
##
public static final class net.corda.core.context.Trace$Companion extends java.lang.Object
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.context.Trace newInstance(net.corda.core.context.Trace$InvocationId, net.corda.core.context.Trace$SessionId)
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.context.Trace$InvocationId extends net.corda.core.utilities.Id
  public <init>(String, java.time.Instant)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.context.Trace$InvocationId newInstance(String, java.time.Instant)
  public static final net.corda.core.context.Trace$InvocationId$Companion Companion
##
public static final class net.corda.core.context.Trace$InvocationId$Companion extends java.lang.Object
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.context.Trace$InvocationId newInstance(String, java.time.Instant)
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.context.Trace$SessionId extends net.corda.core.utilities.Id
  public <init>(String, java.time.Instant)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.context.Trace$SessionId newInstance(String, java.time.Instant)
  public static final net.corda.core.context.Trace$SessionId$Companion Companion
##
public static final class net.corda.core.context.Trace$SessionId$Companion extends java.lang.Object
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.context.Trace$SessionId newInstance(String, java.time.Instant)
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.contracts.AlwaysAcceptAttachmentConstraint extends java.lang.Object implements net.corda.core.contracts.AttachmentConstraint
  public boolean isSatisfiedBy(net.corda.core.contracts.Attachment)
  public static final net.corda.core.contracts.AlwaysAcceptAttachmentConstraint INSTANCE
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.contracts.Amount extends java.lang.Object implements java.lang.Comparable
  public <init>(long, Object)
  public <init>(long, java.math.BigDecimal, Object)
  public int compareTo(net.corda.core.contracts.Amount)
  public final long component1()
  @org.jetbrains.annotations.NotNull public final java.math.BigDecimal component2()
  @org.jetbrains.annotations.NotNull public final Object component3()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.Amount copy(long, java.math.BigDecimal, Object)
  public boolean equals(Object)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.contracts.Amount fromDecimal(java.math.BigDecimal, Object)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.contracts.Amount fromDecimal(java.math.BigDecimal, Object, java.math.RoundingMode)
  @org.jetbrains.annotations.NotNull public final java.math.BigDecimal getDisplayTokenSize()
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final java.math.BigDecimal getDisplayTokenSize(Object)
  public final long getQuantity()
  @org.jetbrains.annotations.NotNull public final Object getToken()
  public int hashCode()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.Amount minus(net.corda.core.contracts.Amount)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.contracts.Amount parseCurrency(String)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.Amount plus(net.corda.core.contracts.Amount)
  @org.jetbrains.annotations.NotNull public final List splitEvenly(int)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.Nullable public static final net.corda.core.contracts.Amount sumOrNull(Iterable)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.contracts.Amount sumOrThrow(Iterable)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.contracts.Amount sumOrZero(Iterable, Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.Amount times(int)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.Amount times(long)
  @org.jetbrains.annotations.NotNull public final java.math.BigDecimal toDecimal()
  @org.jetbrains.annotations.NotNull public String toString()
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.contracts.Amount zero(Object)
  public static final net.corda.core.contracts.Amount$Companion Companion
##
public static final class net.corda.core.contracts.Amount$Companion extends java.lang.Object
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.Amount fromDecimal(java.math.BigDecimal, Object)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.Amount fromDecimal(java.math.BigDecimal, Object, java.math.RoundingMode)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final java.math.BigDecimal getDisplayTokenSize(Object)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.Amount parseCurrency(String)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.Nullable public final net.corda.core.contracts.Amount sumOrNull(Iterable)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.Amount sumOrThrow(Iterable)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.Amount sumOrZero(Iterable, Object)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.Amount zero(Object)
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.contracts.AmountTransfer extends java.lang.Object
  public <init>(long, Object, Object, Object)
  @org.jetbrains.annotations.NotNull public final List apply(List, Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.AmountTransfer copy(long, Object, Object, Object)
  public boolean equals(Object)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.contracts.AmountTransfer fromDecimal(java.math.BigDecimal, Object, Object, Object)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.contracts.AmountTransfer fromDecimal(java.math.BigDecimal, Object, Object, Object, java.math.RoundingMode)
  @org.jetbrains.annotations.NotNull public final Object getDestination()
  public final long getQuantityDelta()
  @org.jetbrains.annotations.NotNull public final Object getSource()
  @org.jetbrains.annotations.NotNull public final Object getToken()
  public int hashCode()
  @org.jetbrains.annotations.NotNull public final List novate(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.AmountTransfer plus(net.corda.core.contracts.AmountTransfer)
  @org.jetbrains.annotations.NotNull public final java.math.BigDecimal toDecimal()
  @org.jetbrains.annotations.NotNull public String toString()
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.contracts.AmountTransfer zero(Object, Object, Object)
  public static final net.corda.core.contracts.AmountTransfer$Companion Companion
##
public static final class net.corda.core.contracts.AmountTransfer$Companion extends java.lang.Object
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.AmountTransfer fromDecimal(java.math.BigDecimal, Object, Object, Object)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.AmountTransfer fromDecimal(java.math.BigDecimal, Object, Object, Object, java.math.RoundingMode)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.AmountTransfer zero(Object, Object, Object)
##
@net.corda.core.serialization.CordaSerializable public interface net.corda.core.contracts.Attachment extends net.corda.core.contracts.NamedByHash
  public abstract void extractFile(String, java.io.OutputStream)
  @org.jetbrains.annotations.NotNull public abstract List getSigners()
  @org.jetbrains.annotations.NotNull public abstract java.io.InputStream open()
  @org.jetbrains.annotations.NotNull public abstract jar.JarInputStream openAsJAR()
##
@net.corda.core.serialization.CordaSerializable public interface net.corda.core.contracts.AttachmentConstraint
  public abstract boolean isSatisfiedBy(net.corda.core.contracts.Attachment)
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.contracts.AttachmentResolutionException extends net.corda.core.flows.FlowException
  public <init>(net.corda.core.crypto.SecureHash)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash getHash()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.contracts.AutomaticHashConstraint extends java.lang.Object implements net.corda.core.contracts.AttachmentConstraint
  public boolean isSatisfiedBy(net.corda.core.contracts.Attachment)
  public static final net.corda.core.contracts.AutomaticHashConstraint INSTANCE
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.contracts.Command extends java.lang.Object
  public <init>(net.corda.core.contracts.CommandData, java.security.PublicKey)
  public <init>(net.corda.core.contracts.CommandData, List)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.CommandData component1()
  @org.jetbrains.annotations.NotNull public final List component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.Command copy(net.corda.core.contracts.CommandData, List)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final List getSigners()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.CommandData getValue()
  public int hashCode()
  @org.jetbrains.annotations.NotNull public String toString()
##
public final class net.corda.core.contracts.CommandAndState extends java.lang.Object
  public <init>(net.corda.core.contracts.CommandData, net.corda.core.contracts.OwnableState)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.CommandData component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.OwnableState component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.CommandAndState copy(net.corda.core.contracts.CommandData, net.corda.core.contracts.OwnableState)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.CommandData getCommand()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.OwnableState getOwnableState()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public interface net.corda.core.contracts.CommandData
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.contracts.CommandWithParties extends java.lang.Object
  public <init>(List, List, net.corda.core.contracts.CommandData)
  @org.jetbrains.annotations.NotNull public final List component1()
  @org.jetbrains.annotations.NotNull public final List component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.CommandData component3()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.CommandWithParties copy(List, List, net.corda.core.contracts.CommandData)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final List getSigners()
  @org.jetbrains.annotations.NotNull public final List getSigningParties()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.CommandData getValue()
  public int hashCode()
  public String toString()
##
public final class net.corda.core.contracts.ComponentGroupEnum extends java.lang.Enum
  protected <init>(String, int)
  public static net.corda.core.contracts.ComponentGroupEnum valueOf(String)
  public static net.corda.core.contracts.ComponentGroupEnum[] values()
##
@net.corda.core.serialization.CordaSerializable public interface net.corda.core.contracts.Contract
  public abstract void verify(net.corda.core.transactions.LedgerTransaction)
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.contracts.ContractAttachment extends java.lang.Object implements net.corda.core.contracts.Attachment
  public <init>(net.corda.core.contracts.Attachment, String)
  public void extractFile(String, java.io.OutputStream)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.Attachment getAttachment()
  @org.jetbrains.annotations.NotNull public final String getContract()
  @org.jetbrains.annotations.NotNull public net.corda.core.crypto.SecureHash getId()
  @org.jetbrains.annotations.NotNull public List getSigners()
  @org.jetbrains.annotations.NotNull public java.io.InputStream open()
  @org.jetbrains.annotations.NotNull public jar.JarInputStream openAsJAR()
##
@net.corda.core.serialization.CordaSerializable public interface net.corda.core.contracts.ContractState
  @org.jetbrains.annotations.NotNull public abstract List getParticipants()
##
public final class net.corda.core.contracts.ContractsDSL extends java.lang.Object
  @org.jetbrains.annotations.NotNull public static final net.corda.core.contracts.CommandWithParties requireSingleCommand(Collection, Class)
  public static final Object requireThat(kotlin.jvm.functions.Function1)
##
@net.corda.core.serialization.CordaSerializable public interface net.corda.core.contracts.FungibleAsset extends net.corda.core.contracts.OwnableState
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.contracts.Amount getAmount()
  @org.jetbrains.annotations.NotNull public abstract Collection getExitKeys()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.contracts.FungibleAsset withNewOwnerAndAmount(net.corda.core.contracts.Amount, net.corda.core.identity.AbstractParty)
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.contracts.HashAttachmentConstraint extends java.lang.Object implements net.corda.core.contracts.AttachmentConstraint
  public <init>(net.corda.core.crypto.SecureHash)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.HashAttachmentConstraint copy(net.corda.core.crypto.SecureHash)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash getAttachmentId()
  public int hashCode()
  public boolean isSatisfiedBy(net.corda.core.contracts.Attachment)
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.contracts.InsufficientBalanceException extends net.corda.core.flows.FlowException
  public <init>(net.corda.core.contracts.Amount)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.Amount getAmountMissing()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.contracts.Issued extends java.lang.Object
  public <init>(net.corda.core.contracts.PartyAndReference, Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.PartyAndReference component1()
  @org.jetbrains.annotations.NotNull public final Object component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.Issued copy(net.corda.core.contracts.PartyAndReference, Object)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.PartyAndReference getIssuer()
  @org.jetbrains.annotations.NotNull public final Object getProduct()
  public int hashCode()
  @org.jetbrains.annotations.NotNull public String toString()
##
public @interface net.corda.core.contracts.LegalProseReference
  public abstract String uri()
##
@net.corda.core.serialization.CordaSerializable public interface net.corda.core.contracts.LinearState extends net.corda.core.contracts.ContractState
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.contracts.UniqueIdentifier getLinearId()
##
@net.corda.core.serialization.CordaSerializable public interface net.corda.core.contracts.MoveCommand extends net.corda.core.contracts.CommandData
  @org.jetbrains.annotations.Nullable public abstract Class getContract()
##
public interface net.corda.core.contracts.NamedByHash
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.crypto.SecureHash getId()
##
@net.corda.core.serialization.CordaSerializable public interface net.corda.core.contracts.OwnableState extends net.corda.core.contracts.ContractState
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.identity.AbstractParty getOwner()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.contracts.CommandAndState withNewOwner(net.corda.core.identity.AbstractParty)
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.contracts.PartyAndReference extends java.lang.Object
  public <init>(net.corda.core.identity.AbstractParty, net.corda.core.utilities.OpaqueBytes)
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.AbstractParty component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.OpaqueBytes component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.PartyAndReference copy(net.corda.core.identity.AbstractParty, net.corda.core.utilities.OpaqueBytes)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.AbstractParty getParty()
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.OpaqueBytes getReference()
  public int hashCode()
  @org.jetbrains.annotations.NotNull public String toString()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.contracts.PrivacySalt extends net.corda.core.utilities.OpaqueBytes
  public <init>()
  public <init>(byte[])
##
public final class net.corda.core.contracts.Requirements extends java.lang.Object
  public final void using(String, boolean)
  public static final net.corda.core.contracts.Requirements INSTANCE
##
@net.corda.core.serialization.CordaSerializable public interface net.corda.core.contracts.SchedulableState extends net.corda.core.contracts.ContractState
  @org.jetbrains.annotations.Nullable public abstract net.corda.core.contracts.ScheduledActivity nextScheduledActivity(net.corda.core.contracts.StateRef, net.corda.core.flows.FlowLogicRefFactory)
##
public interface net.corda.core.contracts.Scheduled
  @org.jetbrains.annotations.NotNull public abstract java.time.Instant getScheduledAt()
##
public final class net.corda.core.contracts.ScheduledActivity extends java.lang.Object implements net.corda.core.contracts.Scheduled
  public <init>(net.corda.core.flows.FlowLogicRef, java.time.Instant)
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.FlowLogicRef component1()
  @org.jetbrains.annotations.NotNull public final java.time.Instant component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.ScheduledActivity copy(net.corda.core.flows.FlowLogicRef, java.time.Instant)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.FlowLogicRef getLogicRef()
  @org.jetbrains.annotations.NotNull public java.time.Instant getScheduledAt()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.contracts.ScheduledStateRef extends java.lang.Object implements net.corda.core.contracts.Scheduled
  public <init>(net.corda.core.contracts.StateRef, java.time.Instant)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.StateRef component1()
  @org.jetbrains.annotations.NotNull public final java.time.Instant component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.ScheduledStateRef copy(net.corda.core.contracts.StateRef, java.time.Instant)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.StateRef getRef()
  @org.jetbrains.annotations.NotNull public java.time.Instant getScheduledAt()
  public int hashCode()
  public String toString()
##
public final class net.corda.core.contracts.SourceAndAmount extends java.lang.Object
  public <init>(Object, net.corda.core.contracts.Amount, Object)
  @org.jetbrains.annotations.NotNull public final Object component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.Amount component2()
  @org.jetbrains.annotations.Nullable public final Object component3()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.SourceAndAmount copy(Object, net.corda.core.contracts.Amount, Object)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.Amount getAmount()
  @org.jetbrains.annotations.Nullable public final Object getRef()
  @org.jetbrains.annotations.NotNull public final Object getSource()
  public int hashCode()
  public String toString()
##
public final class net.corda.core.contracts.StateAndContract extends java.lang.Object
  public <init>(net.corda.core.contracts.ContractState, String)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.ContractState component1()
  @org.jetbrains.annotations.NotNull public final String component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.StateAndContract copy(net.corda.core.contracts.ContractState, String)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final String getContract()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.ContractState getState()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.contracts.StateAndRef extends java.lang.Object
  public <init>(net.corda.core.contracts.TransactionState, net.corda.core.contracts.StateRef)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.TransactionState component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.StateRef component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.StateAndRef copy(net.corda.core.contracts.TransactionState, net.corda.core.contracts.StateRef)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.StateRef getRef()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.TransactionState getState()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.contracts.StateRef extends java.lang.Object
  public <init>(net.corda.core.crypto.SecureHash, int)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash component1()
  public final int component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.StateRef copy(net.corda.core.crypto.SecureHash, int)
  public boolean equals(Object)
  public final int getIndex()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash getTxhash()
  public int hashCode()
  @org.jetbrains.annotations.NotNull public String toString()
##
public final class net.corda.core.contracts.Structures extends java.lang.Object
  @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.SecureHash hash(net.corda.core.contracts.ContractState)
  @org.jetbrains.annotations.NotNull public static final net.corda.core.contracts.Amount withoutIssuer(net.corda.core.contracts.Amount)
##
@net.corda.core.serialization.CordaSerializable public abstract class net.corda.core.contracts.TimeWindow extends java.lang.Object
  public <init>()
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.contracts.TimeWindow between(java.time.Instant, java.time.Instant)
  public abstract boolean contains(java.time.Instant)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.contracts.TimeWindow fromOnly(java.time.Instant)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.contracts.TimeWindow fromStartAndDuration(java.time.Instant, java.time.Duration)
  @org.jetbrains.annotations.Nullable public abstract java.time.Instant getFromTime()
  @org.jetbrains.annotations.Nullable public final java.time.Duration getLength()
  @org.jetbrains.annotations.Nullable public abstract java.time.Instant getMidpoint()
  @org.jetbrains.annotations.Nullable public abstract java.time.Instant getUntilTime()
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.contracts.TimeWindow untilOnly(java.time.Instant)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.contracts.TimeWindow withTolerance(java.time.Instant, java.time.Duration)
  public static final net.corda.core.contracts.TimeWindow$Companion Companion
##
public static final class net.corda.core.contracts.TimeWindow$Companion extends java.lang.Object
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.TimeWindow between(java.time.Instant, java.time.Instant)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.TimeWindow fromOnly(java.time.Instant)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.TimeWindow fromStartAndDuration(java.time.Instant, java.time.Duration)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.TimeWindow untilOnly(java.time.Instant)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.TimeWindow withTolerance(java.time.Instant, java.time.Duration)
##
public interface net.corda.core.contracts.TokenizableAssetInfo
  @org.jetbrains.annotations.NotNull public abstract java.math.BigDecimal getDisplayTokenSize()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.contracts.TransactionResolutionException extends net.corda.core.flows.FlowException
  public <init>(net.corda.core.crypto.SecureHash)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash getHash()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.contracts.TransactionState extends java.lang.Object
  public <init>(net.corda.core.contracts.ContractState, String, net.corda.core.identity.Party)
  public <init>(net.corda.core.contracts.ContractState, String, net.corda.core.identity.Party, Integer)
  public <init>(net.corda.core.contracts.ContractState, String, net.corda.core.identity.Party, Integer, net.corda.core.contracts.AttachmentConstraint)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.ContractState component1()
  @org.jetbrains.annotations.NotNull public final String component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.Party component3()
  @org.jetbrains.annotations.Nullable public final Integer component4()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.AttachmentConstraint component5()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.TransactionState copy(net.corda.core.contracts.ContractState, String, net.corda.core.identity.Party, Integer, net.corda.core.contracts.AttachmentConstraint)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.AttachmentConstraint getConstraint()
  @org.jetbrains.annotations.NotNull public final String getContract()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.ContractState getData()
  @org.jetbrains.annotations.Nullable public final Integer getEncumbrance()
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.Party getNotary()
  public int hashCode()
  public String toString()
##
public final class net.corda.core.contracts.TransactionStateKt extends java.lang.Object
##
@net.corda.core.serialization.CordaSerializable public abstract class net.corda.core.contracts.TransactionVerificationException extends net.corda.core.flows.FlowException
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash getTxId()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.contracts.TransactionVerificationException$ContractConstraintRejection extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, String)
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.contracts.TransactionVerificationException$ContractCreationError extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, String, Throwable)
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.contracts.TransactionVerificationException$ContractRejection extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, net.corda.core.contracts.Contract, Throwable)
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.contracts.TransactionVerificationException$Direction extends java.lang.Enum
  protected <init>(String, int)
  public static net.corda.core.contracts.TransactionVerificationException$Direction valueOf(String)
  public static net.corda.core.contracts.TransactionVerificationException$Direction[] values()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.contracts.TransactionVerificationException$DuplicateInputStates extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, net.corda.core.utilities.NonEmptySet)
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.NonEmptySet getDuplicates()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.contracts.TransactionVerificationException$InvalidNotaryChange extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash)
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.contracts.TransactionVerificationException$MissingAttachmentRejection extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, String)
  @org.jetbrains.annotations.NotNull public final String getContractClass()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.contracts.TransactionVerificationException$MoreThanOneNotary extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash)
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.contracts.TransactionVerificationException$NotaryChangeInWrongTransactionType extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, net.corda.core.identity.Party, net.corda.core.identity.Party)
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.contracts.TransactionVerificationException$SignersMissing extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, List)
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.contracts.TransactionVerificationException$TransactionMissingEncumbranceException extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, int, net.corda.core.contracts.TransactionVerificationException$Direction)
##
@net.corda.core.serialization.CordaSerializable public abstract class net.corda.core.contracts.TypeOnlyCommandData extends java.lang.Object implements net.corda.core.contracts.CommandData
  public <init>()
  public boolean equals(Object)
  public int hashCode()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.contracts.UniqueIdentifier extends java.lang.Object implements java.lang.Comparable
  public <init>()
  public <init>(String, UUID)
  public int compareTo(net.corda.core.contracts.UniqueIdentifier)
  @org.jetbrains.annotations.Nullable public final String component1()
  @org.jetbrains.annotations.NotNull public final UUID component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.UniqueIdentifier copy(String, UUID)
  public boolean equals(Object)
  @org.jetbrains.annotations.Nullable public final String getExternalId()
  @org.jetbrains.annotations.NotNull public final UUID getId()
  public int hashCode()
  @org.jetbrains.annotations.NotNull public String toString()
  public static final net.corda.core.contracts.UniqueIdentifier$Companion Companion
##
public static final class net.corda.core.contracts.UniqueIdentifier$Companion extends java.lang.Object
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.UniqueIdentifier fromString(String)
##
@net.corda.core.serialization.CordaSerializable public interface net.corda.core.contracts.UpgradedContract extends net.corda.core.contracts.Contract
  @org.jetbrains.annotations.NotNull public abstract String getLegacyContract()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.contracts.ContractState upgrade(net.corda.core.contracts.ContractState)
##
@net.corda.core.DoNotImplement public interface net.corda.core.cordapp.Cordapp
  @org.jetbrains.annotations.NotNull public abstract List getContractClassNames()
  @org.jetbrains.annotations.NotNull public abstract List getCordappClasses()
  @org.jetbrains.annotations.NotNull public abstract Set getCustomSchemas()
  @org.jetbrains.annotations.NotNull public abstract List getInitiatedFlows()
  @org.jetbrains.annotations.NotNull public abstract java.net.URL getJarPath()
  @org.jetbrains.annotations.NotNull public abstract String getName()
  @org.jetbrains.annotations.NotNull public abstract List getRpcFlows()
  @org.jetbrains.annotations.NotNull public abstract List getSchedulableFlows()
  @org.jetbrains.annotations.NotNull public abstract List getSerializationWhitelists()
  @org.jetbrains.annotations.NotNull public abstract List getServiceFlows()
  @org.jetbrains.annotations.NotNull public abstract List getServices()
##
public final class net.corda.core.cordapp.CordappContext extends java.lang.Object
  public <init>(net.corda.core.cordapp.Cordapp, net.corda.core.crypto.SecureHash, ClassLoader)
  @org.jetbrains.annotations.Nullable public final net.corda.core.crypto.SecureHash getAttachmentId()
  @org.jetbrains.annotations.NotNull public final ClassLoader getClassLoader()
  @org.jetbrains.annotations.NotNull public final net.corda.core.cordapp.Cordapp getCordapp()
##
@net.corda.core.DoNotImplement public interface net.corda.core.cordapp.CordappProvider
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.cordapp.CordappContext getAppContext()
  @org.jetbrains.annotations.Nullable public abstract net.corda.core.crypto.SecureHash getContractAttachmentID(String)
##
public class net.corda.core.crypto.AddressFormatException extends java.lang.IllegalArgumentException
  public <init>()
  public <init>(String)
##
public class net.corda.core.crypto.Base58 extends java.lang.Object
  public <init>()
  public static byte[] decode(String)
  public static byte[] decodeChecked(String)
  public static java.math.BigInteger decodeToBigInteger(String)
  public static String encode(byte[])
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.crypto.CompositeKey extends java.lang.Object implements java.security.PublicKey
  public final void checkValidity()
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public String getAlgorithm()
  @org.jetbrains.annotations.NotNull public final List getChildren()
  @org.jetbrains.annotations.NotNull public byte[] getEncoded()
  @org.jetbrains.annotations.NotNull public String getFormat()
  @org.jetbrains.annotations.NotNull public final Set getLeafKeys()
  public final int getThreshold()
  public int hashCode()
  public final boolean isFulfilledBy(Iterable)
  public final boolean isFulfilledBy(java.security.PublicKey)
  @org.jetbrains.annotations.NotNull public String toString()
  public static final net.corda.core.crypto.CompositeKey$Companion Companion
  @org.jetbrains.annotations.NotNull public static final String KEY_ALGORITHM = "COMPOSITE"
##
public static final class net.corda.core.crypto.CompositeKey$Builder extends java.lang.Object
  public <init>()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.CompositeKey$Builder addKey(java.security.PublicKey, int)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.CompositeKey$Builder addKeys(List)
  @org.jetbrains.annotations.NotNull public final java.security.PublicKey build(Integer)
##
public static final class net.corda.core.crypto.CompositeKey$Companion extends java.lang.Object
  @org.jetbrains.annotations.NotNull public final java.security.PublicKey getInstance(org.bouncycastle.asn1.ASN1Primitive)
  @org.jetbrains.annotations.NotNull public final java.security.PublicKey getInstance(byte[])
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.crypto.CompositeKey$NodeAndWeight extends org.bouncycastle.asn1.ASN1Object implements java.lang.Comparable
  public <init>(java.security.PublicKey, int)
  public int compareTo(net.corda.core.crypto.CompositeKey$NodeAndWeight)
  @org.jetbrains.annotations.NotNull public final java.security.PublicKey component1()
  public final int component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.CompositeKey$NodeAndWeight copy(java.security.PublicKey, int)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final java.security.PublicKey getNode()
  public final int getWeight()
  public int hashCode()
  @org.jetbrains.annotations.NotNull public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()
  @org.jetbrains.annotations.NotNull public String toString()
##
public final class net.corda.core.crypto.CompositeKeyFactory extends java.security.KeyFactorySpi
  public <init>()
  @org.jetbrains.annotations.NotNull protected java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)
  @org.jetbrains.annotations.Nullable protected java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)
  @org.jetbrains.annotations.NotNull protected java.security.spec.KeySpec engineGetKeySpec(java.security.Key, Class)
  @org.jetbrains.annotations.NotNull protected java.security.Key engineTranslateKey(java.security.Key)
##
public final class net.corda.core.crypto.CompositeSignature extends java.security.Signature
  public <init>()
  @kotlin.Deprecated @org.jetbrains.annotations.NotNull protected Object engineGetParameter(String)
  protected void engineInitSign(java.security.PrivateKey)
  protected void engineInitVerify(java.security.PublicKey)
  @kotlin.Deprecated protected void engineSetParameter(String, Object)
  protected void engineSetParameter(java.security.spec.AlgorithmParameterSpec)
  @org.jetbrains.annotations.NotNull protected byte[] engineSign()
  protected void engineUpdate(byte)
  protected void engineUpdate(byte[], int, int)
  protected boolean engineVerify(byte[])
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final java.security.Provider$Service getService(java.security.Provider)
  public static final net.corda.core.crypto.CompositeSignature$Companion Companion
  @org.jetbrains.annotations.NotNull public static final String SIGNATURE_ALGORITHM = "COMPOSITESIG"
##
public static final class net.corda.core.crypto.CompositeSignature$Companion extends java.lang.Object
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final java.security.Provider$Service getService(java.security.Provider)
##
public static final class net.corda.core.crypto.CompositeSignature$State extends java.lang.Object
  public <init>(java.io.ByteArrayOutputStream, net.corda.core.crypto.CompositeKey)
  @org.jetbrains.annotations.NotNull public final java.io.ByteArrayOutputStream component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.CompositeKey component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.CompositeSignature$State copy(java.io.ByteArrayOutputStream, net.corda.core.crypto.CompositeKey)
  public final boolean engineVerify(byte[])
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final java.io.ByteArrayOutputStream getBuffer()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.CompositeKey getVerifyKey()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.crypto.CompositeSignaturesWithKeys extends java.lang.Object
  public <init>(List)
  @org.jetbrains.annotations.NotNull public final List component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.CompositeSignaturesWithKeys copy(List)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final List getSigs()
  public int hashCode()
  public String toString()
  public static final net.corda.core.crypto.CompositeSignaturesWithKeys$Companion Companion
##
public static final class net.corda.core.crypto.CompositeSignaturesWithKeys$Companion extends java.lang.Object
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.CompositeSignaturesWithKeys getEMPTY()
##
public final class net.corda.core.crypto.CordaObjectIdentifier extends java.lang.Object
  @kotlin.jvm.JvmField @org.jetbrains.annotations.NotNull public static final org.bouncycastle.asn1.ASN1ObjectIdentifier COMPOSITE_KEY
  @kotlin.jvm.JvmField @org.jetbrains.annotations.NotNull public static final org.bouncycastle.asn1.ASN1ObjectIdentifier COMPOSITE_SIGNATURE
  public static final net.corda.core.crypto.CordaObjectIdentifier INSTANCE
##
public final class net.corda.core.crypto.CordaSecurityProvider extends java.security.Provider
  public <init>()
  public static final net.corda.core.crypto.CordaSecurityProvider$Companion Companion
  @org.jetbrains.annotations.NotNull public static final String PROVIDER_NAME = "Corda"
##
public static final class net.corda.core.crypto.CordaSecurityProvider$Companion extends java.lang.Object
##
public final class net.corda.core.crypto.Crypto extends java.lang.Object
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final java.security.PrivateKey decodePrivateKey(String, byte[])
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final java.security.PrivateKey decodePrivateKey(net.corda.core.crypto.SignatureScheme, byte[])
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final java.security.PrivateKey decodePrivateKey(byte[])
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final java.security.PublicKey decodePublicKey(String, byte[])
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final java.security.PublicKey decodePublicKey(net.corda.core.crypto.SignatureScheme, byte[])
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final java.security.PublicKey decodePublicKey(byte[])
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final java.security.KeyPair deriveKeyPair(java.security.PrivateKey, byte[])
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final java.security.KeyPair deriveKeyPair(net.corda.core.crypto.SignatureScheme, java.security.PrivateKey, byte[])
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final java.security.KeyPair deriveKeyPairFromEntropy(java.math.BigInteger)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final java.security.KeyPair deriveKeyPairFromEntropy(net.corda.core.crypto.SignatureScheme, java.math.BigInteger)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final byte[] doSign(String, java.security.PrivateKey, byte[])
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.TransactionSignature doSign(java.security.KeyPair, net.corda.core.crypto.SignableData)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final byte[] doSign(java.security.PrivateKey, byte[])
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final byte[] doSign(net.corda.core.crypto.SignatureScheme, java.security.PrivateKey, byte[])
  @kotlin.jvm.JvmStatic public static final boolean doVerify(String, java.security.PublicKey, byte[], byte[])
  @kotlin.jvm.JvmStatic public static final boolean doVerify(java.security.PublicKey, byte[], byte[])
  @kotlin.jvm.JvmStatic public static final boolean doVerify(net.corda.core.crypto.SecureHash, net.corda.core.crypto.TransactionSignature)
  @kotlin.jvm.JvmStatic public static final boolean doVerify(net.corda.core.crypto.SignatureScheme, java.security.PublicKey, byte[], byte[])
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final java.security.Provider findProvider(String)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.SignatureScheme findSignatureScheme(String)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.SignatureScheme findSignatureScheme(java.security.PrivateKey)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.SignatureScheme findSignatureScheme(java.security.PublicKey)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.SignatureScheme findSignatureScheme(org.bouncycastle.asn1.x509.AlgorithmIdentifier)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final java.security.KeyPair generateKeyPair()
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final java.security.KeyPair generateKeyPair(String)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final java.security.KeyPair generateKeyPair(net.corda.core.crypto.SignatureScheme)
  @kotlin.jvm.JvmStatic public static final boolean isSupportedSignatureScheme(net.corda.core.crypto.SignatureScheme)
  @kotlin.jvm.JvmStatic public static final boolean isValid(java.security.PublicKey, byte[], byte[])
  @kotlin.jvm.JvmStatic public static final boolean isValid(net.corda.core.crypto.SecureHash, net.corda.core.crypto.TransactionSignature)
  @kotlin.jvm.JvmStatic public static final boolean isValid(net.corda.core.crypto.SignatureScheme, java.security.PublicKey, byte[], byte[])
  @kotlin.jvm.JvmStatic public static final boolean publicKeyOnCurve(net.corda.core.crypto.SignatureScheme, java.security.PublicKey)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final List supportedSignatureSchemes()
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final java.security.PrivateKey toSupportedPrivateKey(java.security.PrivateKey)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final java.security.PublicKey toSupportedPublicKey(java.security.PublicKey)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final java.security.PublicKey toSupportedPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)
  @kotlin.jvm.JvmField @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.SignatureScheme COMPOSITE_KEY
  @kotlin.jvm.JvmField @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.SignatureScheme DEFAULT_SIGNATURE_SCHEME
  @kotlin.jvm.JvmField @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.SignatureScheme ECDSA_SECP256K1_SHA256
  @kotlin.jvm.JvmField @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.SignatureScheme ECDSA_SECP256R1_SHA256
  @kotlin.jvm.JvmField @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.SignatureScheme EDDSA_ED25519_SHA512
  public static final net.corda.core.crypto.Crypto INSTANCE
  @kotlin.jvm.JvmField @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.SignatureScheme RSA_SHA256
  @kotlin.jvm.JvmField @org.jetbrains.annotations.NotNull public static final org.bouncycastle.asn1.DLSequence SHA512_256
  @kotlin.jvm.JvmField @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.SignatureScheme SPHINCS256_SHA256
##
public final class net.corda.core.crypto.CryptoUtils extends java.lang.Object
  @org.jetbrains.annotations.NotNull public static final Set byKeys(Iterable)
  @org.jetbrains.annotations.NotNull public static final java.security.PrivateKey component1(java.security.KeyPair)
  @org.jetbrains.annotations.NotNull public static final java.security.PublicKey component2(java.security.KeyPair)
  @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.SecureHash componentHash(net.corda.core.crypto.SecureHash, net.corda.core.utilities.OpaqueBytes)
  @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.SecureHash componentHash(net.corda.core.utilities.OpaqueBytes, net.corda.core.contracts.PrivacySalt, int, int)
  @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.SecureHash$SHA256 computeNonce(net.corda.core.contracts.PrivacySalt, int, int)
  public static final boolean containsAny(java.security.PublicKey, Iterable)
  @org.jetbrains.annotations.NotNull public static final java.security.KeyPair entropyToKeyPair(java.math.BigInteger)
  @org.jetbrains.annotations.NotNull public static final java.security.KeyPair generateKeyPair()
  @org.jetbrains.annotations.NotNull public static final Set getKeys(java.security.PublicKey)
  public static final boolean isFulfilledBy(java.security.PublicKey, Iterable)
  public static final boolean isFulfilledBy(java.security.PublicKey, java.security.PublicKey)
  public static final boolean isValid(java.security.PublicKey, byte[], net.corda.core.crypto.DigitalSignature)
  @org.jetbrains.annotations.NotNull public static final java.security.SecureRandom newSecureRandom()
  public static final long random63BitValue()
  @org.jetbrains.annotations.NotNull public static final byte[] secureRandomBytes(int)
  @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.SecureHash serializedHash(Object)
  @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.TransactionSignature sign(java.security.KeyPair, net.corda.core.crypto.SignableData)
  @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.DigitalSignature$WithKey sign(java.security.KeyPair, net.corda.core.utilities.OpaqueBytes)
  @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.DigitalSignature$WithKey sign(java.security.KeyPair, byte[])
  @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.DigitalSignature sign(java.security.PrivateKey, byte[])
  @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.DigitalSignature$WithKey sign(java.security.PrivateKey, byte[], java.security.PublicKey)
  @org.jetbrains.annotations.NotNull public static final String toStringShort(java.security.PublicKey)
  public static final boolean verify(java.security.KeyPair, byte[], byte[])
  public static final boolean verify(java.security.PublicKey, byte[], net.corda.core.crypto.DigitalSignature)
  public static final boolean verify(java.security.PublicKey, byte[], byte[])
##
@net.corda.core.serialization.CordaSerializable public class net.corda.core.crypto.DigitalSignature extends net.corda.core.utilities.OpaqueBytes
  public <init>(byte[])
##
@net.corda.core.serialization.CordaSerializable public static class net.corda.core.crypto.DigitalSignature$WithKey extends net.corda.core.crypto.DigitalSignature
  public <init>(java.security.PublicKey, byte[])
  @org.jetbrains.annotations.NotNull public final java.security.PublicKey getBy()
  public final boolean isValid(byte[])
  public final boolean verify(net.corda.core.utilities.OpaqueBytes)
  public final boolean verify(byte[])
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.DigitalSignature withoutKey()
##
public abstract class net.corda.core.crypto.MerkleTree extends java.lang.Object
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.crypto.SecureHash getHash()
  public static final net.corda.core.crypto.MerkleTree$Companion Companion
##
public static final class net.corda.core.crypto.MerkleTree$Companion extends java.lang.Object
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.MerkleTree getMerkleTree(List)
##
public static final class net.corda.core.crypto.MerkleTree$Leaf extends net.corda.core.crypto.MerkleTree
  public <init>(net.corda.core.crypto.SecureHash)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.MerkleTree$Leaf copy(net.corda.core.crypto.SecureHash)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public net.corda.core.crypto.SecureHash getHash()
  public int hashCode()
  public String toString()
##
public static final class net.corda.core.crypto.MerkleTree$Node extends net.corda.core.crypto.MerkleTree
  public <init>(net.corda.core.crypto.SecureHash, net.corda.core.crypto.MerkleTree, net.corda.core.crypto.MerkleTree)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.MerkleTree component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.MerkleTree component3()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.MerkleTree$Node copy(net.corda.core.crypto.SecureHash, net.corda.core.crypto.MerkleTree, net.corda.core.crypto.MerkleTree)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public net.corda.core.crypto.SecureHash getHash()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.MerkleTree getLeft()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.MerkleTree getRight()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.crypto.MerkleTreeException extends net.corda.core.CordaException
  public <init>(String)
  @org.jetbrains.annotations.NotNull public final String getReason()
##
public final class net.corda.core.crypto.NullKeys extends java.lang.Object
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.AnonymousParty getNULL_PARTY()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.TransactionSignature getNULL_SIGNATURE()
  public static final net.corda.core.crypto.NullKeys INSTANCE
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.crypto.NullKeys$NullPublicKey extends java.lang.Object implements java.security.PublicKey, java.lang.Comparable
  public int compareTo(java.security.PublicKey)
  @org.jetbrains.annotations.NotNull public String getAlgorithm()
  @org.jetbrains.annotations.NotNull public byte[] getEncoded()
  @org.jetbrains.annotations.NotNull public String getFormat()
  @org.jetbrains.annotations.NotNull public String toString()
  public static final net.corda.core.crypto.NullKeys$NullPublicKey INSTANCE
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.crypto.PartialMerkleTree extends java.lang.Object
  public <init>(net.corda.core.crypto.PartialMerkleTree$PartialTree)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.PartialMerkleTree$PartialTree getRoot()
  public final boolean verify(net.corda.core.crypto.SecureHash, List)
  public static final net.corda.core.crypto.PartialMerkleTree$Companion Companion
##
public static final class net.corda.core.crypto.PartialMerkleTree$Companion extends java.lang.Object
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.PartialMerkleTree build(net.corda.core.crypto.MerkleTree, List)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash rootAndUsedHashes(net.corda.core.crypto.PartialMerkleTree$PartialTree, List)
##
@net.corda.core.serialization.CordaSerializable public abstract static class net.corda.core.crypto.PartialMerkleTree$PartialTree extends java.lang.Object
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.crypto.PartialMerkleTree$PartialTree$IncludedLeaf extends net.corda.core.crypto.PartialMerkleTree$PartialTree
  public <init>(net.corda.core.crypto.SecureHash)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.PartialMerkleTree$PartialTree$IncludedLeaf copy(net.corda.core.crypto.SecureHash)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash getHash()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.crypto.PartialMerkleTree$PartialTree$Leaf extends net.corda.core.crypto.PartialMerkleTree$PartialTree
  public <init>(net.corda.core.crypto.SecureHash)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.PartialMerkleTree$PartialTree$Leaf copy(net.corda.core.crypto.SecureHash)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash getHash()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.crypto.PartialMerkleTree$PartialTree$Node extends net.corda.core.crypto.PartialMerkleTree$PartialTree
  public <init>(net.corda.core.crypto.PartialMerkleTree$PartialTree, net.corda.core.crypto.PartialMerkleTree$PartialTree)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.PartialMerkleTree$PartialTree component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.PartialMerkleTree$PartialTree component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.PartialMerkleTree$PartialTree$Node copy(net.corda.core.crypto.PartialMerkleTree$PartialTree, net.corda.core.crypto.PartialMerkleTree$PartialTree)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.PartialMerkleTree$PartialTree getLeft()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.PartialMerkleTree$PartialTree getRight()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public abstract class net.corda.core.crypto.SecureHash extends net.corda.core.utilities.OpaqueBytes
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash$SHA256 hashConcat(net.corda.core.crypto.SecureHash)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.SecureHash$SHA256 parse(String)
  @org.jetbrains.annotations.NotNull public final String prefixChars(int)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.SecureHash$SHA256 randomSHA256()
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.SecureHash$SHA256 sha256(String)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.SecureHash$SHA256 sha256(byte[])
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.SecureHash$SHA256 sha256Twice(byte[])
  @org.jetbrains.annotations.NotNull public String toString()
  public static final net.corda.core.crypto.SecureHash$Companion Companion
##
public static final class net.corda.core.crypto.SecureHash$Companion extends java.lang.Object
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash$SHA256 getAllOnesHash()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash$SHA256 getZeroHash()
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash$SHA256 parse(String)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash$SHA256 randomSHA256()
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash$SHA256 sha256(String)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash$SHA256 sha256(byte[])
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash$SHA256 sha256Twice(byte[])
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.crypto.SecureHash$SHA256 extends net.corda.core.crypto.SecureHash
  public <init>(byte[])
##
public final class net.corda.core.crypto.SecureHashKt extends java.lang.Object
  @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.SecureHash$SHA256 sha256(net.corda.core.utilities.OpaqueBytes)
  @org.jetbrains.annotations.NotNull public static final net.corda.core.crypto.SecureHash$SHA256 sha256(byte[])
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.crypto.SignableData extends java.lang.Object
  public <init>(net.corda.core.crypto.SecureHash, net.corda.core.crypto.SignatureMetadata)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SignatureMetadata component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SignableData copy(net.corda.core.crypto.SecureHash, net.corda.core.crypto.SignatureMetadata)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SignatureMetadata getSignatureMetadata()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash getTxId()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.crypto.SignatureMetadata extends java.lang.Object
  public <init>(int, int)
  public final int component1()
  public final int component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SignatureMetadata copy(int, int)
  public boolean equals(Object)
  public final int getPlatformVersion()
  public final int getSchemeNumberID()
  public int hashCode()
  public String toString()
##
public final class net.corda.core.crypto.SignatureScheme extends java.lang.Object
  public <init>(int, String, org.bouncycastle.asn1.x509.AlgorithmIdentifier, List, String, String, String, java.security.spec.AlgorithmParameterSpec, Integer, String)
  public final int component1()
  @org.jetbrains.annotations.NotNull public final String component10()
  @org.jetbrains.annotations.NotNull public final String component2()
  @org.jetbrains.annotations.NotNull public final org.bouncycastle.asn1.x509.AlgorithmIdentifier component3()
  @org.jetbrains.annotations.NotNull public final List component4()
  @org.jetbrains.annotations.NotNull public final String component5()
  @org.jetbrains.annotations.NotNull public final String component6()
  @org.jetbrains.annotations.NotNull public final String component7()
  @org.jetbrains.annotations.Nullable public final java.security.spec.AlgorithmParameterSpec component8()
  @org.jetbrains.annotations.Nullable public final Integer component9()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SignatureScheme copy(int, String, org.bouncycastle.asn1.x509.AlgorithmIdentifier, List, String, String, String, java.security.spec.AlgorithmParameterSpec, Integer, String)
  public boolean equals(Object)
  @org.jetbrains.annotations.Nullable public final java.security.spec.AlgorithmParameterSpec getAlgSpec()
  @org.jetbrains.annotations.NotNull public final String getAlgorithmName()
  @org.jetbrains.annotations.NotNull public final List getAlternativeOIDs()
  @org.jetbrains.annotations.NotNull public final String getDesc()
  @org.jetbrains.annotations.Nullable public final Integer getKeySize()
  @org.jetbrains.annotations.NotNull public final String getProviderName()
  @org.jetbrains.annotations.NotNull public final String getSchemeCodeName()
  public final int getSchemeNumberID()
  @org.jetbrains.annotations.NotNull public final String getSignatureName()
  @org.jetbrains.annotations.NotNull public final org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignatureOID()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public class net.corda.core.crypto.SignedData extends java.lang.Object
  public <init>(net.corda.core.serialization.SerializedBytes, net.corda.core.crypto.DigitalSignature$WithKey)
  @org.jetbrains.annotations.NotNull public final net.corda.core.serialization.SerializedBytes getRaw()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.DigitalSignature$WithKey getSig()
  @org.jetbrains.annotations.NotNull public final Object verified()
  protected void verifyData(Object)
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.crypto.TransactionSignature extends net.corda.core.crypto.DigitalSignature
  public <init>(byte[], java.security.PublicKey, net.corda.core.crypto.SignatureMetadata)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final java.security.PublicKey getBy()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SignatureMetadata getSignatureMetadata()
  public int hashCode()
  public final boolean isValid(net.corda.core.crypto.SecureHash)
  public final boolean verify(net.corda.core.crypto.SecureHash)
##
public abstract class net.corda.core.flows.AbstractStateReplacementFlow extends java.lang.Object
  public <init>()
##
public abstract static class net.corda.core.flows.AbstractStateReplacementFlow$Acceptor extends net.corda.core.flows.FlowLogic
  public <init>(net.corda.core.flows.FlowSession)
  public <init>(net.corda.core.flows.FlowSession, net.corda.core.utilities.ProgressTracker)
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.Nullable public Void call()
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.FlowSession getInitiatingSession()
  @org.jetbrains.annotations.NotNull public net.corda.core.utilities.ProgressTracker getProgressTracker()
  protected abstract void verifyProposal(net.corda.core.transactions.SignedTransaction, net.corda.core.flows.AbstractStateReplacementFlow$Proposal)
  public static final net.corda.core.flows.AbstractStateReplacementFlow$Acceptor$Companion Companion
##
public static final class net.corda.core.flows.AbstractStateReplacementFlow$Acceptor$Companion extends java.lang.Object
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ProgressTracker tracker()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.flows.AbstractStateReplacementFlow$Acceptor$Companion$APPROVING extends net.corda.core.utilities.ProgressTracker$Step
  public static final net.corda.core.flows.AbstractStateReplacementFlow$Acceptor$Companion$APPROVING INSTANCE
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.flows.AbstractStateReplacementFlow$Acceptor$Companion$VERIFYING extends net.corda.core.utilities.ProgressTracker$Step
  public static final net.corda.core.flows.AbstractStateReplacementFlow$Acceptor$Companion$VERIFYING INSTANCE
##
public abstract static class net.corda.core.flows.AbstractStateReplacementFlow$Instigator extends net.corda.core.flows.FlowLogic
  public <init>(net.corda.core.contracts.StateAndRef, Object, net.corda.core.utilities.ProgressTracker)
  @org.jetbrains.annotations.NotNull protected abstract net.corda.core.flows.AbstractStateReplacementFlow$UpgradeTx assembleTx()
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public net.corda.core.contracts.StateAndRef call()
  public final Object getModification()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.StateAndRef getOriginalState()
  @org.jetbrains.annotations.NotNull public List getParticipantSessions()
  @org.jetbrains.annotations.NotNull public net.corda.core.utilities.ProgressTracker getProgressTracker()
  public static final net.corda.core.flows.AbstractStateReplacementFlow$Instigator$Companion Companion
##
public static final class net.corda.core.flows.AbstractStateReplacementFlow$Instigator$Companion extends java.lang.Object
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ProgressTracker tracker()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.flows.AbstractStateReplacementFlow$Instigator$Companion$NOTARY extends net.corda.core.utilities.ProgressTracker$Step
  public static final net.corda.core.flows.AbstractStateReplacementFlow$Instigator$Companion$NOTARY INSTANCE
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.flows.AbstractStateReplacementFlow$Instigator$Companion$SIGNING extends net.corda.core.utilities.ProgressTracker$Step
  public static final net.corda.core.flows.AbstractStateReplacementFlow$Instigator$Companion$SIGNING INSTANCE
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.flows.AbstractStateReplacementFlow$Proposal extends java.lang.Object
  public <init>(net.corda.core.contracts.StateRef, Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.StateRef component1()
  public final Object component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.AbstractStateReplacementFlow$Proposal copy(net.corda.core.contracts.StateRef, Object)
  public boolean equals(Object)
  public final Object getModification()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.StateRef getStateRef()
  public int hashCode()
  public String toString()
##
public static final class net.corda.core.flows.AbstractStateReplacementFlow$UpgradeTx extends java.lang.Object
  public <init>(net.corda.core.transactions.SignedTransaction)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.SignedTransaction component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.AbstractStateReplacementFlow$UpgradeTx copy(net.corda.core.transactions.SignedTransaction)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.SignedTransaction getStx()
  public int hashCode()
  public String toString()
##
@co.paralleluniverse.fibers.Suspendable public final class net.corda.core.flows.CollectSignatureFlow extends net.corda.core.flows.FlowLogic
  public <init>(net.corda.core.transactions.SignedTransaction, net.corda.core.flows.FlowSession, List)
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public List call()
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.SignedTransaction getPartiallySignedTx()
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.FlowSession getSession()
  @org.jetbrains.annotations.NotNull public final List getSigningKeys()
##
public final class net.corda.core.flows.CollectSignaturesFlow extends net.corda.core.flows.FlowLogic
  public <init>(net.corda.core.transactions.SignedTransaction, Collection)
  public <init>(net.corda.core.transactions.SignedTransaction, Collection, Iterable)
  public <init>(net.corda.core.transactions.SignedTransaction, Collection, Iterable, net.corda.core.utilities.ProgressTracker)
  public <init>(net.corda.core.transactions.SignedTransaction, Collection, net.corda.core.utilities.ProgressTracker)
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public net.corda.core.transactions.SignedTransaction call()
  @org.jetbrains.annotations.Nullable public final Iterable getMyOptionalKeys()
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.SignedTransaction getPartiallySignedTx()
  @org.jetbrains.annotations.NotNull public net.corda.core.utilities.ProgressTracker getProgressTracker()
  @org.jetbrains.annotations.NotNull public final Collection getSessionsToCollectFrom()
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.utilities.ProgressTracker tracker()
  public static final net.corda.core.flows.CollectSignaturesFlow$Companion Companion
##
public static final class net.corda.core.flows.CollectSignaturesFlow$Companion extends java.lang.Object
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ProgressTracker tracker()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.flows.CollectSignaturesFlow$Companion$COLLECTING extends net.corda.core.utilities.ProgressTracker$Step
  public static final net.corda.core.flows.CollectSignaturesFlow$Companion$COLLECTING INSTANCE
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.flows.CollectSignaturesFlow$Companion$VERIFYING extends net.corda.core.utilities.ProgressTracker$Step
  public static final net.corda.core.flows.CollectSignaturesFlow$Companion$VERIFYING INSTANCE
##
public final class net.corda.core.flows.ContractUpgradeFlow extends java.lang.Object
  public static final net.corda.core.flows.ContractUpgradeFlow INSTANCE
##
@net.corda.core.flows.StartableByRPC public static final class net.corda.core.flows.ContractUpgradeFlow$Authorise extends net.corda.core.flows.FlowLogic
  public <init>(net.corda.core.contracts.StateAndRef, Class)
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.Nullable public Void call()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.StateAndRef getStateAndRef()
##
@net.corda.core.flows.StartableByRPC public static final class net.corda.core.flows.ContractUpgradeFlow$Deauthorise extends net.corda.core.flows.FlowLogic
  public <init>(net.corda.core.contracts.StateRef)
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.Nullable public Void call()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.StateRef getStateRef()
##
@net.corda.core.flows.InitiatingFlow @net.corda.core.flows.StartableByRPC public static final class net.corda.core.flows.ContractUpgradeFlow$Initiate extends net.corda.core.flows.AbstractStateReplacementFlow$Instigator
  public <init>(net.corda.core.contracts.StateAndRef, Class)
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull protected net.corda.core.flows.AbstractStateReplacementFlow$UpgradeTx assembleTx()
##
public abstract class net.corda.core.flows.DataVendingFlow extends net.corda.core.flows.FlowLogic
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.Nullable public Void call()
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.FlowSession getOtherSideSession()
  @org.jetbrains.annotations.NotNull public final Object getPayload()
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull protected net.corda.core.utilities.UntrustworthyData sendPayloadAndReceiveDataRequest(net.corda.core.flows.FlowSession, Object)
  @co.paralleluniverse.fibers.Suspendable protected void verifyDataRequest(net.corda.core.internal.FetchDataFlow$Request$Data)
##
@net.corda.core.flows.InitiatingFlow public final class net.corda.core.flows.FinalityFlow extends net.corda.core.flows.FlowLogic
  public <init>(net.corda.core.transactions.SignedTransaction)
  public <init>(net.corda.core.transactions.SignedTransaction, Set)
  public <init>(net.corda.core.transactions.SignedTransaction, Set, net.corda.core.utilities.ProgressTracker)
  public <init>(net.corda.core.transactions.SignedTransaction, net.corda.core.utilities.ProgressTracker)
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public net.corda.core.transactions.SignedTransaction call()
  @org.jetbrains.annotations.NotNull public net.corda.core.utilities.ProgressTracker getProgressTracker()
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.SignedTransaction getTransaction()
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.utilities.ProgressTracker tracker()
  public static final net.corda.core.flows.FinalityFlow$Companion Companion
##
public static final class net.corda.core.flows.FinalityFlow$Companion extends java.lang.Object
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ProgressTracker tracker()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.flows.FinalityFlow$Companion$BROADCASTING extends net.corda.core.utilities.ProgressTracker$Step
  public static final net.corda.core.flows.FinalityFlow$Companion$BROADCASTING INSTANCE
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.flows.FinalityFlow$Companion$NOTARISING extends net.corda.core.utilities.ProgressTracker$Step
  @org.jetbrains.annotations.NotNull public net.corda.core.utilities.ProgressTracker childProgressTracker()
  public static final net.corda.core.flows.FinalityFlow$Companion$NOTARISING INSTANCE
##
@net.corda.core.serialization.CordaSerializable public class net.corda.core.flows.FlowException extends net.corda.core.CordaException
  public <init>()
  public <init>(String)
  public <init>(String, Throwable)
  public <init>(Throwable)
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.flows.FlowInfo extends java.lang.Object
  public <init>(int, String)
  public final int component1()
  @org.jetbrains.annotations.NotNull public final String component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.FlowInfo copy(int, String)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final String getAppName()
  public final int getFlowVersion()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public abstract class net.corda.core.flows.FlowInitiator extends java.lang.Object implements java.security.Principal
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.flows.FlowInitiator$Peer extends net.corda.core.flows.FlowInitiator
  public <init>(net.corda.core.identity.Party)
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.Party component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.FlowInitiator$Peer copy(net.corda.core.identity.Party)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public String getName()
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.Party getParty()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.flows.FlowInitiator$RPC extends net.corda.core.flows.FlowInitiator
  public <init>(String)
  @org.jetbrains.annotations.NotNull public final String component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.FlowInitiator$RPC copy(String)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public String getName()
  @org.jetbrains.annotations.NotNull public final String getUsername()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.flows.FlowInitiator$Scheduled extends net.corda.core.flows.FlowInitiator
  public <init>(net.corda.core.contracts.ScheduledStateRef)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.ScheduledStateRef component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.FlowInitiator$Scheduled copy(net.corda.core.contracts.ScheduledStateRef)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public String getName()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.ScheduledStateRef getScheduledState()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.flows.FlowInitiator$Service extends net.corda.core.flows.FlowInitiator
  public <init>(String)
  @org.jetbrains.annotations.NotNull public final String component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.FlowInitiator$Service copy(String)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public String getName()
  @org.jetbrains.annotations.NotNull public final String getServiceClassName()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.flows.FlowInitiator$Shell extends net.corda.core.flows.FlowInitiator
  @org.jetbrains.annotations.NotNull public String getName()
  public static final net.corda.core.flows.FlowInitiator$Shell INSTANCE
##
public abstract class net.corda.core.flows.FlowLogic extends java.lang.Object
  public <init>()
  @co.paralleluniverse.fibers.Suspendable public abstract Object call()
  public final void checkFlowPermission(String, Map)
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.Nullable public final net.corda.core.flows.FlowStackSnapshot flowStackSnapshot()
  @org.jetbrains.annotations.Nullable public static final net.corda.core.flows.FlowLogic getCurrentTopLevel()
  @kotlin.Deprecated @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public final net.corda.core.flows.FlowInfo getFlowInfo(net.corda.core.identity.Party)
  @org.jetbrains.annotations.NotNull public final org.slf4j.Logger getLogger()
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.Party getOurIdentity()
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.PartyAndCertificate getOurIdentityAndCert()
  @org.jetbrains.annotations.Nullable public net.corda.core.utilities.ProgressTracker getProgressTracker()
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.StateMachineRunId getRunId()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.ServiceHub getServiceHub()
  @org.jetbrains.annotations.NotNull public final net.corda.core.internal.FlowStateMachine getStateMachine()
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public final net.corda.core.flows.FlowSession initiateFlow(net.corda.core.identity.Party)
  @co.paralleluniverse.fibers.Suspendable public final void persistFlowStackSnapshot()
  @kotlin.Deprecated @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public net.corda.core.utilities.UntrustworthyData receive(Class, net.corda.core.identity.Party)
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public List receiveAll(Class, List)
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public Map receiveAll(Map)
  public final void recordAuditEvent(String, String, Map)
  @kotlin.Deprecated @co.paralleluniverse.fibers.Suspendable public void send(net.corda.core.identity.Party, Object)
  @kotlin.Deprecated @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public net.corda.core.utilities.UntrustworthyData sendAndReceive(Class, net.corda.core.identity.Party, Object)
  public final void setStateMachine(net.corda.core.internal.FlowStateMachine)
  @co.paralleluniverse.fibers.Suspendable @kotlin.jvm.JvmStatic public static final void sleep(java.time.Duration)
  @co.paralleluniverse.fibers.Suspendable public Object subFlow(net.corda.core.flows.FlowLogic)
  @org.jetbrains.annotations.Nullable public final net.corda.core.messaging.DataFeed track()
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.SignedTransaction waitForLedgerCommit(net.corda.core.crypto.SecureHash)
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.SignedTransaction waitForLedgerCommit(net.corda.core.crypto.SecureHash, boolean)
  public static final net.corda.core.flows.FlowLogic$Companion Companion
##
public static final class net.corda.core.flows.FlowLogic$Companion extends java.lang.Object
  @org.jetbrains.annotations.Nullable public final net.corda.core.flows.FlowLogic getCurrentTopLevel()
  @co.paralleluniverse.fibers.Suspendable @kotlin.jvm.JvmStatic public final void sleep(java.time.Duration)
##
@net.corda.core.serialization.CordaSerializable @net.corda.core.DoNotImplement public interface net.corda.core.flows.FlowLogicRef
##
@net.corda.core.DoNotImplement public interface net.corda.core.flows.FlowLogicRefFactory
##
@net.corda.core.DoNotImplement public abstract class net.corda.core.flows.FlowSession extends java.lang.Object
  public <init>()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.identity.Party getCounterparty()
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public abstract net.corda.core.flows.FlowInfo getCounterpartyFlowInfo()
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public abstract net.corda.core.flows.FlowInfo getCounterpartyFlowInfo(boolean)
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public abstract net.corda.core.utilities.UntrustworthyData receive(Class)
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public abstract net.corda.core.utilities.UntrustworthyData receive(Class, boolean)
  @co.paralleluniverse.fibers.Suspendable public abstract void send(Object)
  @co.paralleluniverse.fibers.Suspendable public abstract void send(Object, boolean)
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public abstract net.corda.core.utilities.UntrustworthyData sendAndReceive(Class, Object)
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public abstract net.corda.core.utilities.UntrustworthyData sendAndReceive(Class, Object, boolean)
##
public final class net.corda.core.flows.FlowStackSnapshot extends java.lang.Object
  public <init>(java.time.Instant, String, List)
  @org.jetbrains.annotations.NotNull public final java.time.Instant component1()
  @org.jetbrains.annotations.NotNull public final String component2()
  @org.jetbrains.annotations.NotNull public final List component3()
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.FlowStackSnapshot copy(java.time.Instant, String, List)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final String getFlowClass()
  @org.jetbrains.annotations.NotNull public final List getStackFrames()
  @org.jetbrains.annotations.NotNull public final java.time.Instant getTime()
  public int hashCode()
  public String toString()
##
public static final class net.corda.core.flows.FlowStackSnapshot$Frame extends java.lang.Object
  public <init>(StackTraceElement, List)
  @org.jetbrains.annotations.NotNull public final StackTraceElement component1()
  @org.jetbrains.annotations.NotNull public final List component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.FlowStackSnapshot$Frame copy(StackTraceElement, List)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final List getStackObjects()
  @org.jetbrains.annotations.NotNull public final StackTraceElement getStackTraceElement()
  public int hashCode()
  @org.jetbrains.annotations.NotNull public String toString()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.flows.IllegalFlowLogicException extends java.lang.IllegalArgumentException
  public <init>(Class, String)
##
public @interface net.corda.core.flows.InitiatedBy
  public abstract Class value()
##
public @interface net.corda.core.flows.InitiatingFlow
  public abstract int version()
##
@net.corda.core.flows.InitiatingFlow public final class net.corda.core.flows.NotaryChangeFlow extends net.corda.core.flows.AbstractStateReplacementFlow$Instigator
  public <init>(net.corda.core.contracts.StateAndRef, net.corda.core.identity.Party, net.corda.core.utilities.ProgressTracker)
  @org.jetbrains.annotations.NotNull protected net.corda.core.flows.AbstractStateReplacementFlow$UpgradeTx assembleTx()
##
@net.corda.core.serialization.CordaSerializable public abstract class net.corda.core.flows.NotaryError extends java.lang.Object
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.flows.NotaryError$Conflict extends net.corda.core.flows.NotaryError
  public <init>(net.corda.core.crypto.SecureHash, net.corda.core.crypto.SignedData)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SignedData component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.NotaryError$Conflict copy(net.corda.core.crypto.SecureHash, net.corda.core.crypto.SignedData)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SignedData getConflict()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash getTxId()
  public int hashCode()
  @org.jetbrains.annotations.NotNull public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.flows.NotaryError$TimeWindowInvalid extends net.corda.core.flows.NotaryError
  public static final net.corda.core.flows.NotaryError$TimeWindowInvalid INSTANCE
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.flows.NotaryError$TransactionInvalid extends net.corda.core.flows.NotaryError
  public <init>(Throwable)
  @org.jetbrains.annotations.NotNull public final Throwable component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.NotaryError$TransactionInvalid copy(Throwable)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final Throwable getCause()
  public int hashCode()
  @org.jetbrains.annotations.NotNull public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.flows.NotaryError$WrongNotary extends net.corda.core.flows.NotaryError
  public static final net.corda.core.flows.NotaryError$WrongNotary INSTANCE
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.flows.NotaryException extends net.corda.core.flows.FlowException
  public <init>(net.corda.core.flows.NotaryError)
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.NotaryError getError()
##
public final class net.corda.core.flows.NotaryFlow extends java.lang.Object
  public <init>()
##
@net.corda.core.flows.InitiatingFlow public static class net.corda.core.flows.NotaryFlow$Client extends net.corda.core.flows.FlowLogic
  public <init>(net.corda.core.transactions.SignedTransaction)
  public <init>(net.corda.core.transactions.SignedTransaction, net.corda.core.utilities.ProgressTracker)
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public List call()
  @org.jetbrains.annotations.NotNull public net.corda.core.utilities.ProgressTracker getProgressTracker()
  public static final net.corda.core.flows.NotaryFlow$Client$Companion Companion
##
public static final class net.corda.core.flows.NotaryFlow$Client$Companion extends java.lang.Object
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ProgressTracker tracker()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.flows.NotaryFlow$Client$Companion$REQUESTING extends net.corda.core.utilities.ProgressTracker$Step
  public static final net.corda.core.flows.NotaryFlow$Client$Companion$REQUESTING INSTANCE
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.flows.NotaryFlow$Client$Companion$VALIDATING extends net.corda.core.utilities.ProgressTracker$Step
  public static final net.corda.core.flows.NotaryFlow$Client$Companion$VALIDATING INSTANCE
##
public abstract static class net.corda.core.flows.NotaryFlow$Service extends net.corda.core.flows.FlowLogic
  public <init>(net.corda.core.flows.FlowSession, net.corda.core.node.services.TrustedAuthorityNotaryService)
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.Nullable public Void call()
  @co.paralleluniverse.fibers.Suspendable protected final void checkNotary(net.corda.core.identity.Party)
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.FlowSession getOtherSideSession()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.TrustedAuthorityNotaryService getService()
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public abstract net.corda.core.flows.TransactionParts receiveAndVerifyTx()
##
public final class net.corda.core.flows.ReceiveStateAndRefFlow extends net.corda.core.flows.FlowLogic
  public <init>(net.corda.core.flows.FlowSession)
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public List call()
##
public final class net.corda.core.flows.ReceiveTransactionFlow extends net.corda.core.flows.FlowLogic
  public <init>(net.corda.core.flows.FlowSession)
  public <init>(net.corda.core.flows.FlowSession, boolean)
  public <init>(net.corda.core.flows.FlowSession, boolean, net.corda.core.node.StatesToRecord)
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public net.corda.core.transactions.SignedTransaction call()
##
public @interface net.corda.core.flows.SchedulableFlow
##
public class net.corda.core.flows.SendStateAndRefFlow extends net.corda.core.flows.DataVendingFlow
  public <init>(net.corda.core.flows.FlowSession, List)
##
public class net.corda.core.flows.SendTransactionFlow extends net.corda.core.flows.DataVendingFlow
  public <init>(net.corda.core.flows.FlowSession, net.corda.core.transactions.SignedTransaction)
##
public abstract class net.corda.core.flows.SignTransactionFlow extends net.corda.core.flows.FlowLogic
  public <init>(net.corda.core.flows.FlowSession, net.corda.core.utilities.ProgressTracker)
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public net.corda.core.transactions.SignedTransaction call()
  @co.paralleluniverse.fibers.Suspendable protected abstract void checkTransaction(net.corda.core.transactions.SignedTransaction)
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.FlowSession getOtherSideSession()
  @org.jetbrains.annotations.NotNull public net.corda.core.utilities.ProgressTracker getProgressTracker()
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.utilities.ProgressTracker tracker()
  public static final net.corda.core.flows.SignTransactionFlow$Companion Companion
##
public static final class net.corda.core.flows.SignTransactionFlow$Companion extends java.lang.Object
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ProgressTracker tracker()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.flows.SignTransactionFlow$Companion$RECEIVING extends net.corda.core.utilities.ProgressTracker$Step
  public static final net.corda.core.flows.SignTransactionFlow$Companion$RECEIVING INSTANCE
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.flows.SignTransactionFlow$Companion$SIGNING extends net.corda.core.utilities.ProgressTracker$Step
  public static final net.corda.core.flows.SignTransactionFlow$Companion$SIGNING INSTANCE
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.flows.SignTransactionFlow$Companion$VERIFYING extends net.corda.core.utilities.ProgressTracker$Step
  public static final net.corda.core.flows.SignTransactionFlow$Companion$VERIFYING INSTANCE
##
public final class net.corda.core.flows.StackFrameDataToken extends java.lang.Object
  public <init>(String)
  @org.jetbrains.annotations.NotNull public final String component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.StackFrameDataToken copy(String)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final String getClassName()
  public int hashCode()
  public String toString()
##
public @interface net.corda.core.flows.StartableByRPC
##
public @interface net.corda.core.flows.StartableByService
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.flows.StateMachineRunId extends java.lang.Object
  public <init>(UUID)
  @org.jetbrains.annotations.NotNull public final UUID component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.StateMachineRunId copy(UUID)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final UUID getUuid()
  public int hashCode()
  @org.jetbrains.annotations.NotNull public String toString()
  public static final net.corda.core.flows.StateMachineRunId$Companion Companion
##
public static final class net.corda.core.flows.StateMachineRunId$Companion extends java.lang.Object
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.StateMachineRunId createRandom()
##
@net.corda.core.serialization.CordaSerializable public class net.corda.core.flows.StateReplacementException extends net.corda.core.flows.FlowException
  public <init>()
  public <init>(String)
  public <init>(String, Throwable)
##
public final class net.corda.core.flows.TransactionParts extends java.lang.Object
  public <init>(net.corda.core.crypto.SecureHash, List, net.corda.core.contracts.TimeWindow, net.corda.core.identity.Party)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash component1()
  @org.jetbrains.annotations.NotNull public final List component2()
  @org.jetbrains.annotations.Nullable public final net.corda.core.contracts.TimeWindow component3()
  @org.jetbrains.annotations.Nullable public final net.corda.core.identity.Party component4()
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.TransactionParts copy(net.corda.core.crypto.SecureHash, List, net.corda.core.contracts.TimeWindow, net.corda.core.identity.Party)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash getId()
  @org.jetbrains.annotations.NotNull public final List getInputs()
  @org.jetbrains.annotations.Nullable public final net.corda.core.identity.Party getNotary()
  @org.jetbrains.annotations.Nullable public final net.corda.core.contracts.TimeWindow getTimestamp()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.flows.UnexpectedFlowEndException extends net.corda.core.CordaRuntimeException
  public <init>(String)
  public <init>(String, Throwable)
##
@net.corda.core.serialization.CordaSerializable @net.corda.core.DoNotImplement public abstract class net.corda.core.identity.AbstractParty extends java.lang.Object
  public <init>(java.security.PublicKey)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final java.security.PublicKey getOwningKey()
  public int hashCode()
  @org.jetbrains.annotations.Nullable public abstract net.corda.core.identity.CordaX500Name nameOrNull()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.contracts.PartyAndReference ref(net.corda.core.utilities.OpaqueBytes)
##
@net.corda.core.serialization.CordaSerializable @net.corda.core.DoNotImplement public final class net.corda.core.identity.AnonymousParty extends net.corda.core.identity.AbstractParty
  public <init>(java.security.PublicKey)
  @org.jetbrains.annotations.Nullable public net.corda.core.identity.CordaX500Name nameOrNull()
  @org.jetbrains.annotations.NotNull public net.corda.core.contracts.PartyAndReference ref(net.corda.core.utilities.OpaqueBytes)
  @org.jetbrains.annotations.NotNull public String toString()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.identity.CordaX500Name extends java.lang.Object
  public <init>(String, String, String)
  public <init>(String, String, String, String)
  public <init>(String, String, String, String, String, String)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.identity.CordaX500Name build(javax.security.auth.x500.X500Principal)
  @org.jetbrains.annotations.Nullable public final String component1()
  @org.jetbrains.annotations.Nullable public final String component2()
  @org.jetbrains.annotations.NotNull public final String component3()
  @org.jetbrains.annotations.NotNull public final String component4()
  @org.jetbrains.annotations.Nullable public final String component5()
  @org.jetbrains.annotations.NotNull public final String component6()
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.CordaX500Name copy(String, String, String, String, String, String)
  public boolean equals(Object)
  @org.jetbrains.annotations.Nullable public final String getCommonName()
  @org.jetbrains.annotations.NotNull public final String getCountry()
  @org.jetbrains.annotations.NotNull public final String getLocality()
  @org.jetbrains.annotations.NotNull public final String getOrganisation()
  @org.jetbrains.annotations.Nullable public final String getOrganisationUnit()
  @org.jetbrains.annotations.Nullable public final String getState()
  @org.jetbrains.annotations.NotNull public final javax.security.auth.x500.X500Principal getX500Principal()
  public int hashCode()
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.identity.CordaX500Name parse(String)
  @org.jetbrains.annotations.NotNull public String toString()
  public static final net.corda.core.identity.CordaX500Name$Companion Companion
  public static final int LENGTH_COUNTRY = 2
  public static final int MAX_LENGTH_COMMON_NAME = 64
  public static final int MAX_LENGTH_LOCALITY = 64
  public static final int MAX_LENGTH_ORGANISATION = 128
  public static final int MAX_LENGTH_ORGANISATION_UNIT = 64
  public static final int MAX_LENGTH_STATE = 64
##
public static final class net.corda.core.identity.CordaX500Name$Companion extends java.lang.Object
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.identity.CordaX500Name build(javax.security.auth.x500.X500Principal)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.identity.CordaX500Name parse(String)
##
public final class net.corda.core.identity.IdentityUtils extends java.lang.Object
  @org.jetbrains.annotations.NotNull public static final Map excludeHostNode(net.corda.core.node.ServiceHub, Map)
  @org.jetbrains.annotations.NotNull public static final Map excludeNotary(Map, net.corda.core.transactions.SignedTransaction)
  @org.jetbrains.annotations.NotNull public static final Map groupAbstractPartyByWellKnownParty(net.corda.core.node.ServiceHub, Collection)
  @org.jetbrains.annotations.NotNull public static final Map groupAbstractPartyByWellKnownParty(net.corda.core.node.ServiceHub, Collection, boolean)
  @org.jetbrains.annotations.NotNull public static final Map groupPublicKeysByWellKnownParty(net.corda.core.node.ServiceHub, Collection)
  @org.jetbrains.annotations.NotNull public static final Map groupPublicKeysByWellKnownParty(net.corda.core.node.ServiceHub, Collection, boolean)
##
@net.corda.core.serialization.CordaSerializable @net.corda.core.DoNotImplement public final class net.corda.core.identity.Party extends net.corda.core.identity.AbstractParty
  public <init>(java.security.cert.X509Certificate)
  public <init>(net.corda.core.identity.CordaX500Name, java.security.PublicKey)
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.AnonymousParty anonymise()
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.CordaX500Name getName()
  @org.jetbrains.annotations.NotNull public net.corda.core.identity.CordaX500Name nameOrNull()
  @org.jetbrains.annotations.NotNull public net.corda.core.contracts.PartyAndReference ref(net.corda.core.utilities.OpaqueBytes)
  @org.jetbrains.annotations.NotNull public String toString()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.identity.PartyAndCertificate extends java.lang.Object
  public <init>(java.security.cert.CertPath)
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.Party component1()
  @org.jetbrains.annotations.NotNull public final java.security.cert.X509Certificate component2()
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final java.security.cert.CertPath getCertPath()
  @org.jetbrains.annotations.NotNull public final java.security.cert.X509Certificate getCertificate()
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.CordaX500Name getName()
  @org.jetbrains.annotations.NotNull public final java.security.PublicKey getOwningKey()
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.Party getParty()
  public int hashCode()
  @org.jetbrains.annotations.NotNull public String toString()
  @org.jetbrains.annotations.NotNull public final java.security.cert.PKIXCertPathValidatorResult verify(java.security.cert.TrustAnchor)
##
@net.corda.core.serialization.CordaSerializable public interface net.corda.core.messaging.AllPossibleRecipients extends net.corda.core.messaging.MessageRecipients
##
@net.corda.core.DoNotImplement public interface net.corda.core.messaging.CordaRPCOps extends net.corda.core.messaging.RPCOps
  public abstract void addVaultTransactionNote(net.corda.core.crypto.SecureHash, String)
  public abstract boolean attachmentExists(net.corda.core.crypto.SecureHash)
  public abstract void clearNetworkMapCache()
  @org.jetbrains.annotations.NotNull public abstract java.time.Instant currentNodeTime()
  public abstract int getProtocolVersion()
  @org.jetbrains.annotations.NotNull public abstract Iterable getVaultTransactionNotes(net.corda.core.crypto.SecureHash)
  @kotlin.Deprecated @net.corda.core.messaging.RPCReturnsObservables @org.jetbrains.annotations.NotNull public abstract net.corda.core.messaging.DataFeed internalVerifiedTransactionsFeed()
  @kotlin.Deprecated @org.jetbrains.annotations.NotNull public abstract List internalVerifiedTransactionsSnapshot()
  @net.corda.core.messaging.RPCReturnsObservables @org.jetbrains.annotations.NotNull public abstract net.corda.core.messaging.DataFeed networkMapFeed()
  @org.jetbrains.annotations.NotNull public abstract List networkMapSnapshot()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.NodeInfo nodeInfo()
  @org.jetbrains.annotations.Nullable public abstract net.corda.core.node.NodeInfo nodeInfoFromParty(net.corda.core.identity.AbstractParty)
  @org.jetbrains.annotations.NotNull public abstract List notaryIdentities()
  @org.jetbrains.annotations.Nullable public abstract net.corda.core.identity.Party notaryPartyFromX500Name(net.corda.core.identity.CordaX500Name)
  @org.jetbrains.annotations.NotNull public abstract java.io.InputStream openAttachment(net.corda.core.crypto.SecureHash)
  @org.jetbrains.annotations.NotNull public abstract Set partiesFromName(String, boolean)
  @org.jetbrains.annotations.Nullable public abstract net.corda.core.identity.Party partyFromKey(java.security.PublicKey)
  @org.jetbrains.annotations.NotNull public abstract List queryAttachments(net.corda.core.node.services.vault.AttachmentQueryCriteria, net.corda.core.node.services.vault.AttachmentSort)
  @org.jetbrains.annotations.NotNull public abstract List registeredFlows()
  @net.corda.core.messaging.RPCReturnsObservables @org.jetbrains.annotations.NotNull public abstract net.corda.core.messaging.DataFeed stateMachineRecordedTransactionMappingFeed()
  @org.jetbrains.annotations.NotNull public abstract List stateMachineRecordedTransactionMappingSnapshot()
  @net.corda.core.messaging.RPCReturnsObservables @org.jetbrains.annotations.NotNull public abstract net.corda.core.messaging.DataFeed stateMachinesFeed()
  @org.jetbrains.annotations.NotNull public abstract List stateMachinesSnapshot()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.crypto.SecureHash uploadAttachment(java.io.InputStream)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.crypto.SecureHash uploadAttachmentWithMetadata(java.io.InputStream, String, String)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.services.Vault$Page vaultQuery(Class)
  @net.corda.core.messaging.RPCReturnsObservables @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.services.Vault$Page vaultQueryBy(net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.PageSpecification, net.corda.core.node.services.vault.Sort, Class)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.services.Vault$Page vaultQueryByCriteria(net.corda.core.node.services.vault.QueryCriteria, Class)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.services.Vault$Page vaultQueryByWithPagingSpec(Class, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.PageSpecification)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.services.Vault$Page vaultQueryByWithSorting(Class, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.Sort)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.messaging.DataFeed vaultTrack(Class)
  @net.corda.core.messaging.RPCReturnsObservables @org.jetbrains.annotations.NotNull public abstract net.corda.core.messaging.DataFeed vaultTrackBy(net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.PageSpecification, net.corda.core.node.services.vault.Sort, Class)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.messaging.DataFeed vaultTrackByCriteria(Class, net.corda.core.node.services.vault.QueryCriteria)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.messaging.DataFeed vaultTrackByWithPagingSpec(Class, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.PageSpecification)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.messaging.DataFeed vaultTrackByWithSorting(Class, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.Sort)
  @net.corda.core.messaging.RPCReturnsObservables @org.jetbrains.annotations.NotNull public abstract net.corda.core.concurrent.CordaFuture waitUntilNetworkReady()
  @org.jetbrains.annotations.Nullable public abstract net.corda.core.identity.Party wellKnownPartyFromAnonymous(net.corda.core.identity.AbstractParty)
  @org.jetbrains.annotations.Nullable public abstract net.corda.core.identity.Party wellKnownPartyFromX500Name(net.corda.core.identity.CordaX500Name)
##
public final class net.corda.core.messaging.CordaRPCOpsKt extends java.lang.Object
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.messaging.DataFeed extends java.lang.Object
  public <init>(Object, rx.Observable)
  public final Object component1()
  @org.jetbrains.annotations.NotNull public final rx.Observable component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.messaging.DataFeed copy(Object, rx.Observable)
  public boolean equals(Object)
  public final Object getSnapshot()
  @org.jetbrains.annotations.NotNull public final rx.Observable getUpdates()
  public int hashCode()
  public String toString()
##
@net.corda.core.DoNotImplement public interface net.corda.core.messaging.FlowHandle extends java.lang.AutoCloseable
  public abstract void close()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.flows.StateMachineRunId getId()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.concurrent.CordaFuture getReturnValue()
##
@net.corda.core.serialization.CordaSerializable @net.corda.core.DoNotImplement public final class net.corda.core.messaging.FlowHandleImpl extends java.lang.Object implements net.corda.core.messaging.FlowHandle
  public <init>(net.corda.core.flows.StateMachineRunId, net.corda.core.concurrent.CordaFuture)
  public void close()
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.StateMachineRunId component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.concurrent.CordaFuture component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.messaging.FlowHandleImpl copy(net.corda.core.flows.StateMachineRunId, net.corda.core.concurrent.CordaFuture)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public net.corda.core.flows.StateMachineRunId getId()
  @org.jetbrains.annotations.NotNull public net.corda.core.concurrent.CordaFuture getReturnValue()
  public int hashCode()
  public String toString()
##
@net.corda.core.DoNotImplement public interface net.corda.core.messaging.FlowProgressHandle extends net.corda.core.messaging.FlowHandle
  public abstract void close()
  @org.jetbrains.annotations.NotNull public abstract rx.Observable getProgress()
##
@net.corda.core.serialization.CordaSerializable @net.corda.core.DoNotImplement public final class net.corda.core.messaging.FlowProgressHandleImpl extends java.lang.Object implements net.corda.core.messaging.FlowProgressHandle
  public <init>(net.corda.core.flows.StateMachineRunId, net.corda.core.concurrent.CordaFuture, rx.Observable)
  public void close()
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.StateMachineRunId component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.concurrent.CordaFuture component2()
  @org.jetbrains.annotations.NotNull public final rx.Observable component3()
  @org.jetbrains.annotations.NotNull public final net.corda.core.messaging.FlowProgressHandleImpl copy(net.corda.core.flows.StateMachineRunId, net.corda.core.concurrent.CordaFuture, rx.Observable)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public net.corda.core.flows.StateMachineRunId getId()
  @org.jetbrains.annotations.NotNull public rx.Observable getProgress()
  @org.jetbrains.annotations.NotNull public net.corda.core.concurrent.CordaFuture getReturnValue()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public interface net.corda.core.messaging.MessageRecipientGroup extends net.corda.core.messaging.MessageRecipients
##
@net.corda.core.serialization.CordaSerializable public interface net.corda.core.messaging.MessageRecipients
##
@net.corda.core.DoNotImplement public interface net.corda.core.messaging.RPCOps
  public abstract int getProtocolVersion()
##
public @interface net.corda.core.messaging.RPCReturnsObservables
##
@net.corda.core.serialization.CordaSerializable public interface net.corda.core.messaging.SingleMessageRecipient extends net.corda.core.messaging.MessageRecipients
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.messaging.StateMachineInfo extends java.lang.Object
  public <init>(net.corda.core.flows.StateMachineRunId, String, net.corda.core.flows.FlowInitiator, net.corda.core.messaging.DataFeed)
  public <init>(net.corda.core.flows.StateMachineRunId, String, net.corda.core.flows.FlowInitiator, net.corda.core.messaging.DataFeed, net.corda.core.context.InvocationContext)
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.StateMachineRunId component1()
  @org.jetbrains.annotations.NotNull public final String component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.FlowInitiator component3()
  @org.jetbrains.annotations.Nullable public final net.corda.core.messaging.DataFeed component4()
  @org.jetbrains.annotations.Nullable public final net.corda.core.context.InvocationContext component5()
  @org.jetbrains.annotations.NotNull public final net.corda.core.context.InvocationContext context()
  @org.jetbrains.annotations.NotNull public final net.corda.core.messaging.StateMachineInfo copy(net.corda.core.flows.StateMachineRunId, String, net.corda.core.flows.FlowInitiator, net.corda.core.messaging.DataFeed)
  @org.jetbrains.annotations.NotNull public final net.corda.core.messaging.StateMachineInfo copy(net.corda.core.flows.StateMachineRunId, String, net.corda.core.flows.FlowInitiator, net.corda.core.messaging.DataFeed, net.corda.core.context.InvocationContext)
  public boolean equals(Object)
  @org.jetbrains.annotations.Nullable public final net.corda.core.context.InvocationContext getContext()
  @org.jetbrains.annotations.NotNull public final String getFlowLogicClassName()
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.StateMachineRunId getId()
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.FlowInitiator getInitiator()
  @org.jetbrains.annotations.Nullable public final net.corda.core.messaging.DataFeed getProgressTrackerStepAndUpdates()
  public int hashCode()
  @org.jetbrains.annotations.NotNull public String toString()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.messaging.StateMachineTransactionMapping extends java.lang.Object
  public <init>(net.corda.core.flows.StateMachineRunId, net.corda.core.crypto.SecureHash)
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.StateMachineRunId component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.messaging.StateMachineTransactionMapping copy(net.corda.core.flows.StateMachineRunId, net.corda.core.crypto.SecureHash)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.StateMachineRunId getStateMachineRunId()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash getTransactionId()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public abstract class net.corda.core.messaging.StateMachineUpdate extends java.lang.Object
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.flows.StateMachineRunId getId()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.messaging.StateMachineUpdate$Added extends net.corda.core.messaging.StateMachineUpdate
  public <init>(net.corda.core.messaging.StateMachineInfo)
  @org.jetbrains.annotations.NotNull public final net.corda.core.messaging.StateMachineInfo component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.messaging.StateMachineUpdate$Added copy(net.corda.core.messaging.StateMachineInfo)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public net.corda.core.flows.StateMachineRunId getId()
  @org.jetbrains.annotations.NotNull public final net.corda.core.messaging.StateMachineInfo getStateMachineInfo()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.messaging.StateMachineUpdate$Removed extends net.corda.core.messaging.StateMachineUpdate
  public <init>(net.corda.core.flows.StateMachineRunId, net.corda.core.utilities.Try)
  @org.jetbrains.annotations.NotNull public final net.corda.core.flows.StateMachineRunId component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.Try component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.messaging.StateMachineUpdate$Removed copy(net.corda.core.flows.StateMachineRunId, net.corda.core.utilities.Try)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public net.corda.core.flows.StateMachineRunId getId()
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.Try getResult()
  public int hashCode()
  public String toString()
##
@net.corda.core.DoNotImplement public interface net.corda.core.node.AppServiceHub extends net.corda.core.node.ServiceHub
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.messaging.FlowHandle startFlow(net.corda.core.flows.FlowLogic)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.messaging.FlowProgressHandle startTrackedFlow(net.corda.core.flows.FlowLogic)
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.node.NodeInfo extends java.lang.Object
  public <init>(List, List, int, long)
  @org.jetbrains.annotations.NotNull public final List component1()
  @org.jetbrains.annotations.NotNull public final List component2()
  public final int component3()
  public final long component4()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.NodeInfo copy(List, List, int, long)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final List getAddresses()
  @org.jetbrains.annotations.NotNull public final List getLegalIdentities()
  @org.jetbrains.annotations.NotNull public final List getLegalIdentitiesAndCerts()
  public final int getPlatformVersion()
  public final long getSerial()
  public int hashCode()
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.Party identityFromX500Name(net.corda.core.identity.CordaX500Name)
  public final boolean isLegalIdentity(net.corda.core.identity.Party)
  public String toString()
##
@net.corda.core.DoNotImplement public interface net.corda.core.node.ServiceHub extends net.corda.core.node.ServicesForResolution
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.transactions.SignedTransaction addSignature(net.corda.core.transactions.SignedTransaction)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.transactions.SignedTransaction addSignature(net.corda.core.transactions.SignedTransaction, java.security.PublicKey)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.serialization.SerializeAsToken cordaService(Class)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.crypto.TransactionSignature createSignature(net.corda.core.transactions.FilteredTransaction)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.crypto.TransactionSignature createSignature(net.corda.core.transactions.FilteredTransaction, java.security.PublicKey)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.crypto.TransactionSignature createSignature(net.corda.core.transactions.SignedTransaction)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.crypto.TransactionSignature createSignature(net.corda.core.transactions.SignedTransaction, java.security.PublicKey)
  @org.jetbrains.annotations.NotNull public abstract java.time.Clock getClock()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.services.ContractUpgradeService getContractUpgradeService()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.services.KeyManagementService getKeyManagementService()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.NodeInfo getMyInfo()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.services.NetworkMapCache getNetworkMapCache()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.services.TransactionVerifierService getTransactionVerifierService()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.services.TransactionStorage getValidatedTransactions()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.services.VaultService getVaultService()
  @org.jetbrains.annotations.NotNull public abstract java.sql.Connection jdbcSession()
  public abstract void recordTransactions(Iterable)
  public abstract void recordTransactions(net.corda.core.node.StatesToRecord, Iterable)
  public abstract void recordTransactions(boolean, Iterable)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.transactions.SignedTransaction signInitialTransaction(net.corda.core.transactions.TransactionBuilder)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.transactions.SignedTransaction signInitialTransaction(net.corda.core.transactions.TransactionBuilder, Iterable)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.transactions.SignedTransaction signInitialTransaction(net.corda.core.transactions.TransactionBuilder, java.security.PublicKey)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.contracts.StateAndRef toStateAndRef(net.corda.core.contracts.StateRef)
##
@net.corda.core.DoNotImplement public interface net.corda.core.node.ServicesForResolution extends net.corda.core.node.StateLoader
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.services.AttachmentStorage getAttachments()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.cordapp.CordappProvider getCordappProvider()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.services.IdentityService getIdentityService()
##
@net.corda.core.DoNotImplement public interface net.corda.core.node.StateLoader
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.contracts.TransactionState loadState(net.corda.core.contracts.StateRef)
##
public final class net.corda.core.node.StatesToRecord extends java.lang.Enum
  protected <init>(String, int)
  public static net.corda.core.node.StatesToRecord valueOf(String)
  public static net.corda.core.node.StatesToRecord[] values()
##
@net.corda.core.DoNotImplement public interface net.corda.core.node.services.AttachmentStorage
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.crypto.SecureHash importAttachment(java.io.InputStream)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.crypto.SecureHash importAttachment(java.io.InputStream, String, String)
  @org.jetbrains.annotations.Nullable public abstract net.corda.core.contracts.Attachment openAttachment(net.corda.core.crypto.SecureHash)
  @org.jetbrains.annotations.NotNull public abstract List queryAttachments(net.corda.core.node.services.vault.AttachmentQueryCriteria, net.corda.core.node.services.vault.AttachmentSort)
##
public final class net.corda.core.node.services.AttachmentStorageKt extends java.lang.Object
##
@net.corda.core.DoNotImplement public interface net.corda.core.node.services.ContractUpgradeService
  @org.jetbrains.annotations.Nullable public abstract String getAuthorisedContractUpgrade(net.corda.core.contracts.StateRef)
  public abstract void removeAuthorisedContractUpgrade(net.corda.core.contracts.StateRef)
  public abstract void storeAuthorisedContractUpgrade(net.corda.core.contracts.StateRef, Class)
##
public @interface net.corda.core.node.services.CordaService
##
@net.corda.core.DoNotImplement public interface net.corda.core.node.services.IdentityService
  public abstract void assertOwnership(net.corda.core.identity.Party, net.corda.core.identity.AnonymousParty)
  @org.jetbrains.annotations.Nullable public abstract net.corda.core.identity.PartyAndCertificate certificateFromKey(java.security.PublicKey)
  @org.jetbrains.annotations.NotNull public abstract Iterable getAllIdentities()
  @org.jetbrains.annotations.NotNull public abstract java.security.cert.CertStore getCaCertStore()
  @org.jetbrains.annotations.NotNull public abstract java.security.cert.TrustAnchor getTrustAnchor()
  @org.jetbrains.annotations.NotNull public abstract java.security.cert.X509Certificate getTrustRoot()
  @org.jetbrains.annotations.NotNull public abstract Set partiesFromName(String, boolean)
  @org.jetbrains.annotations.Nullable public abstract net.corda.core.identity.Party partyFromKey(java.security.PublicKey)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.identity.Party requireWellKnownPartyFromAnonymous(net.corda.core.identity.AbstractParty)
  @org.jetbrains.annotations.Nullable public abstract net.corda.core.identity.PartyAndCertificate verifyAndRegisterIdentity(net.corda.core.identity.PartyAndCertificate)
  @org.jetbrains.annotations.Nullable public abstract net.corda.core.identity.Party wellKnownPartyFromAnonymous(net.corda.core.contracts.PartyAndReference)
  @org.jetbrains.annotations.Nullable public abstract net.corda.core.identity.Party wellKnownPartyFromAnonymous(net.corda.core.identity.AbstractParty)
  @org.jetbrains.annotations.Nullable public abstract net.corda.core.identity.Party wellKnownPartyFromX500Name(net.corda.core.identity.CordaX500Name)
##
@net.corda.core.DoNotImplement public interface net.corda.core.node.services.KeyManagementService
  @org.jetbrains.annotations.NotNull public abstract Iterable filterMyKeys(Iterable)
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public abstract java.security.PublicKey freshKey()
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public abstract net.corda.core.identity.PartyAndCertificate freshKeyAndCert(net.corda.core.identity.PartyAndCertificate, boolean)
  @org.jetbrains.annotations.NotNull public abstract Set getKeys()
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public abstract net.corda.core.crypto.TransactionSignature sign(net.corda.core.crypto.SignableData, java.security.PublicKey)
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public abstract net.corda.core.crypto.DigitalSignature$WithKey sign(byte[], java.security.PublicKey)
##
@net.corda.core.DoNotImplement public interface net.corda.core.node.services.NetworkMapCache extends net.corda.core.node.services.NetworkMapCacheBase
  @org.jetbrains.annotations.Nullable public abstract net.corda.core.node.NodeInfo getNodeByLegalIdentity(net.corda.core.identity.AbstractParty)
##
@net.corda.core.serialization.CordaSerializable public abstract static class net.corda.core.node.services.NetworkMapCache$MapChange extends java.lang.Object
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.NodeInfo getNode()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.NetworkMapCache$MapChange$Added extends net.corda.core.node.services.NetworkMapCache$MapChange
  public <init>(net.corda.core.node.NodeInfo)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.NodeInfo component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.NetworkMapCache$MapChange$Added copy(net.corda.core.node.NodeInfo)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public net.corda.core.node.NodeInfo getNode()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.NetworkMapCache$MapChange$Modified extends net.corda.core.node.services.NetworkMapCache$MapChange
  public <init>(net.corda.core.node.NodeInfo, net.corda.core.node.NodeInfo)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.NodeInfo component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.NodeInfo component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.NetworkMapCache$MapChange$Modified copy(net.corda.core.node.NodeInfo, net.corda.core.node.NodeInfo)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public net.corda.core.node.NodeInfo getNode()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.NodeInfo getPreviousNode()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.NetworkMapCache$MapChange$Removed extends net.corda.core.node.services.NetworkMapCache$MapChange
  public <init>(net.corda.core.node.NodeInfo)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.NodeInfo component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.NetworkMapCache$MapChange$Removed copy(net.corda.core.node.NodeInfo)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public net.corda.core.node.NodeInfo getNode()
  public int hashCode()
  public String toString()
##
@net.corda.core.DoNotImplement public interface net.corda.core.node.services.NetworkMapCacheBase
  public abstract void clearNetworkMapCache()
  @org.jetbrains.annotations.NotNull public abstract List getAllNodes()
  @org.jetbrains.annotations.NotNull public abstract rx.Observable getChanged()
  @org.jetbrains.annotations.Nullable public abstract net.corda.core.node.NodeInfo getNodeByAddress(net.corda.core.utilities.NetworkHostAndPort)
  @org.jetbrains.annotations.Nullable public abstract net.corda.core.node.NodeInfo getNodeByLegalName(net.corda.core.identity.CordaX500Name)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.concurrent.CordaFuture getNodeReady()
  @org.jetbrains.annotations.NotNull public abstract List getNodesByLegalIdentityKey(java.security.PublicKey)
  @org.jetbrains.annotations.NotNull public abstract List getNodesByLegalName(net.corda.core.identity.CordaX500Name)
  @org.jetbrains.annotations.Nullable public abstract net.corda.core.identity.Party getNotary(net.corda.core.identity.CordaX500Name)
  @org.jetbrains.annotations.NotNull public abstract List getNotaryIdentities()
  @org.jetbrains.annotations.Nullable public abstract net.corda.core.node.services.PartyInfo getPartyInfo(net.corda.core.identity.Party)
  @org.jetbrains.annotations.Nullable public abstract net.corda.core.identity.Party getPeerByLegalName(net.corda.core.identity.CordaX500Name)
  @org.jetbrains.annotations.Nullable public abstract net.corda.core.identity.PartyAndCertificate getPeerCertificateByLegalName(net.corda.core.identity.CordaX500Name)
  public abstract boolean isNotary(net.corda.core.identity.Party)
  public abstract boolean isValidatingNotary(net.corda.core.identity.Party)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.messaging.DataFeed track()
##
@net.corda.core.serialization.CordaSerializable public abstract class net.corda.core.node.services.NotaryService extends net.corda.core.serialization.SingletonSerializeAsToken
  public <init>()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.flows.FlowLogic createServiceFlow(net.corda.core.flows.FlowSession)
  @org.jetbrains.annotations.NotNull public abstract java.security.PublicKey getNotaryIdentityKey()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.ServiceHub getServices()
  public abstract void start()
  public abstract void stop()
  public static final net.corda.core.node.services.NotaryService$Companion Companion
  @org.jetbrains.annotations.NotNull public static final String ID_PREFIX = "corda.notary."
##
public static final class net.corda.core.node.services.NotaryService$Companion extends java.lang.Object
  @org.jetbrains.annotations.NotNull public final String constructId(boolean, boolean, boolean, boolean)
##
public abstract class net.corda.core.node.services.PartyInfo extends java.lang.Object
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.identity.Party getParty()
##
public static final class net.corda.core.node.services.PartyInfo$DistributedNode extends net.corda.core.node.services.PartyInfo
  public <init>(net.corda.core.identity.Party)
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.Party component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.PartyInfo$DistributedNode copy(net.corda.core.identity.Party)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public net.corda.core.identity.Party getParty()
  public int hashCode()
  public String toString()
##
public static final class net.corda.core.node.services.PartyInfo$SingleNode extends net.corda.core.node.services.PartyInfo
  public <init>(net.corda.core.identity.Party, List)
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.Party component1()
  @org.jetbrains.annotations.NotNull public final List component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.PartyInfo$SingleNode copy(net.corda.core.identity.Party, List)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final List getAddresses()
  @org.jetbrains.annotations.NotNull public net.corda.core.identity.Party getParty()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.node.services.StatesNotAvailableException extends net.corda.core.flows.FlowException
  public <init>(String, Throwable)
  @org.jetbrains.annotations.Nullable public Throwable getCause()
  @org.jetbrains.annotations.Nullable public String getMessage()
  @org.jetbrains.annotations.NotNull public String toString()
##
public final class net.corda.core.node.services.TimeWindowChecker extends java.lang.Object
  public <init>()
  public <init>(java.time.Clock)
  @org.jetbrains.annotations.NotNull public final java.time.Clock getClock()
  public final boolean isValid(net.corda.core.contracts.TimeWindow)
##
@net.corda.core.DoNotImplement public interface net.corda.core.node.services.TransactionStorage
  @org.jetbrains.annotations.Nullable public abstract net.corda.core.transactions.SignedTransaction getTransaction(net.corda.core.crypto.SecureHash)
  @org.jetbrains.annotations.NotNull public abstract rx.Observable getUpdates()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.messaging.DataFeed track()
##
@net.corda.core.DoNotImplement public interface net.corda.core.node.services.TransactionVerifierService
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.concurrent.CordaFuture verify(net.corda.core.transactions.LedgerTransaction)
##
@net.corda.core.serialization.CordaSerializable public abstract class net.corda.core.node.services.TrustedAuthorityNotaryService extends net.corda.core.node.services.NotaryService
  public <init>()
  public final void commitInputStates(List, net.corda.core.crypto.SecureHash, net.corda.core.identity.Party)
  @org.jetbrains.annotations.NotNull protected org.slf4j.Logger getLog()
  @org.jetbrains.annotations.NotNull protected abstract net.corda.core.node.services.TimeWindowChecker getTimeWindowChecker()
  @org.jetbrains.annotations.NotNull protected abstract net.corda.core.node.services.UniquenessProvider getUniquenessProvider()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.TransactionSignature sign(net.corda.core.crypto.SecureHash)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.DigitalSignature$WithKey sign(byte[])
  public final void validateTimeWindow(net.corda.core.contracts.TimeWindow)
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.node.services.UniquenessException extends net.corda.core.CordaException
  public <init>(net.corda.core.node.services.UniquenessProvider$Conflict)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.UniquenessProvider$Conflict getError()
##
public interface net.corda.core.node.services.UniquenessProvider
  public abstract void commit(List, net.corda.core.crypto.SecureHash, net.corda.core.identity.Party)
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.UniquenessProvider$Conflict extends java.lang.Object
  public <init>(Map)
  @org.jetbrains.annotations.NotNull public final Map component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.UniquenessProvider$Conflict copy(Map)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final Map getStateHistory()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.UniquenessProvider$ConsumingTx extends java.lang.Object
  public <init>(net.corda.core.crypto.SecureHash, int, net.corda.core.identity.Party)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash component1()
  public final int component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.Party component3()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.UniquenessProvider$ConsumingTx copy(net.corda.core.crypto.SecureHash, int, net.corda.core.identity.Party)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash getId()
  public final int getInputIndex()
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.Party getRequestingParty()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.node.services.UnknownAnonymousPartyException extends net.corda.core.CordaException
  public <init>(String)
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.node.services.Vault extends java.lang.Object
  public <init>(Iterable)
  @org.jetbrains.annotations.NotNull public final Iterable getStates()
  public static final net.corda.core.node.services.Vault$Companion Companion
##
public static final class net.corda.core.node.services.Vault$Companion extends java.lang.Object
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.Vault$Update getNoNotaryUpdate()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.Vault$Update getNoUpdate()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.Vault$Page extends java.lang.Object
  public <init>(List, List, long, net.corda.core.node.services.Vault$StateStatus, List)
  @org.jetbrains.annotations.NotNull public final List component1()
  @org.jetbrains.annotations.NotNull public final List component2()
  public final long component3()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.Vault$StateStatus component4()
  @org.jetbrains.annotations.NotNull public final List component5()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.Vault$Page copy(List, List, long, net.corda.core.node.services.Vault$StateStatus, List)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final List getOtherResults()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.Vault$StateStatus getStateTypes()
  @org.jetbrains.annotations.NotNull public final List getStates()
  @org.jetbrains.annotations.NotNull public final List getStatesMetadata()
  public final long getTotalStatesAvailable()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.Vault$StateMetadata extends java.lang.Object
  public <init>(net.corda.core.contracts.StateRef, String, java.time.Instant, java.time.Instant, net.corda.core.node.services.Vault$StateStatus, net.corda.core.identity.AbstractParty, String, java.time.Instant)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.StateRef component1()
  @org.jetbrains.annotations.NotNull public final String component2()
  @org.jetbrains.annotations.NotNull public final java.time.Instant component3()
  @org.jetbrains.annotations.Nullable public final java.time.Instant component4()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.Vault$StateStatus component5()
  @org.jetbrains.annotations.Nullable public final net.corda.core.identity.AbstractParty component6()
  @org.jetbrains.annotations.Nullable public final String component7()
  @org.jetbrains.annotations.Nullable public final java.time.Instant component8()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.Vault$StateMetadata copy(net.corda.core.contracts.StateRef, String, java.time.Instant, java.time.Instant, net.corda.core.node.services.Vault$StateStatus, net.corda.core.identity.AbstractParty, String, java.time.Instant)
  public boolean equals(Object)
  @org.jetbrains.annotations.Nullable public final java.time.Instant getConsumedTime()
  @org.jetbrains.annotations.NotNull public final String getContractStateClassName()
  @org.jetbrains.annotations.Nullable public final String getLockId()
  @org.jetbrains.annotations.Nullable public final java.time.Instant getLockUpdateTime()
  @org.jetbrains.annotations.Nullable public final net.corda.core.identity.AbstractParty getNotary()
  @org.jetbrains.annotations.NotNull public final java.time.Instant getRecordedTime()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.StateRef getRef()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.Vault$StateStatus getStatus()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.Vault$StateStatus extends java.lang.Enum
  protected <init>(String, int)
  public static net.corda.core.node.services.Vault$StateStatus valueOf(String)
  public static net.corda.core.node.services.Vault$StateStatus[] values()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.Vault$Update extends java.lang.Object
  public <init>(Set, Set, UUID, net.corda.core.node.services.Vault$UpdateType)
  @org.jetbrains.annotations.NotNull public final Set component1()
  @org.jetbrains.annotations.NotNull public final Set component2()
  @org.jetbrains.annotations.Nullable public final UUID component3()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.Vault$UpdateType component4()
  public final boolean containsType(Class, net.corda.core.node.services.Vault$StateStatus)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.Vault$Update copy(Set, Set, UUID, net.corda.core.node.services.Vault$UpdateType)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final Set getConsumed()
  @org.jetbrains.annotations.Nullable public final UUID getFlowId()
  @org.jetbrains.annotations.NotNull public final Set getProduced()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.Vault$UpdateType getType()
  public int hashCode()
  public final boolean isEmpty()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.Vault$Update plus(net.corda.core.node.services.Vault$Update)
  @org.jetbrains.annotations.NotNull public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.Vault$UpdateType extends java.lang.Enum
  protected <init>(String, int)
  public static net.corda.core.node.services.Vault$UpdateType valueOf(String)
  public static net.corda.core.node.services.Vault$UpdateType[] values()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.node.services.VaultQueryException extends net.corda.core.flows.FlowException
  public <init>(String)
##
@net.corda.core.DoNotImplement public interface net.corda.core.node.services.VaultService
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.services.Vault$Page _queryBy(net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.PageSpecification, net.corda.core.node.services.vault.Sort, Class)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.messaging.DataFeed _trackBy(net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.PageSpecification, net.corda.core.node.services.vault.Sort, Class)
  public abstract void addNoteToTransaction(net.corda.core.crypto.SecureHash, String)
  @org.jetbrains.annotations.NotNull public abstract rx.Observable getRawUpdates()
  @org.jetbrains.annotations.NotNull public abstract Iterable getTransactionNotes(net.corda.core.crypto.SecureHash)
  @org.jetbrains.annotations.NotNull public abstract rx.Observable getUpdates()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.services.Vault$Page queryBy(Class)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.services.Vault$Page queryBy(Class, net.corda.core.node.services.vault.QueryCriteria)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.services.Vault$Page queryBy(Class, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.PageSpecification)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.services.Vault$Page queryBy(Class, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.PageSpecification, net.corda.core.node.services.vault.Sort)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.services.Vault$Page queryBy(Class, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.Sort)
  public abstract void softLockRelease(UUID, net.corda.core.utilities.NonEmptySet)
  public abstract void softLockReserve(UUID, net.corda.core.utilities.NonEmptySet)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.messaging.DataFeed trackBy(Class)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.messaging.DataFeed trackBy(Class, net.corda.core.node.services.vault.QueryCriteria)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.messaging.DataFeed trackBy(Class, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.PageSpecification)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.messaging.DataFeed trackBy(Class, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.PageSpecification, net.corda.core.node.services.vault.Sort)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.messaging.DataFeed trackBy(Class, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.Sort)
  @co.paralleluniverse.fibers.Suspendable @org.jetbrains.annotations.NotNull public abstract List tryLockFungibleStatesForSpending(UUID, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.contracts.Amount, Class)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.concurrent.CordaFuture whenConsumed(net.corda.core.contracts.StateRef)
##
public final class net.corda.core.node.services.VaultServiceKt extends java.lang.Object
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.node.services.vault.AggregateFunctionType extends java.lang.Enum
  protected <init>(String, int)
  public static net.corda.core.node.services.vault.AggregateFunctionType valueOf(String)
  public static net.corda.core.node.services.vault.AggregateFunctionType[] values()
##
@net.corda.core.serialization.CordaSerializable public abstract class net.corda.core.node.services.vault.AttachmentQueryCriteria extends java.lang.Object implements net.corda.core.node.services.vault.GenericQueryCriteria$ChainableQueryCriteria, net.corda.core.node.services.vault.GenericQueryCriteria
  @org.jetbrains.annotations.NotNull public net.corda.core.node.services.vault.AttachmentQueryCriteria and(net.corda.core.node.services.vault.AttachmentQueryCriteria)
  @org.jetbrains.annotations.NotNull public net.corda.core.node.services.vault.AttachmentQueryCriteria or(net.corda.core.node.services.vault.AttachmentQueryCriteria)
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.AttachmentQueryCriteria$AndComposition extends net.corda.core.node.services.vault.AttachmentQueryCriteria implements net.corda.core.node.services.vault.GenericQueryCriteria$ChainableQueryCriteria$AndVisitor
  public <init>(net.corda.core.node.services.vault.AttachmentQueryCriteria, net.corda.core.node.services.vault.AttachmentQueryCriteria)
  @org.jetbrains.annotations.NotNull public net.corda.core.node.services.vault.AttachmentQueryCriteria getA()
  @org.jetbrains.annotations.NotNull public net.corda.core.node.services.vault.AttachmentQueryCriteria getB()
  @org.jetbrains.annotations.NotNull public Collection visit(net.corda.core.node.services.vault.AttachmentsQueryCriteriaParser)
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.AttachmentQueryCriteria$AttachmentsQueryCriteria extends net.corda.core.node.services.vault.AttachmentQueryCriteria
  public <init>()
  public <init>(net.corda.core.node.services.vault.ColumnPredicate)
  public <init>(net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate)
  public <init>(net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate)
  @org.jetbrains.annotations.Nullable public final net.corda.core.node.services.vault.ColumnPredicate component1()
  @org.jetbrains.annotations.Nullable public final net.corda.core.node.services.vault.ColumnPredicate component2()
  @org.jetbrains.annotations.Nullable public final net.corda.core.node.services.vault.ColumnPredicate component3()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.AttachmentQueryCriteria$AttachmentsQueryCriteria copy(net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate)
  public boolean equals(Object)
  @org.jetbrains.annotations.Nullable public final net.corda.core.node.services.vault.ColumnPredicate getFilenameCondition()
  @org.jetbrains.annotations.Nullable public final net.corda.core.node.services.vault.ColumnPredicate getUploadDateCondition()
  @org.jetbrains.annotations.Nullable public final net.corda.core.node.services.vault.ColumnPredicate getUploaderCondition()
  public int hashCode()
  public String toString()
  @org.jetbrains.annotations.NotNull public Collection visit(net.corda.core.node.services.vault.AttachmentsQueryCriteriaParser)
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.AttachmentQueryCriteria$OrComposition extends net.corda.core.node.services.vault.AttachmentQueryCriteria implements net.corda.core.node.services.vault.GenericQueryCriteria$ChainableQueryCriteria$OrVisitor
  public <init>(net.corda.core.node.services.vault.AttachmentQueryCriteria, net.corda.core.node.services.vault.AttachmentQueryCriteria)
  @org.jetbrains.annotations.NotNull public net.corda.core.node.services.vault.AttachmentQueryCriteria getA()
  @org.jetbrains.annotations.NotNull public net.corda.core.node.services.vault.AttachmentQueryCriteria getB()
  @org.jetbrains.annotations.NotNull public Collection visit(net.corda.core.node.services.vault.AttachmentsQueryCriteriaParser)
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.node.services.vault.AttachmentSort extends net.corda.core.node.services.vault.BaseSort
  public <init>(Collection)
  @org.jetbrains.annotations.NotNull public final Collection component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.AttachmentSort copy(Collection)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final Collection getColumns()
  public int hashCode()
  public String toString()
##
public static final class net.corda.core.node.services.vault.AttachmentSort$AttachmentSortAttribute extends java.lang.Enum
  protected <init>(String, int, String)
  @org.jetbrains.annotations.NotNull public final String getColumnName()
  public static net.corda.core.node.services.vault.AttachmentSort$AttachmentSortAttribute valueOf(String)
  public static net.corda.core.node.services.vault.AttachmentSort$AttachmentSortAttribute[] values()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.AttachmentSort$AttachmentSortColumn extends java.lang.Object
  public <init>(net.corda.core.node.services.vault.AttachmentSort$AttachmentSortAttribute, net.corda.core.node.services.vault.Sort$Direction)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.AttachmentSort$AttachmentSortAttribute component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.Sort$Direction component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.AttachmentSort$AttachmentSortColumn copy(net.corda.core.node.services.vault.AttachmentSort$AttachmentSortAttribute, net.corda.core.node.services.vault.Sort$Direction)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.Sort$Direction getDirection()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.AttachmentSort$AttachmentSortAttribute getSortAttribute()
  public int hashCode()
  public String toString()
##
public interface net.corda.core.node.services.vault.AttachmentsQueryCriteriaParser extends net.corda.core.node.services.vault.BaseQueryCriteriaParser
  @org.jetbrains.annotations.NotNull public abstract Collection parseCriteria(net.corda.core.node.services.vault.AttachmentQueryCriteria$AttachmentsQueryCriteria)
##
public interface net.corda.core.node.services.vault.BaseQueryCriteriaParser
  @org.jetbrains.annotations.NotNull public abstract Collection parse(net.corda.core.node.services.vault.GenericQueryCriteria, net.corda.core.node.services.vault.BaseSort)
  @org.jetbrains.annotations.NotNull public abstract Collection parseAnd(net.corda.core.node.services.vault.GenericQueryCriteria, net.corda.core.node.services.vault.GenericQueryCriteria)
  @org.jetbrains.annotations.NotNull public abstract Collection parseOr(net.corda.core.node.services.vault.GenericQueryCriteria, net.corda.core.node.services.vault.GenericQueryCriteria)
##
public abstract class net.corda.core.node.services.vault.BaseSort extends java.lang.Object
  public <init>()
##
@net.corda.core.serialization.CordaSerializable @net.corda.core.DoNotImplement public final class net.corda.core.node.services.vault.BinaryComparisonOperator extends java.lang.Enum implements net.corda.core.node.services.vault.Operator
  protected <init>(String, int)
  public static net.corda.core.node.services.vault.BinaryComparisonOperator valueOf(String)
  public static net.corda.core.node.services.vault.BinaryComparisonOperator[] values()
##
@net.corda.core.serialization.CordaSerializable @net.corda.core.DoNotImplement public final class net.corda.core.node.services.vault.BinaryLogicalOperator extends java.lang.Enum implements net.corda.core.node.services.vault.Operator
  protected <init>(String, int)
  public static net.corda.core.node.services.vault.BinaryLogicalOperator valueOf(String)
  public static net.corda.core.node.services.vault.BinaryLogicalOperator[] values()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.node.services.vault.Builder extends java.lang.Object
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression avg(reflect.Field)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression avg(reflect.Field, List)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression avg(reflect.Field, List, net.corda.core.node.services.vault.Sort$Direction)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression avg(kotlin.reflect.KProperty1, List, net.corda.core.node.services.vault.Sort$Direction)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate$Between between(Comparable, Comparable)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression between(reflect.Field, Comparable, Comparable)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression between(kotlin.reflect.KProperty1, Comparable, Comparable)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate$BinaryComparison compare(net.corda.core.node.services.vault.BinaryComparisonOperator, Comparable)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression comparePredicate(reflect.Field, net.corda.core.node.services.vault.BinaryComparisonOperator, Comparable)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression comparePredicate(kotlin.reflect.KProperty1, net.corda.core.node.services.vault.BinaryComparisonOperator, Comparable)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression count(reflect.Field)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression count(kotlin.reflect.KProperty1)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate$EqualityComparison equal(Object)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression equal(reflect.Field, Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression equal(kotlin.reflect.KProperty1, Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression functionPredicate(reflect.Field, net.corda.core.node.services.vault.ColumnPredicate, List, net.corda.core.node.services.vault.Sort$Direction)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression functionPredicate(kotlin.reflect.KProperty1, net.corda.core.node.services.vault.ColumnPredicate, List, net.corda.core.node.services.vault.Sort$Direction)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate$BinaryComparison greaterThan(Comparable)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression greaterThan(reflect.Field, Comparable)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression greaterThan(kotlin.reflect.KProperty1, Comparable)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate$BinaryComparison greaterThanOrEqual(Comparable)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression greaterThanOrEqual(reflect.Field, Comparable)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression greaterThanOrEqual(kotlin.reflect.KProperty1, Comparable)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression in(reflect.Field, Collection)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate$CollectionExpression in(Collection)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression in(kotlin.reflect.KProperty1, Collection)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate$NullExpression isNotNull()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate$NullExpression isNull()
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression isNull(reflect.Field)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression isNull(kotlin.reflect.KProperty1)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate$BinaryComparison lessThan(Comparable)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression lessThan(reflect.Field, Comparable)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression lessThan(kotlin.reflect.KProperty1, Comparable)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate$BinaryComparison lessThanOrEqual(Comparable)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression lessThanOrEqual(reflect.Field, Comparable)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression lessThanOrEqual(kotlin.reflect.KProperty1, Comparable)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate$Likeness like(String)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression like(reflect.Field, String)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression like(kotlin.reflect.KProperty1, String)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression max(reflect.Field)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression max(reflect.Field, List)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression max(reflect.Field, List, net.corda.core.node.services.vault.Sort$Direction)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression max(kotlin.reflect.KProperty1, List, net.corda.core.node.services.vault.Sort$Direction)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression min(reflect.Field)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression min(reflect.Field, List)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression min(reflect.Field, List, net.corda.core.node.services.vault.Sort$Direction)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression min(kotlin.reflect.KProperty1, List, net.corda.core.node.services.vault.Sort$Direction)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate$EqualityComparison notEqual(Object)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notEqual(reflect.Field, Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notEqual(kotlin.reflect.KProperty1, Object)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notIn(reflect.Field, Collection)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate$CollectionExpression notIn(Collection)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notIn(kotlin.reflect.KProperty1, Collection)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate$Likeness notLike(String)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notLike(reflect.Field, String)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notLike(kotlin.reflect.KProperty1, String)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notNull(reflect.Field)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notNull(kotlin.reflect.KProperty1)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression predicate(reflect.Field, net.corda.core.node.services.vault.ColumnPredicate)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression predicate(kotlin.reflect.KProperty1, net.corda.core.node.services.vault.ColumnPredicate)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression sum(reflect.Field)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression sum(reflect.Field, List)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression sum(reflect.Field, List, net.corda.core.node.services.vault.Sort$Direction)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression sum(kotlin.reflect.KProperty1, List, net.corda.core.node.services.vault.Sort$Direction)
  public static final net.corda.core.node.services.vault.Builder INSTANCE
##
@net.corda.core.serialization.CordaSerializable @net.corda.core.DoNotImplement public final class net.corda.core.node.services.vault.CollectionOperator extends java.lang.Enum implements net.corda.core.node.services.vault.Operator
  protected <init>(String, int)
  public static net.corda.core.node.services.vault.CollectionOperator valueOf(String)
  public static net.corda.core.node.services.vault.CollectionOperator[] values()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.node.services.vault.Column extends java.lang.Object
  public <init>(String, Class)
  public <init>(reflect.Field)
  public <init>(kotlin.reflect.KProperty1)
  @org.jetbrains.annotations.NotNull public final Class getDeclaringClass()
  @org.jetbrains.annotations.NotNull public final String getName()
##
@net.corda.core.serialization.CordaSerializable public abstract class net.corda.core.node.services.vault.ColumnPredicate extends java.lang.Object
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.ColumnPredicate$AggregateFunction extends net.corda.core.node.services.vault.ColumnPredicate
  public <init>(net.corda.core.node.services.vault.AggregateFunctionType)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.AggregateFunctionType component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate$AggregateFunction copy(net.corda.core.node.services.vault.AggregateFunctionType)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.AggregateFunctionType getType()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.ColumnPredicate$Between extends net.corda.core.node.services.vault.ColumnPredicate
  public <init>(Comparable, Comparable)
  @org.jetbrains.annotations.NotNull public final Comparable component1()
  @org.jetbrains.annotations.NotNull public final Comparable component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate$Between copy(Comparable, Comparable)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final Comparable getRightFromLiteral()
  @org.jetbrains.annotations.NotNull public final Comparable getRightToLiteral()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.ColumnPredicate$BinaryComparison extends net.corda.core.node.services.vault.ColumnPredicate
  public <init>(net.corda.core.node.services.vault.BinaryComparisonOperator, Comparable)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.BinaryComparisonOperator component1()
  @org.jetbrains.annotations.NotNull public final Comparable component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate$BinaryComparison copy(net.corda.core.node.services.vault.BinaryComparisonOperator, Comparable)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.BinaryComparisonOperator getOperator()
  @org.jetbrains.annotations.NotNull public final Comparable getRightLiteral()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.ColumnPredicate$CollectionExpression extends net.corda.core.node.services.vault.ColumnPredicate
  public <init>(net.corda.core.node.services.vault.CollectionOperator, Collection)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CollectionOperator component1()
  @org.jetbrains.annotations.NotNull public final Collection component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate$CollectionExpression copy(net.corda.core.node.services.vault.CollectionOperator, Collection)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CollectionOperator getOperator()
  @org.jetbrains.annotations.NotNull public final Collection getRightLiteral()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.ColumnPredicate$EqualityComparison extends net.corda.core.node.services.vault.ColumnPredicate
  public <init>(net.corda.core.node.services.vault.EqualityComparisonOperator, Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.EqualityComparisonOperator component1()
  public final Object component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate$EqualityComparison copy(net.corda.core.node.services.vault.EqualityComparisonOperator, Object)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.EqualityComparisonOperator getOperator()
  public final Object getRightLiteral()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.ColumnPredicate$Likeness extends net.corda.core.node.services.vault.ColumnPredicate
  public <init>(net.corda.core.node.services.vault.LikenessOperator, String)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.LikenessOperator component1()
  @org.jetbrains.annotations.NotNull public final String component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate$Likeness copy(net.corda.core.node.services.vault.LikenessOperator, String)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.LikenessOperator getOperator()
  @org.jetbrains.annotations.NotNull public final String getRightLiteral()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.ColumnPredicate$NullExpression extends net.corda.core.node.services.vault.ColumnPredicate
  public <init>(net.corda.core.node.services.vault.NullOperator)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.NullOperator component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate$NullExpression copy(net.corda.core.node.services.vault.NullOperator)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.NullOperator getOperator()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public abstract class net.corda.core.node.services.vault.CriteriaExpression extends java.lang.Object
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression extends net.corda.core.node.services.vault.CriteriaExpression
  public <init>(net.corda.core.node.services.vault.Column, net.corda.core.node.services.vault.ColumnPredicate, List, net.corda.core.node.services.vault.Sort$Direction)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.Column component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate component2()
  @org.jetbrains.annotations.Nullable public final List component3()
  @org.jetbrains.annotations.Nullable public final net.corda.core.node.services.vault.Sort$Direction component4()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression copy(net.corda.core.node.services.vault.Column, net.corda.core.node.services.vault.ColumnPredicate, List, net.corda.core.node.services.vault.Sort$Direction)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.Column getColumn()
  @org.jetbrains.annotations.Nullable public final List getGroupByColumns()
  @org.jetbrains.annotations.Nullable public final net.corda.core.node.services.vault.Sort$Direction getOrderBy()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate getPredicate()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.CriteriaExpression$BinaryLogical extends net.corda.core.node.services.vault.CriteriaExpression
  public <init>(net.corda.core.node.services.vault.CriteriaExpression, net.corda.core.node.services.vault.CriteriaExpression, net.corda.core.node.services.vault.BinaryLogicalOperator)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.BinaryLogicalOperator component3()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$BinaryLogical copy(net.corda.core.node.services.vault.CriteriaExpression, net.corda.core.node.services.vault.CriteriaExpression, net.corda.core.node.services.vault.BinaryLogicalOperator)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression getLeft()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.BinaryLogicalOperator getOperator()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression getRight()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression extends net.corda.core.node.services.vault.CriteriaExpression
  public <init>(net.corda.core.node.services.vault.Column, net.corda.core.node.services.vault.ColumnPredicate)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.Column component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression copy(net.corda.core.node.services.vault.Column, net.corda.core.node.services.vault.ColumnPredicate)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.Column getColumn()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate getPredicate()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.CriteriaExpression$Not extends net.corda.core.node.services.vault.CriteriaExpression
  public <init>(net.corda.core.node.services.vault.CriteriaExpression)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression$Not copy(net.corda.core.node.services.vault.CriteriaExpression)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression getExpression()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable @net.corda.core.DoNotImplement public final class net.corda.core.node.services.vault.EqualityComparisonOperator extends java.lang.Enum implements net.corda.core.node.services.vault.Operator
  protected <init>(String, int)
  public static net.corda.core.node.services.vault.EqualityComparisonOperator valueOf(String)
  public static net.corda.core.node.services.vault.EqualityComparisonOperator[] values()
##
public interface net.corda.core.node.services.vault.GenericQueryCriteria
  @org.jetbrains.annotations.NotNull public abstract Collection visit(net.corda.core.node.services.vault.BaseQueryCriteriaParser)
##
public static interface net.corda.core.node.services.vault.GenericQueryCriteria$ChainableQueryCriteria
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.services.vault.GenericQueryCriteria and(net.corda.core.node.services.vault.GenericQueryCriteria)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.services.vault.GenericQueryCriteria or(net.corda.core.node.services.vault.GenericQueryCriteria)
##
public static interface net.corda.core.node.services.vault.GenericQueryCriteria$ChainableQueryCriteria$AndVisitor extends net.corda.core.node.services.vault.GenericQueryCriteria
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.services.vault.GenericQueryCriteria getA()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.services.vault.GenericQueryCriteria getB()
  @org.jetbrains.annotations.NotNull public abstract Collection visit(net.corda.core.node.services.vault.BaseQueryCriteriaParser)
##
public static interface net.corda.core.node.services.vault.GenericQueryCriteria$ChainableQueryCriteria$OrVisitor extends net.corda.core.node.services.vault.GenericQueryCriteria
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.services.vault.GenericQueryCriteria getA()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.services.vault.GenericQueryCriteria getB()
  @org.jetbrains.annotations.NotNull public abstract Collection visit(net.corda.core.node.services.vault.BaseQueryCriteriaParser)
##
@net.corda.core.DoNotImplement public interface net.corda.core.node.services.vault.IQueryCriteriaParser extends net.corda.core.node.services.vault.BaseQueryCriteriaParser
  @org.jetbrains.annotations.NotNull public abstract Collection parseCriteria(net.corda.core.node.services.vault.QueryCriteria$CommonQueryCriteria)
  @org.jetbrains.annotations.NotNull public abstract Collection parseCriteria(net.corda.core.node.services.vault.QueryCriteria$FungibleAssetQueryCriteria)
  @org.jetbrains.annotations.NotNull public abstract Collection parseCriteria(net.corda.core.node.services.vault.QueryCriteria$LinearStateQueryCriteria)
  @org.jetbrains.annotations.NotNull public abstract Collection parseCriteria(net.corda.core.node.services.vault.QueryCriteria$VaultCustomQueryCriteria)
  @org.jetbrains.annotations.NotNull public abstract Collection parseCriteria(net.corda.core.node.services.vault.QueryCriteria$VaultQueryCriteria)
##
@net.corda.core.serialization.CordaSerializable @net.corda.core.DoNotImplement public final class net.corda.core.node.services.vault.LikenessOperator extends java.lang.Enum implements net.corda.core.node.services.vault.Operator
  protected <init>(String, int)
  public static net.corda.core.node.services.vault.LikenessOperator valueOf(String)
  public static net.corda.core.node.services.vault.LikenessOperator[] values()
##
@net.corda.core.serialization.CordaSerializable @net.corda.core.DoNotImplement public final class net.corda.core.node.services.vault.NullOperator extends java.lang.Enum implements net.corda.core.node.services.vault.Operator
  protected <init>(String, int)
  public static net.corda.core.node.services.vault.NullOperator valueOf(String)
  public static net.corda.core.node.services.vault.NullOperator[] values()
##
@net.corda.core.serialization.CordaSerializable @net.corda.core.DoNotImplement public interface net.corda.core.node.services.vault.Operator
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.node.services.vault.PageSpecification extends java.lang.Object
  public <init>()
  public <init>(int, int)
  public final int component1()
  public final int component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.PageSpecification copy(int, int)
  public boolean equals(Object)
  public final int getPageNumber()
  public final int getPageSize()
  public int hashCode()
  public final boolean isDefault()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public abstract class net.corda.core.node.services.vault.QueryCriteria extends java.lang.Object implements net.corda.core.node.services.vault.GenericQueryCriteria$ChainableQueryCriteria, net.corda.core.node.services.vault.GenericQueryCriteria
  @org.jetbrains.annotations.NotNull public net.corda.core.node.services.vault.QueryCriteria and(net.corda.core.node.services.vault.QueryCriteria)
  @org.jetbrains.annotations.NotNull public net.corda.core.node.services.vault.QueryCriteria or(net.corda.core.node.services.vault.QueryCriteria)
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.QueryCriteria$AndComposition extends net.corda.core.node.services.vault.QueryCriteria implements net.corda.core.node.services.vault.GenericQueryCriteria$ChainableQueryCriteria$AndVisitor
  public <init>(net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.QueryCriteria)
  @org.jetbrains.annotations.NotNull public net.corda.core.node.services.vault.QueryCriteria getA()
  @org.jetbrains.annotations.NotNull public net.corda.core.node.services.vault.QueryCriteria getB()
  @org.jetbrains.annotations.NotNull public Collection visit(net.corda.core.node.services.vault.IQueryCriteriaParser)
##
@net.corda.core.serialization.CordaSerializable public abstract static class net.corda.core.node.services.vault.QueryCriteria$CommonQueryCriteria extends net.corda.core.node.services.vault.QueryCriteria
  public <init>()
  @org.jetbrains.annotations.Nullable public abstract Set getContractStateTypes()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.services.Vault$StateStatus getStatus()
  @org.jetbrains.annotations.NotNull public Collection visit(net.corda.core.node.services.vault.IQueryCriteriaParser)
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.QueryCriteria$FungibleAssetQueryCriteria extends net.corda.core.node.services.vault.QueryCriteria$CommonQueryCriteria
  public <init>()
  public <init>(List)
  public <init>(List, List)
  public <init>(List, List, net.corda.core.node.services.vault.ColumnPredicate)
  public <init>(List, List, net.corda.core.node.services.vault.ColumnPredicate, List)
  public <init>(List, List, net.corda.core.node.services.vault.ColumnPredicate, List, List)
  public <init>(List, List, net.corda.core.node.services.vault.ColumnPredicate, List, List, net.corda.core.node.services.Vault$StateStatus)
  public <init>(List, List, net.corda.core.node.services.vault.ColumnPredicate, List, List, net.corda.core.node.services.Vault$StateStatus, Set)
  @org.jetbrains.annotations.Nullable public final List component1()
  @org.jetbrains.annotations.Nullable public final List component2()
  @org.jetbrains.annotations.Nullable public final net.corda.core.node.services.vault.ColumnPredicate component3()
  @org.jetbrains.annotations.Nullable public final List component4()
  @org.jetbrains.annotations.Nullable public final List component5()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.Vault$StateStatus component6()
  @org.jetbrains.annotations.Nullable public final Set component7()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.QueryCriteria$FungibleAssetQueryCriteria copy(List, List, net.corda.core.node.services.vault.ColumnPredicate, List, List, net.corda.core.node.services.Vault$StateStatus, Set)
  public boolean equals(Object)
  @org.jetbrains.annotations.Nullable public Set getContractStateTypes()
  @org.jetbrains.annotations.Nullable public final List getIssuer()
  @org.jetbrains.annotations.Nullable public final List getIssuerRef()
  @org.jetbrains.annotations.Nullable public final List getOwner()
  @org.jetbrains.annotations.Nullable public final List getParticipants()
  @org.jetbrains.annotations.Nullable public final net.corda.core.node.services.vault.ColumnPredicate getQuantity()
  @org.jetbrains.annotations.NotNull public net.corda.core.node.services.Vault$StateStatus getStatus()
  public int hashCode()
  public String toString()
  @org.jetbrains.annotations.NotNull public Collection visit(net.corda.core.node.services.vault.IQueryCriteriaParser)
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.QueryCriteria$LinearStateQueryCriteria extends net.corda.core.node.services.vault.QueryCriteria$CommonQueryCriteria
  public <init>()
  public <init>(List)
  public <init>(List, List)
  public <init>(List, List, List)
  public <init>(List, List, List, net.corda.core.node.services.Vault$StateStatus)
  public <init>(List, List, List, net.corda.core.node.services.Vault$StateStatus, Set)
  public <init>(List, List, net.corda.core.node.services.Vault$StateStatus, Set)
  @org.jetbrains.annotations.Nullable public final List component1()
  @org.jetbrains.annotations.Nullable public final List component2()
  @org.jetbrains.annotations.Nullable public final List component3()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.Vault$StateStatus component4()
  @org.jetbrains.annotations.Nullable public final Set component5()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.QueryCriteria$LinearStateQueryCriteria copy(List, List, List, net.corda.core.node.services.Vault$StateStatus, Set)
  public boolean equals(Object)
  @org.jetbrains.annotations.Nullable public Set getContractStateTypes()
  @org.jetbrains.annotations.Nullable public final List getExternalId()
  @org.jetbrains.annotations.Nullable public final List getParticipants()
  @org.jetbrains.annotations.NotNull public net.corda.core.node.services.Vault$StateStatus getStatus()
  @org.jetbrains.annotations.Nullable public final List getUuid()
  public int hashCode()
  public String toString()
  @org.jetbrains.annotations.NotNull public Collection visit(net.corda.core.node.services.vault.IQueryCriteriaParser)
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.QueryCriteria$OrComposition extends net.corda.core.node.services.vault.QueryCriteria implements net.corda.core.node.services.vault.GenericQueryCriteria$ChainableQueryCriteria$OrVisitor
  public <init>(net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.QueryCriteria)
  @org.jetbrains.annotations.NotNull public net.corda.core.node.services.vault.QueryCriteria getA()
  @org.jetbrains.annotations.NotNull public net.corda.core.node.services.vault.QueryCriteria getB()
  @org.jetbrains.annotations.NotNull public Collection visit(net.corda.core.node.services.vault.IQueryCriteriaParser)
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.QueryCriteria$SoftLockingCondition extends java.lang.Object
  public <init>(net.corda.core.node.services.vault.QueryCriteria$SoftLockingType, List)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.QueryCriteria$SoftLockingType component1()
  @org.jetbrains.annotations.NotNull public final List component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.QueryCriteria$SoftLockingCondition copy(net.corda.core.node.services.vault.QueryCriteria$SoftLockingType, List)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final List getLockIds()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.QueryCriteria$SoftLockingType getType()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.QueryCriteria$SoftLockingType extends java.lang.Enum
  protected <init>(String, int)
  public static net.corda.core.node.services.vault.QueryCriteria$SoftLockingType valueOf(String)
  public static net.corda.core.node.services.vault.QueryCriteria$SoftLockingType[] values()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.QueryCriteria$TimeCondition extends java.lang.Object
  public <init>(net.corda.core.node.services.vault.QueryCriteria$TimeInstantType, net.corda.core.node.services.vault.ColumnPredicate)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.QueryCriteria$TimeInstantType component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.QueryCriteria$TimeCondition copy(net.corda.core.node.services.vault.QueryCriteria$TimeInstantType, net.corda.core.node.services.vault.ColumnPredicate)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.ColumnPredicate getPredicate()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.QueryCriteria$TimeInstantType getType()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.QueryCriteria$TimeInstantType extends java.lang.Enum
  protected <init>(String, int)
  public static net.corda.core.node.services.vault.QueryCriteria$TimeInstantType valueOf(String)
  public static net.corda.core.node.services.vault.QueryCriteria$TimeInstantType[] values()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.QueryCriteria$VaultCustomQueryCriteria extends net.corda.core.node.services.vault.QueryCriteria$CommonQueryCriteria
  public <init>(net.corda.core.node.services.vault.CriteriaExpression)
  public <init>(net.corda.core.node.services.vault.CriteriaExpression, net.corda.core.node.services.Vault$StateStatus)
  public <init>(net.corda.core.node.services.vault.CriteriaExpression, net.corda.core.node.services.Vault$StateStatus, Set)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.Vault$StateStatus component2()
  @org.jetbrains.annotations.Nullable public final Set component3()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.QueryCriteria$VaultCustomQueryCriteria copy(net.corda.core.node.services.vault.CriteriaExpression, net.corda.core.node.services.Vault$StateStatus, Set)
  public boolean equals(Object)
  @org.jetbrains.annotations.Nullable public Set getContractStateTypes()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.CriteriaExpression getExpression()
  @org.jetbrains.annotations.NotNull public net.corda.core.node.services.Vault$StateStatus getStatus()
  public int hashCode()
  public String toString()
  @org.jetbrains.annotations.NotNull public Collection visit(net.corda.core.node.services.vault.IQueryCriteriaParser)
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.QueryCriteria$VaultQueryCriteria extends net.corda.core.node.services.vault.QueryCriteria$CommonQueryCriteria
  public <init>()
  public <init>(net.corda.core.node.services.Vault$StateStatus)
  public <init>(net.corda.core.node.services.Vault$StateStatus, Set)
  public <init>(net.corda.core.node.services.Vault$StateStatus, Set, List)
  public <init>(net.corda.core.node.services.Vault$StateStatus, Set, List, List)
  public <init>(net.corda.core.node.services.Vault$StateStatus, Set, List, List, net.corda.core.node.services.vault.QueryCriteria$SoftLockingCondition)
  public <init>(net.corda.core.node.services.Vault$StateStatus, Set, List, List, net.corda.core.node.services.vault.QueryCriteria$SoftLockingCondition, net.corda.core.node.services.vault.QueryCriteria$TimeCondition)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.Vault$StateStatus component1()
  @org.jetbrains.annotations.Nullable public final Set component2()
  @org.jetbrains.annotations.Nullable public final List component3()
  @org.jetbrains.annotations.Nullable public final List component4()
  @org.jetbrains.annotations.Nullable public final net.corda.core.node.services.vault.QueryCriteria$SoftLockingCondition component5()
  @org.jetbrains.annotations.Nullable public final net.corda.core.node.services.vault.QueryCriteria$TimeCondition component6()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.QueryCriteria$VaultQueryCriteria copy(net.corda.core.node.services.Vault$StateStatus, Set, List, List, net.corda.core.node.services.vault.QueryCriteria$SoftLockingCondition, net.corda.core.node.services.vault.QueryCriteria$TimeCondition)
  public boolean equals(Object)
  @org.jetbrains.annotations.Nullable public Set getContractStateTypes()
  @org.jetbrains.annotations.Nullable public final List getNotary()
  @org.jetbrains.annotations.Nullable public final net.corda.core.node.services.vault.QueryCriteria$SoftLockingCondition getSoftLockingCondition()
  @org.jetbrains.annotations.Nullable public final List getStateRefs()
  @org.jetbrains.annotations.NotNull public net.corda.core.node.services.Vault$StateStatus getStatus()
  @org.jetbrains.annotations.Nullable public final net.corda.core.node.services.vault.QueryCriteria$TimeCondition getTimeCondition()
  public int hashCode()
  public String toString()
  @org.jetbrains.annotations.NotNull public Collection visit(net.corda.core.node.services.vault.IQueryCriteriaParser)
##
public final class net.corda.core.node.services.vault.QueryCriteriaUtils extends java.lang.Object
  public static final Object builder(kotlin.jvm.functions.Function1)
  @org.jetbrains.annotations.NotNull public static final String getColumnName(net.corda.core.node.services.vault.Column)
  @org.jetbrains.annotations.NotNull public static final Class resolveEnclosingObjectFromColumn(net.corda.core.node.services.vault.Column)
  @org.jetbrains.annotations.NotNull public static final Class resolveEnclosingObjectFromExpression(net.corda.core.node.services.vault.CriteriaExpression)
  public static final int DEFAULT_PAGE_NUM = 1
  public static final int DEFAULT_PAGE_SIZE = 200
  public static final int MAX_PAGE_SIZE = 2147483647
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.node.services.vault.Sort extends net.corda.core.node.services.vault.BaseSort
  public <init>(Collection)
  @org.jetbrains.annotations.NotNull public final Collection component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.Sort copy(Collection)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final Collection getColumns()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable @net.corda.core.DoNotImplement public static interface net.corda.core.node.services.vault.Sort$Attribute
##
@net.corda.core.serialization.CordaSerializable @net.corda.core.DoNotImplement public static final class net.corda.core.node.services.vault.Sort$CommonStateAttribute extends java.lang.Enum implements net.corda.core.node.services.vault.Sort$Attribute
  protected <init>(String, int, String, String)
  @org.jetbrains.annotations.Nullable public final String getAttributeChild()
  @org.jetbrains.annotations.NotNull public final String getAttributeParent()
  public static net.corda.core.node.services.vault.Sort$CommonStateAttribute valueOf(String)
  public static net.corda.core.node.services.vault.Sort$CommonStateAttribute[] values()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.Sort$Direction extends java.lang.Enum
  protected <init>(String, int)
  public static net.corda.core.node.services.vault.Sort$Direction valueOf(String)
  public static net.corda.core.node.services.vault.Sort$Direction[] values()
##
@net.corda.core.serialization.CordaSerializable @net.corda.core.DoNotImplement public static final class net.corda.core.node.services.vault.Sort$FungibleStateAttribute extends java.lang.Enum implements net.corda.core.node.services.vault.Sort$Attribute
  protected <init>(String, int, String)
  @org.jetbrains.annotations.NotNull public final String getAttributeName()
  public static net.corda.core.node.services.vault.Sort$FungibleStateAttribute valueOf(String)
  public static net.corda.core.node.services.vault.Sort$FungibleStateAttribute[] values()
##
@net.corda.core.serialization.CordaSerializable @net.corda.core.DoNotImplement public static final class net.corda.core.node.services.vault.Sort$LinearStateAttribute extends java.lang.Enum implements net.corda.core.node.services.vault.Sort$Attribute
  protected <init>(String, int, String)
  @org.jetbrains.annotations.NotNull public final String getAttributeName()
  public static net.corda.core.node.services.vault.Sort$LinearStateAttribute valueOf(String)
  public static net.corda.core.node.services.vault.Sort$LinearStateAttribute[] values()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.Sort$SortColumn extends java.lang.Object
  public <init>(net.corda.core.node.services.vault.SortAttribute, net.corda.core.node.services.vault.Sort$Direction)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.SortAttribute component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.Sort$Direction component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.Sort$SortColumn copy(net.corda.core.node.services.vault.SortAttribute, net.corda.core.node.services.vault.Sort$Direction)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.Sort$Direction getDirection()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.SortAttribute getSortAttribute()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable @net.corda.core.DoNotImplement public static final class net.corda.core.node.services.vault.Sort$VaultStateAttribute extends java.lang.Enum implements net.corda.core.node.services.vault.Sort$Attribute
  protected <init>(String, int, String)
  @org.jetbrains.annotations.NotNull public final String getAttributeName()
  public static net.corda.core.node.services.vault.Sort$VaultStateAttribute valueOf(String)
  public static net.corda.core.node.services.vault.Sort$VaultStateAttribute[] values()
##
@net.corda.core.serialization.CordaSerializable public abstract class net.corda.core.node.services.vault.SortAttribute extends java.lang.Object
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.SortAttribute$Custom extends net.corda.core.node.services.vault.SortAttribute
  public <init>(Class, String)
  @org.jetbrains.annotations.NotNull public final Class component1()
  @org.jetbrains.annotations.NotNull public final String component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.SortAttribute$Custom copy(Class, String)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final Class getEntityStateClass()
  @org.jetbrains.annotations.NotNull public final String getEntityStateColumnName()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.node.services.vault.SortAttribute$Standard extends net.corda.core.node.services.vault.SortAttribute
  public <init>(net.corda.core.node.services.vault.Sort$Attribute)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.Sort$Attribute component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.SortAttribute$Standard copy(net.corda.core.node.services.vault.Sort$Attribute)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.vault.Sort$Attribute getAttribute()
  public int hashCode()
  public String toString()
##
public final class net.corda.core.schemas.CommonSchema extends java.lang.Object
  public static final net.corda.core.schemas.CommonSchema INSTANCE
##
public final class net.corda.core.schemas.CommonSchemaV1 extends net.corda.core.schemas.MappedSchema
  public static final net.corda.core.schemas.CommonSchemaV1 INSTANCE
##
@javax.persistence.MappedSuperclass @net.corda.core.serialization.CordaSerializable public static class net.corda.core.schemas.CommonSchemaV1$FungibleState extends net.corda.core.schemas.PersistentState
  public <init>(Set, net.corda.core.identity.AbstractParty, long, net.corda.core.identity.AbstractParty, byte[])
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.AbstractParty getIssuer()
  @org.jetbrains.annotations.NotNull public final byte[] getIssuerRef()
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.AbstractParty getOwner()
  @org.jetbrains.annotations.Nullable public final Set getParticipants()
  public final long getQuantity()
  public final void setIssuer(net.corda.core.identity.AbstractParty)
  public final void setIssuerRef(byte[])
  public final void setOwner(net.corda.core.identity.AbstractParty)
  public final void setParticipants(Set)
  public final void setQuantity(long)
##
@javax.persistence.MappedSuperclass @net.corda.core.serialization.CordaSerializable public static class net.corda.core.schemas.CommonSchemaV1$LinearState extends net.corda.core.schemas.PersistentState
  public <init>(Set, String, UUID)
  public <init>(net.corda.core.contracts.UniqueIdentifier, Set)
  @org.jetbrains.annotations.Nullable public final String getExternalId()
  @org.jetbrains.annotations.Nullable public final Set getParticipants()
  @org.jetbrains.annotations.NotNull public final UUID getUuid()
  public final void setExternalId(String)
  public final void setParticipants(Set)
  public final void setUuid(UUID)
##
public class net.corda.core.schemas.MappedSchema extends java.lang.Object
  public <init>(Class, int, Iterable)
  @org.jetbrains.annotations.NotNull public final Iterable getMappedTypes()
  @org.jetbrains.annotations.NotNull public final String getName()
  public final int getVersion()
  @org.jetbrains.annotations.NotNull public String toString()
##
@javax.persistence.MappedSuperclass @net.corda.core.serialization.CordaSerializable public class net.corda.core.schemas.PersistentState extends java.lang.Object implements net.corda.core.schemas.StatePersistable
  public <init>()
  public <init>(net.corda.core.schemas.PersistentStateRef)
  @org.jetbrains.annotations.Nullable public final net.corda.core.schemas.PersistentStateRef getStateRef()
  public final void setStateRef(net.corda.core.schemas.PersistentStateRef)
##
@javax.persistence.Embeddable public final class net.corda.core.schemas.PersistentStateRef extends java.lang.Object implements java.io.Serializable
  public <init>()
  public <init>(String, Integer)
  public <init>(net.corda.core.contracts.StateRef)
  @org.jetbrains.annotations.Nullable public final String component1()
  @org.jetbrains.annotations.Nullable public final Integer component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.schemas.PersistentStateRef copy(String, Integer)
  public boolean equals(Object)
  @org.jetbrains.annotations.Nullable public final Integer getIndex()
  @org.jetbrains.annotations.Nullable public final String getTxId()
  public int hashCode()
  public final void setIndex(Integer)
  public final void setTxId(String)
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public interface net.corda.core.schemas.QueryableState extends net.corda.core.contracts.ContractState
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.schemas.PersistentState generateMappedObject(net.corda.core.schemas.MappedSchema)
  @org.jetbrains.annotations.NotNull public abstract Iterable supportedSchemas()
##
public interface net.corda.core.schemas.StatePersistable
##
public interface net.corda.core.serialization.ClassWhitelist
  public abstract boolean hasListed(Class)
##
public @interface net.corda.core.serialization.CordaSerializable
##
public @interface net.corda.core.serialization.CordaSerializationTransformEnumDefault
  public abstract String new()
  public abstract String old()
##
public @interface net.corda.core.serialization.CordaSerializationTransformEnumDefaults
  public abstract net.corda.core.serialization.CordaSerializationTransformEnumDefault[] value()
##
public @interface net.corda.core.serialization.CordaSerializationTransformRename
  public abstract String from()
  public abstract String to()
##
public @interface net.corda.core.serialization.CordaSerializationTransformRenames
  public abstract net.corda.core.serialization.CordaSerializationTransformRename[] value()
##
public @interface net.corda.core.serialization.DeprecatedConstructorForDeserialization
  public abstract int version()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.serialization.MissingAttachmentsException extends net.corda.core.CordaException
  public <init>(List)
  @org.jetbrains.annotations.NotNull public final List getIds()
##
public final class net.corda.core.serialization.ObjectWithCompatibleContext extends java.lang.Object
  public <init>(Object, net.corda.core.serialization.SerializationContext)
  @org.jetbrains.annotations.NotNull public final Object component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.serialization.SerializationContext component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.serialization.ObjectWithCompatibleContext copy(Object, net.corda.core.serialization.SerializationContext)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.serialization.SerializationContext getContext()
  @org.jetbrains.annotations.NotNull public final Object getObj()
  public int hashCode()
  public String toString()
##
public final class net.corda.core.serialization.SerializationAPIKt extends java.lang.Object
  @org.jetbrains.annotations.NotNull public static final net.corda.core.serialization.SerializedBytes serialize(Object, net.corda.core.serialization.SerializationFactory, net.corda.core.serialization.SerializationContext)
##
public interface net.corda.core.serialization.SerializationContext
  @org.jetbrains.annotations.NotNull public abstract ClassLoader getDeserializationClassLoader()
  public abstract boolean getObjectReferencesEnabled()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.utilities.ByteSequence getPreferredSerializationVersion()
  @org.jetbrains.annotations.NotNull public abstract Map getProperties()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.serialization.SerializationContext$UseCase getUseCase()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.serialization.ClassWhitelist getWhitelist()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.serialization.SerializationContext withAttachmentsClassLoader(List)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.serialization.SerializationContext withClassLoader(ClassLoader)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.serialization.SerializationContext withPreferredSerializationVersion(net.corda.core.utilities.ByteSequence)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.serialization.SerializationContext withProperty(Object, Object)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.serialization.SerializationContext withWhitelisted(Class)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.serialization.SerializationContext withoutReferences()
##
public static final class net.corda.core.serialization.SerializationContext$UseCase extends java.lang.Enum
  protected <init>(String, int)
  public static net.corda.core.serialization.SerializationContext$UseCase valueOf(String)
  public static net.corda.core.serialization.SerializationContext$UseCase[] values()
##
public interface net.corda.core.serialization.SerializationCustomSerializer
  public abstract Object fromProxy(Object)
  public abstract Object toProxy(Object)
##
public final class net.corda.core.serialization.SerializationDefaults extends java.lang.Object
  @org.jetbrains.annotations.NotNull public final net.corda.core.serialization.SerializationContext getCHECKPOINT_CONTEXT()
  @org.jetbrains.annotations.NotNull public final net.corda.core.serialization.SerializationContext getP2P_CONTEXT()
  @org.jetbrains.annotations.NotNull public final net.corda.core.serialization.SerializationContext getRPC_CLIENT_CONTEXT()
  @org.jetbrains.annotations.NotNull public final net.corda.core.serialization.SerializationContext getRPC_SERVER_CONTEXT()
  @org.jetbrains.annotations.NotNull public final net.corda.core.serialization.SerializationFactory getSERIALIZATION_FACTORY()
  @org.jetbrains.annotations.NotNull public final net.corda.core.serialization.SerializationContext getSTORAGE_CONTEXT()
  public static final net.corda.core.serialization.SerializationDefaults INSTANCE
##
public abstract class net.corda.core.serialization.SerializationFactory extends java.lang.Object
  public <init>()
  public final Object asCurrent(kotlin.jvm.functions.Function1)
  @org.jetbrains.annotations.NotNull public abstract Object deserialize(net.corda.core.utilities.ByteSequence, Class, net.corda.core.serialization.SerializationContext)
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.serialization.ObjectWithCompatibleContext deserializeWithCompatibleContext(net.corda.core.utilities.ByteSequence, Class, net.corda.core.serialization.SerializationContext)
  @org.jetbrains.annotations.Nullable public final net.corda.core.serialization.SerializationContext getCurrentContext()
  @org.jetbrains.annotations.NotNull public final net.corda.core.serialization.SerializationContext getDefaultContext()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.serialization.SerializedBytes serialize(Object, net.corda.core.serialization.SerializationContext)
  public final Object withCurrentContext(net.corda.core.serialization.SerializationContext, kotlin.jvm.functions.Function0)
  public static final net.corda.core.serialization.SerializationFactory$Companion Companion
##
public static final class net.corda.core.serialization.SerializationFactory$Companion extends java.lang.Object
  @org.jetbrains.annotations.Nullable public final net.corda.core.serialization.SerializationFactory getCurrentFactory()
  @org.jetbrains.annotations.NotNull public final net.corda.core.serialization.SerializationFactory getDefaultFactory()
##
public interface net.corda.core.serialization.SerializationToken
  @org.jetbrains.annotations.NotNull public abstract Object fromToken(net.corda.core.serialization.SerializeAsTokenContext)
##
public interface net.corda.core.serialization.SerializationWhitelist
  @org.jetbrains.annotations.NotNull public abstract List getWhitelist()
##
@net.corda.core.serialization.CordaSerializable public interface net.corda.core.serialization.SerializeAsToken
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.serialization.SerializationToken toToken(net.corda.core.serialization.SerializeAsTokenContext)
##
public interface net.corda.core.serialization.SerializeAsTokenContext
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.node.ServiceHub getServiceHub()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.serialization.SerializeAsToken getSingleton(String)
  public abstract void putSingleton(net.corda.core.serialization.SerializeAsToken)
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.serialization.SerializedBytes extends net.corda.core.utilities.OpaqueBytes
  public <init>(byte[])
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash getHash()
##
public final class net.corda.core.serialization.SingletonSerializationToken extends java.lang.Object implements net.corda.core.serialization.SerializationToken
  @org.jetbrains.annotations.NotNull public net.corda.core.serialization.SerializeAsToken fromToken(net.corda.core.serialization.SerializeAsTokenContext)
  @org.jetbrains.annotations.NotNull public final net.corda.core.serialization.SingletonSerializationToken registerWithContext(net.corda.core.serialization.SerializeAsTokenContext, net.corda.core.serialization.SerializeAsToken)
  public static final net.corda.core.serialization.SingletonSerializationToken$Companion Companion
##
public static final class net.corda.core.serialization.SingletonSerializationToken$Companion extends java.lang.Object
  @org.jetbrains.annotations.NotNull public final net.corda.core.serialization.SingletonSerializationToken singletonSerializationToken(Class)
##
@net.corda.core.serialization.CordaSerializable public abstract class net.corda.core.serialization.SingletonSerializeAsToken extends java.lang.Object implements net.corda.core.serialization.SerializeAsToken
  public <init>()
  @org.jetbrains.annotations.NotNull public net.corda.core.serialization.SingletonSerializationToken toToken(net.corda.core.serialization.SerializeAsTokenContext)
##
@net.corda.core.DoNotImplement public abstract class net.corda.core.transactions.BaseTransaction extends java.lang.Object implements net.corda.core.contracts.NamedByHash
  public <init>()
  protected void checkBaseInvariants()
  @org.jetbrains.annotations.NotNull public final List filterOutRefs(Class, function.Predicate)
  @org.jetbrains.annotations.NotNull public final List filterOutputs(Class, function.Predicate)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.StateAndRef findOutRef(Class, function.Predicate)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.ContractState findOutput(Class, function.Predicate)
  @org.jetbrains.annotations.NotNull public abstract List getInputs()
  @org.jetbrains.annotations.Nullable public abstract net.corda.core.identity.Party getNotary()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.ContractState getOutput(int)
  @org.jetbrains.annotations.NotNull public final List getOutputStates()
  @org.jetbrains.annotations.NotNull public abstract List getOutputs()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.StateAndRef outRef(int)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.StateAndRef outRef(net.corda.core.contracts.ContractState)
  @org.jetbrains.annotations.NotNull public final List outRefsOfType(Class)
  @org.jetbrains.annotations.NotNull public final List outputsOfType(Class)
  @org.jetbrains.annotations.NotNull public String toString()
##
@net.corda.core.serialization.CordaSerializable public class net.corda.core.transactions.ComponentGroup extends java.lang.Object
  public <init>(int, List)
  @org.jetbrains.annotations.NotNull public List getComponents()
  public int getGroupIndex()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.transactions.ComponentVisibilityException extends net.corda.core.CordaException
  public <init>(net.corda.core.crypto.SecureHash, String)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash getId()
  @org.jetbrains.annotations.NotNull public final String getReason()
##
@net.corda.core.DoNotImplement public abstract class net.corda.core.transactions.CoreTransaction extends net.corda.core.transactions.BaseTransaction
  public <init>()
  @org.jetbrains.annotations.NotNull public abstract List getInputs()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.transactions.FilteredComponentGroup extends net.corda.core.transactions.ComponentGroup
  public <init>(int, List, List, net.corda.core.crypto.PartialMerkleTree)
  public final int component1()
  @org.jetbrains.annotations.NotNull public final List component2()
  @org.jetbrains.annotations.NotNull public final List component3()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.PartialMerkleTree component4()
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.FilteredComponentGroup copy(int, List, List, net.corda.core.crypto.PartialMerkleTree)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public List getComponents()
  public int getGroupIndex()
  @org.jetbrains.annotations.NotNull public final List getNonces()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.PartialMerkleTree getPartialMerkleTree()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable @net.corda.core.DoNotImplement public final class net.corda.core.transactions.FilteredTransaction extends net.corda.core.transactions.TraversableTransaction
  public <init>(net.corda.core.crypto.SecureHash, List, List)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.transactions.FilteredTransaction buildFilteredTransaction(net.corda.core.transactions.WireTransaction, function.Predicate)
  public final void checkAllComponentsVisible(net.corda.core.contracts.ComponentGroupEnum)
  public final void checkCommandVisibility(java.security.PublicKey)
  public final boolean checkWithFun(kotlin.jvm.functions.Function1)
  @org.jetbrains.annotations.NotNull public final List getFilteredComponentGroups()
  @org.jetbrains.annotations.NotNull public final List getGroupHashes()
  @org.jetbrains.annotations.NotNull public net.corda.core.crypto.SecureHash getId()
  public final void verify()
  public static final net.corda.core.transactions.FilteredTransaction$Companion Companion
##
public static final class net.corda.core.transactions.FilteredTransaction$Companion extends java.lang.Object
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.FilteredTransaction buildFilteredTransaction(net.corda.core.transactions.WireTransaction, function.Predicate)
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.transactions.FilteredTransactionVerificationException extends net.corda.core.CordaException
  public <init>(net.corda.core.crypto.SecureHash, String)
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash getId()
  @org.jetbrains.annotations.NotNull public final String getReason()
##
@net.corda.core.DoNotImplement public abstract class net.corda.core.transactions.FullTransaction extends net.corda.core.transactions.BaseTransaction
  public <init>()
  protected void checkBaseInvariants()
  @org.jetbrains.annotations.NotNull public abstract List getInputs()
##
@net.corda.core.serialization.CordaSerializable @net.corda.core.DoNotImplement public final class net.corda.core.transactions.LedgerTransaction extends net.corda.core.transactions.FullTransaction
  public <init>(List, List, List, List, net.corda.core.crypto.SecureHash, net.corda.core.identity.Party, net.corda.core.contracts.TimeWindow, net.corda.core.contracts.PrivacySalt)
  @org.jetbrains.annotations.NotNull public final List commandsOfType(Class)
  @org.jetbrains.annotations.NotNull public final List component1()
  @org.jetbrains.annotations.NotNull public final List component2()
  @org.jetbrains.annotations.NotNull public final List component3()
  @org.jetbrains.annotations.NotNull public final List component4()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash component5()
  @org.jetbrains.annotations.Nullable public final net.corda.core.identity.Party component6()
  @org.jetbrains.annotations.Nullable public final net.corda.core.contracts.TimeWindow component7()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.PrivacySalt component8()
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.LedgerTransaction copy(List, List, List, List, net.corda.core.crypto.SecureHash, net.corda.core.identity.Party, net.corda.core.contracts.TimeWindow, net.corda.core.contracts.PrivacySalt)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final List filterCommands(Class, function.Predicate)
  @org.jetbrains.annotations.NotNull public final List filterInRefs(Class, function.Predicate)
  @org.jetbrains.annotations.NotNull public final List filterInputs(Class, function.Predicate)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.Command findCommand(Class, function.Predicate)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.StateAndRef findInRef(Class, function.Predicate)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.ContractState findInput(Class, function.Predicate)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.Attachment getAttachment(int)
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.Attachment getAttachment(net.corda.core.crypto.SecureHash)
  @org.jetbrains.annotations.NotNull public final List getAttachments()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.Command getCommand(int)
  @org.jetbrains.annotations.NotNull public final List getCommands()
  @org.jetbrains.annotations.NotNull public net.corda.core.crypto.SecureHash getId()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.ContractState getInput(int)
  @org.jetbrains.annotations.NotNull public final List getInputStates()
  @org.jetbrains.annotations.NotNull public List getInputs()
  @org.jetbrains.annotations.Nullable public net.corda.core.identity.Party getNotary()
  @org.jetbrains.annotations.NotNull public List getOutputs()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.PrivacySalt getPrivacySalt()
  @org.jetbrains.annotations.Nullable public final net.corda.core.contracts.TimeWindow getTimeWindow()
  @org.jetbrains.annotations.NotNull public final List groupStates(Class, kotlin.jvm.functions.Function1)
  public int hashCode()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.StateAndRef inRef(int)
  @org.jetbrains.annotations.NotNull public final List inRefsOfType(Class)
  @org.jetbrains.annotations.NotNull public final List inputsOfType(Class)
  public String toString()
  public final void verify()
  public static final net.corda.core.transactions.LedgerTransaction$Companion Companion
##
public static final class net.corda.core.transactions.LedgerTransaction$InOutGroup extends java.lang.Object
  public <init>(List, List, Object)
  @org.jetbrains.annotations.NotNull public final List component1()
  @org.jetbrains.annotations.NotNull public final List component2()
  @org.jetbrains.annotations.NotNull public final Object component3()
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.LedgerTransaction$InOutGroup copy(List, List, Object)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final Object getGroupingKey()
  @org.jetbrains.annotations.NotNull public final List getInputs()
  @org.jetbrains.annotations.NotNull public final List getOutputs()
  public int hashCode()
  public String toString()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.transactions.MissingContractAttachments extends net.corda.core.flows.FlowException
  public <init>(List)
  @org.jetbrains.annotations.NotNull public final List getStates()
##
@net.corda.core.DoNotImplement public final class net.corda.core.transactions.NotaryChangeLedgerTransaction extends net.corda.core.transactions.FullTransaction implements net.corda.core.transactions.TransactionWithSignatures
  public <init>(List, net.corda.core.identity.Party, net.corda.core.identity.Party, net.corda.core.crypto.SecureHash, List)
  public void checkSignaturesAreValid()
  @org.jetbrains.annotations.NotNull public final List component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.Party component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.Party component3()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.SecureHash component4()
  @org.jetbrains.annotations.NotNull public final List component5()
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.NotaryChangeLedgerTransaction copy(List, net.corda.core.identity.Party, net.corda.core.identity.Party, net.corda.core.crypto.SecureHash, List)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public net.corda.core.crypto.SecureHash getId()
  @org.jetbrains.annotations.NotNull public List getInputs()
  @org.jetbrains.annotations.NotNull public List getKeyDescriptions(Set)
  @org.jetbrains.annotations.NotNull public Set getMissingSigners()
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.Party getNewNotary()
  @org.jetbrains.annotations.NotNull public net.corda.core.identity.Party getNotary()
  @org.jetbrains.annotations.NotNull public List getOutputs()
  @org.jetbrains.annotations.NotNull public Set getRequiredSigningKeys()
  @org.jetbrains.annotations.NotNull public List getSigs()
  public int hashCode()
  public String toString()
  public void verifyRequiredSignatures()
  public void verifySignaturesExcept(Collection)
##
@net.corda.core.serialization.CordaSerializable @net.corda.core.DoNotImplement public final class net.corda.core.transactions.NotaryChangeWireTransaction extends net.corda.core.transactions.CoreTransaction
  public <init>(List, net.corda.core.identity.Party, net.corda.core.identity.Party)
  @org.jetbrains.annotations.NotNull public final List component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.Party component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.Party component3()
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.NotaryChangeWireTransaction copy(List, net.corda.core.identity.Party, net.corda.core.identity.Party)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public net.corda.core.crypto.SecureHash getId()
  @org.jetbrains.annotations.NotNull public List getInputs()
  @org.jetbrains.annotations.NotNull public final net.corda.core.identity.Party getNewNotary()
  @org.jetbrains.annotations.NotNull public net.corda.core.identity.Party getNotary()
  @org.jetbrains.annotations.NotNull public List getOutputs()
  public int hashCode()
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.NotaryChangeLedgerTransaction resolve(net.corda.core.node.ServiceHub, List)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.NotaryChangeLedgerTransaction resolve(net.corda.core.node.StateLoader, List)
  public String toString()
##
@net.corda.core.serialization.CordaSerializable @net.corda.core.DoNotImplement public final class net.corda.core.transactions.SignedTransaction extends java.lang.Object implements net.corda.core.transactions.TransactionWithSignatures
  public <init>(net.corda.core.serialization.SerializedBytes, List)
  public <init>(net.corda.core.transactions.CoreTransaction, List)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.FilteredTransaction buildFilteredTransaction(function.Predicate)
  public void checkSignaturesAreValid()
  @org.jetbrains.annotations.NotNull public final net.corda.core.serialization.SerializedBytes component1()
  @org.jetbrains.annotations.NotNull public final List component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.SignedTransaction copy(net.corda.core.serialization.SerializedBytes, List)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public net.corda.core.crypto.SecureHash getId()
  @org.jetbrains.annotations.NotNull public final List getInputs()
  @org.jetbrains.annotations.NotNull public ArrayList getKeyDescriptions(Set)
  @org.jetbrains.annotations.NotNull public Set getMissingSigners()
  @org.jetbrains.annotations.Nullable public final net.corda.core.identity.Party getNotary()
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.NotaryChangeWireTransaction getNotaryChangeTx()
  @org.jetbrains.annotations.NotNull public Set getRequiredSigningKeys()
  @org.jetbrains.annotations.NotNull public List getSigs()
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.WireTransaction getTx()
  @org.jetbrains.annotations.NotNull public final net.corda.core.serialization.SerializedBytes getTxBits()
  public int hashCode()
  public final boolean isNotaryChangeTransaction()
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.SignedTransaction plus(Collection)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.SignedTransaction plus(net.corda.core.crypto.TransactionSignature)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.BaseTransaction resolveBaseTransaction(net.corda.core.node.StateLoader)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.NotaryChangeLedgerTransaction resolveNotaryChangeTransaction(net.corda.core.node.ServiceHub)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.NotaryChangeLedgerTransaction resolveNotaryChangeTransaction(net.corda.core.node.StateLoader)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.TransactionWithSignatures resolveTransactionWithSignatures(net.corda.core.node.ServiceHub)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.LedgerTransaction toLedgerTransaction(net.corda.core.node.ServiceHub)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.LedgerTransaction toLedgerTransaction(net.corda.core.node.ServiceHub, boolean)
  @org.jetbrains.annotations.NotNull public String toString()
  public final void verify(net.corda.core.node.ServiceHub)
  public final void verify(net.corda.core.node.ServiceHub, boolean)
  public void verifyRequiredSignatures()
  public void verifySignaturesExcept(Collection)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.SignedTransaction withAdditionalSignature(java.security.KeyPair, net.corda.core.crypto.SignatureMetadata)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.SignedTransaction withAdditionalSignature(net.corda.core.crypto.TransactionSignature)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.SignedTransaction withAdditionalSignatures(Iterable)
  public static final net.corda.core.transactions.SignedTransaction$Companion Companion
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.transactions.SignedTransaction$SignaturesMissingException extends java.security.SignatureException implements net.corda.core.CordaThrowable, net.corda.core.contracts.NamedByHash
  public <init>(Set, List, net.corda.core.crypto.SecureHash)
  public void addSuppressed(Throwable[])
  @org.jetbrains.annotations.NotNull public final List getDescriptions()
  @org.jetbrains.annotations.NotNull public net.corda.core.crypto.SecureHash getId()
  @org.jetbrains.annotations.NotNull public final Set getMissing()
  @org.jetbrains.annotations.Nullable public String getOriginalExceptionClassName()
  @org.jetbrains.annotations.Nullable public String getOriginalMessage()
  public void setCause(Throwable)
  public void setMessage(String)
  public void setOriginalExceptionClassName(String)
##
public class net.corda.core.transactions.TransactionBuilder extends java.lang.Object
  public <init>()
  public <init>(net.corda.core.identity.Party)
  public <init>(net.corda.core.identity.Party, UUID, List, List, List, List, net.corda.core.contracts.TimeWindow, net.corda.core.contracts.PrivacySalt)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.TransactionBuilder addAttachment(net.corda.core.crypto.SecureHash)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.TransactionBuilder addCommand(net.corda.core.contracts.Command)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.TransactionBuilder addCommand(net.corda.core.contracts.CommandData, List)
  @org.jetbrains.annotations.NotNull public net.corda.core.transactions.TransactionBuilder addInputState(net.corda.core.contracts.StateAndRef)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.TransactionBuilder addOutputState(net.corda.core.contracts.ContractState, String)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.TransactionBuilder addOutputState(net.corda.core.contracts.ContractState, String, net.corda.core.contracts.AttachmentConstraint)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.TransactionBuilder addOutputState(net.corda.core.contracts.ContractState, String, net.corda.core.identity.Party)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.TransactionBuilder addOutputState(net.corda.core.contracts.ContractState, String, net.corda.core.identity.Party, Integer)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.TransactionBuilder addOutputState(net.corda.core.contracts.ContractState, String, net.corda.core.identity.Party, Integer, net.corda.core.contracts.AttachmentConstraint)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.TransactionBuilder addOutputState(net.corda.core.contracts.TransactionState)
  @org.jetbrains.annotations.NotNull public final List attachments()
  @org.jetbrains.annotations.NotNull public final List commands()
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.TransactionBuilder copy()
  @org.jetbrains.annotations.NotNull protected final List getAttachments()
  @org.jetbrains.annotations.NotNull protected final List getCommands()
  @org.jetbrains.annotations.NotNull protected final List getInputs()
  @org.jetbrains.annotations.NotNull public final UUID getLockId()
  @org.jetbrains.annotations.Nullable public final net.corda.core.identity.Party getNotary()
  @org.jetbrains.annotations.NotNull protected final List getOutputs()
  @org.jetbrains.annotations.NotNull protected final net.corda.core.contracts.PrivacySalt getPrivacySalt()
  @org.jetbrains.annotations.Nullable protected final net.corda.core.contracts.TimeWindow getWindow()
  @org.jetbrains.annotations.NotNull public final List inputStates()
  @org.jetbrains.annotations.NotNull public final List outputStates()
  public final void setLockId(UUID)
  public final void setNotary(net.corda.core.identity.Party)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.TransactionBuilder setPrivacySalt(net.corda.core.contracts.PrivacySalt)
  protected final void setPrivacySalt(net.corda.core.contracts.PrivacySalt)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.TransactionBuilder setTimeWindow(java.time.Instant, java.time.Duration)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.TransactionBuilder setTimeWindow(net.corda.core.contracts.TimeWindow)
  protected final void setWindow(net.corda.core.contracts.TimeWindow)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.LedgerTransaction toLedgerTransaction(net.corda.core.node.ServiceHub)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.SignedTransaction toSignedTransaction(net.corda.core.node.services.KeyManagementService, java.security.PublicKey, net.corda.core.crypto.SignatureMetadata, net.corda.core.node.ServicesForResolution)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.WireTransaction toWireTransaction(net.corda.core.node.ServicesForResolution)
  public final void verify(net.corda.core.node.ServiceHub)
##
@net.corda.core.DoNotImplement public interface net.corda.core.transactions.TransactionWithSignatures extends net.corda.core.contracts.NamedByHash
  public abstract void checkSignaturesAreValid()
  @org.jetbrains.annotations.NotNull public abstract List getKeyDescriptions(Set)
  @org.jetbrains.annotations.NotNull public abstract Set getMissingSigners()
  @org.jetbrains.annotations.NotNull public abstract Set getRequiredSigningKeys()
  @org.jetbrains.annotations.NotNull public abstract List getSigs()
  public abstract void verifyRequiredSignatures()
  public abstract void verifySignaturesExcept(Collection)
##
@net.corda.core.DoNotImplement public abstract class net.corda.core.transactions.TraversableTransaction extends net.corda.core.transactions.CoreTransaction
  public <init>(List)
  @org.jetbrains.annotations.NotNull public final List getAttachments()
  @org.jetbrains.annotations.NotNull public final List getAvailableComponentGroups()
  @org.jetbrains.annotations.NotNull public final List getCommands()
  @org.jetbrains.annotations.NotNull public List getComponentGroups()
  @org.jetbrains.annotations.NotNull public List getInputs()
  @org.jetbrains.annotations.Nullable public net.corda.core.identity.Party getNotary()
  @org.jetbrains.annotations.NotNull public List getOutputs()
  @org.jetbrains.annotations.Nullable public final net.corda.core.contracts.TimeWindow getTimeWindow()
##
@net.corda.core.serialization.CordaSerializable @net.corda.core.DoNotImplement public final class net.corda.core.transactions.WireTransaction extends net.corda.core.transactions.TraversableTransaction
  @kotlin.Deprecated public <init>(List, List, List, List, net.corda.core.identity.Party, net.corda.core.contracts.TimeWindow, net.corda.core.contracts.PrivacySalt)
  public <init>(List, net.corda.core.contracts.PrivacySalt)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.FilteredTransaction buildFilteredTransaction(function.Predicate)
  public final void checkSignature(net.corda.core.crypto.TransactionSignature)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public net.corda.core.crypto.SecureHash getId()
  @org.jetbrains.annotations.NotNull public final net.corda.core.crypto.MerkleTree getMerkleTree()
  @org.jetbrains.annotations.NotNull public final net.corda.core.contracts.PrivacySalt getPrivacySalt()
  @org.jetbrains.annotations.NotNull public final Set getRequiredSigningKeys()
  public int hashCode()
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.LedgerTransaction toLedgerTransaction(kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
  @org.jetbrains.annotations.NotNull public final net.corda.core.transactions.LedgerTransaction toLedgerTransaction(net.corda.core.node.ServicesForResolution)
  @org.jetbrains.annotations.NotNull public String toString()
  public static final net.corda.core.transactions.WireTransaction$Companion Companion
##
public static final class net.corda.core.transactions.WireTransaction$Companion extends java.lang.Object
  @org.jetbrains.annotations.NotNull public final List createComponentGroups(List, List, List, List, net.corda.core.identity.Party, net.corda.core.contracts.TimeWindow)
##
public final class net.corda.core.utilities.ByteArrays extends java.lang.Object
  @org.jetbrains.annotations.NotNull public static final byte[] parseAsHex(String)
  @org.jetbrains.annotations.NotNull public static final net.corda.core.utilities.ByteSequence sequence(byte[], int, int)
  @org.jetbrains.annotations.NotNull public static final String toHexString(byte[])
##
@net.corda.core.serialization.CordaSerializable public abstract class net.corda.core.utilities.ByteSequence extends java.lang.Object implements java.lang.Comparable
  public int compareTo(net.corda.core.utilities.ByteSequence)
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ByteSequence copy()
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public abstract byte[] getBytes()
  public abstract int getOffset()
  public abstract int getSize()
  public int hashCode()
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.utilities.ByteSequence of(byte[])
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.utilities.ByteSequence of(byte[], int)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.utilities.ByteSequence of(byte[], int, int)
  @org.jetbrains.annotations.NotNull public final java.io.ByteArrayInputStream open()
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ByteSequence subSequence(int, int)
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ByteSequence take(int)
  @org.jetbrains.annotations.NotNull public String toString()
  public static final net.corda.core.utilities.ByteSequence$Companion Companion
##
public static final class net.corda.core.utilities.ByteSequence$Companion extends java.lang.Object
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ByteSequence of(byte[])
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ByteSequence of(byte[], int)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ByteSequence of(byte[], int, int)
##
public final class net.corda.core.utilities.EncodingUtils extends java.lang.Object
  @org.jetbrains.annotations.NotNull public static final byte[] base58ToByteArray(String)
  @org.jetbrains.annotations.NotNull public static final String base58ToRealString(String)
  @org.jetbrains.annotations.NotNull public static final String base58toBase64(String)
  @org.jetbrains.annotations.NotNull public static final String base58toHex(String)
  @org.jetbrains.annotations.NotNull public static final byte[] base64ToByteArray(String)
  @org.jetbrains.annotations.NotNull public static final String base64ToRealString(String)
  @org.jetbrains.annotations.NotNull public static final String base64toBase58(String)
  @org.jetbrains.annotations.NotNull public static final String base64toHex(String)
  @org.jetbrains.annotations.NotNull public static final String hexToBase58(String)
  @org.jetbrains.annotations.NotNull public static final String hexToBase64(String)
  @org.jetbrains.annotations.NotNull public static final byte[] hexToByteArray(String)
  @org.jetbrains.annotations.NotNull public static final String hexToRealString(String)
  @org.jetbrains.annotations.NotNull public static final java.security.PublicKey parsePublicKeyBase58(String)
  @org.jetbrains.annotations.NotNull public static final String toBase58(byte[])
  @org.jetbrains.annotations.NotNull public static final String toBase58String(java.security.PublicKey)
  @org.jetbrains.annotations.NotNull public static final String toBase64(byte[])
  @org.jetbrains.annotations.NotNull public static final String toHex(byte[])
  @org.jetbrains.annotations.NotNull public static final byte[] toSHA256Bytes(java.security.PublicKey)
  public static final int MAX_HASH_HEX_SIZE = 130
##
public class net.corda.core.utilities.Id extends java.lang.Object
  public <init>(Object, String, java.time.Instant)
  public final boolean equals(Object)
  @org.jetbrains.annotations.Nullable public final String getEntityType()
  @org.jetbrains.annotations.NotNull public final java.time.Instant getTimestamp()
  @org.jetbrains.annotations.NotNull public final Object getValue()
  public final int hashCode()
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.utilities.Id newInstance(Object, String, java.time.Instant)
  @org.jetbrains.annotations.NotNull public final String toString()
  public static final net.corda.core.utilities.Id$Companion Companion
##
public static final class net.corda.core.utilities.Id$Companion extends java.lang.Object
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.Id newInstance(Object, String, java.time.Instant)
##
public final class net.corda.core.utilities.KotlinUtilsKt extends java.lang.Object
  public static final void debug(org.slf4j.Logger, kotlin.jvm.functions.Function0)
  public static final int exactAdd(int, int)
  public static final long exactAdd(long, long)
  @org.jetbrains.annotations.NotNull public static final java.time.Duration getDays(int)
  @org.jetbrains.annotations.NotNull public static final java.time.Duration getHours(int)
  @org.jetbrains.annotations.NotNull public static final java.time.Duration getMillis(int)
  @org.jetbrains.annotations.NotNull public static final java.time.Duration getMinutes(int)
  public static final Object getOrThrow(concurrent.Future, java.time.Duration)
  @org.jetbrains.annotations.NotNull public static final java.time.Duration getSeconds(int)
  @org.jetbrains.annotations.NotNull public static final net.corda.core.utilities.NonEmptySet toNonEmptySet(Collection)
  public static final void trace(org.slf4j.Logger, kotlin.jvm.functions.Function0)
  @org.jetbrains.annotations.NotNull public static final net.corda.core.utilities.PropertyDelegate transient(kotlin.jvm.functions.Function0)
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.utilities.NetworkHostAndPort extends java.lang.Object
  public <init>(String, int)
  @org.jetbrains.annotations.NotNull public final String component1()
  public final int component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.NetworkHostAndPort copy(String, int)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final String getHost()
  public final int getPort()
  public int hashCode()
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.utilities.NetworkHostAndPort parse(String)
  @org.jetbrains.annotations.NotNull public String toString()
  public static final net.corda.core.utilities.NetworkHostAndPort$Companion Companion
  @org.jetbrains.annotations.NotNull public static final String INVALID_PORT_FORMAT = "Invalid port: %s"
  @org.jetbrains.annotations.NotNull public static final String MISSING_PORT_FORMAT = "Missing port: %s"
  @org.jetbrains.annotations.NotNull public static final String UNPARSEABLE_ADDRESS_FORMAT = "Unparseable address: %s"
##
public static final class net.corda.core.utilities.NetworkHostAndPort$Companion extends java.lang.Object
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.NetworkHostAndPort parse(String)
##
public final class net.corda.core.utilities.NonEmptySet extends java.lang.Object implements kotlin.jvm.internal.markers.KMappedMarker, java.util.Set
  public boolean add(Object)
  public boolean addAll(Collection)
  public void clear()
  public boolean contains(Object)
  public boolean containsAll(Collection)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.utilities.NonEmptySet copyOf(Collection)
  public boolean equals(Object)
  public void forEach(function.Consumer)
  public int getSize()
  public int hashCode()
  public final Object head()
  public boolean isEmpty()
  @org.jetbrains.annotations.NotNull public Iterator iterator()
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.utilities.NonEmptySet of(Object)
  @org.jetbrains.annotations.NotNull public stream.Stream parallelStream()
  public boolean remove(Object)
  public boolean removeAll(Collection)
  public boolean retainAll(Collection)
  @org.jetbrains.annotations.NotNull public Spliterator spliterator()
  @org.jetbrains.annotations.NotNull public stream.Stream stream()
  public Object[] toArray()
  public Object[] toArray(Object[])
  @org.jetbrains.annotations.NotNull public String toString()
  public static final net.corda.core.utilities.NonEmptySet$Companion Companion
##
public static final class net.corda.core.utilities.NonEmptySet$Companion extends java.lang.Object
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.NonEmptySet copyOf(Collection)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.NonEmptySet of(Object)
##
public static final class net.corda.core.utilities.NonEmptySet$iterator$1 extends java.lang.Object implements java.util.Iterator, kotlin.jvm.internal.markers.KMappedMarker
  public boolean hasNext()
  public Object next()
  public void remove()
##
@net.corda.core.serialization.CordaSerializable public class net.corda.core.utilities.OpaqueBytes extends net.corda.core.utilities.ByteSequence
  public <init>(byte[])
  @org.jetbrains.annotations.NotNull public final byte[] getBytes()
  public int getOffset()
  public int getSize()
  public static final net.corda.core.utilities.OpaqueBytes$Companion Companion
##
public static final class net.corda.core.utilities.OpaqueBytes$Companion extends java.lang.Object
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.utilities.OpaqueBytesSubSequence extends net.corda.core.utilities.ByteSequence
  public <init>(byte[], int, int)
  @org.jetbrains.annotations.NotNull public byte[] getBytes()
  public int getOffset()
  public int getSize()
##
@net.corda.core.serialization.CordaSerializable public final class net.corda.core.utilities.ProgressTracker extends java.lang.Object
  public final void endWithError(Throwable)
  @org.jetbrains.annotations.NotNull public final List getAllSteps()
  @org.jetbrains.annotations.NotNull public final rx.Observable getChanges()
  @org.jetbrains.annotations.Nullable public final net.corda.core.utilities.ProgressTracker getChildProgressTracker(net.corda.core.utilities.ProgressTracker$Step)
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ProgressTracker$Step getCurrentStep()
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ProgressTracker$Step getCurrentStepRecursive()
  public final boolean getHasEnded()
  @org.jetbrains.annotations.Nullable public final net.corda.core.utilities.ProgressTracker getParent()
  public final int getStepIndex()
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ProgressTracker$Step[] getSteps()
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ProgressTracker getTopLevelTracker()
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ProgressTracker$Step nextStep()
  public final void setChildProgressTracker(net.corda.core.utilities.ProgressTracker$Step, net.corda.core.utilities.ProgressTracker)
  public final void setCurrentStep(net.corda.core.utilities.ProgressTracker$Step)
##
@net.corda.core.serialization.CordaSerializable public abstract static class net.corda.core.utilities.ProgressTracker$Change extends java.lang.Object
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.utilities.ProgressTracker$Change$Position extends net.corda.core.utilities.ProgressTracker$Change
  public <init>(net.corda.core.utilities.ProgressTracker, net.corda.core.utilities.ProgressTracker$Step)
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ProgressTracker component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ProgressTracker$Step component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ProgressTracker$Change$Position copy(net.corda.core.utilities.ProgressTracker, net.corda.core.utilities.ProgressTracker$Step)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ProgressTracker$Step getNewStep()
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ProgressTracker getTracker()
  public int hashCode()
  @org.jetbrains.annotations.NotNull public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.utilities.ProgressTracker$Change$Rendering extends net.corda.core.utilities.ProgressTracker$Change
  public <init>(net.corda.core.utilities.ProgressTracker, net.corda.core.utilities.ProgressTracker$Step)
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ProgressTracker component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ProgressTracker$Step component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ProgressTracker$Change$Rendering copy(net.corda.core.utilities.ProgressTracker, net.corda.core.utilities.ProgressTracker$Step)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ProgressTracker$Step getOfStep()
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ProgressTracker getTracker()
  public int hashCode()
  @org.jetbrains.annotations.NotNull public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.utilities.ProgressTracker$Change$Structural extends net.corda.core.utilities.ProgressTracker$Change
  public <init>(net.corda.core.utilities.ProgressTracker, net.corda.core.utilities.ProgressTracker$Step)
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ProgressTracker component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ProgressTracker$Step component2()
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ProgressTracker$Change$Structural copy(net.corda.core.utilities.ProgressTracker, net.corda.core.utilities.ProgressTracker$Step)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ProgressTracker$Step getParent()
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.ProgressTracker getTracker()
  public int hashCode()
  @org.jetbrains.annotations.NotNull public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.utilities.ProgressTracker$DONE extends net.corda.core.utilities.ProgressTracker$Step
  public boolean equals(Object)
  public static final net.corda.core.utilities.ProgressTracker$DONE INSTANCE
##
@net.corda.core.serialization.CordaSerializable public static class net.corda.core.utilities.ProgressTracker$Step extends java.lang.Object
  public <init>(String)
  @org.jetbrains.annotations.Nullable public net.corda.core.utilities.ProgressTracker childProgressTracker()
  @org.jetbrains.annotations.NotNull public rx.Observable getChanges()
  @org.jetbrains.annotations.NotNull public Map getExtraAuditData()
  @org.jetbrains.annotations.NotNull public String getLabel()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.utilities.ProgressTracker$UNSTARTED extends net.corda.core.utilities.ProgressTracker$Step
  public boolean equals(Object)
  public static final net.corda.core.utilities.ProgressTracker$UNSTARTED INSTANCE
##
public interface net.corda.core.utilities.PropertyDelegate
  public abstract Object getValue(Object, kotlin.reflect.KProperty)
##
@net.corda.core.serialization.CordaSerializable public abstract class net.corda.core.utilities.Try extends java.lang.Object
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.Try combine(net.corda.core.utilities.Try, kotlin.jvm.functions.Function2)
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.Try flatMap(kotlin.jvm.functions.Function1)
  public abstract Object getOrThrow()
  public abstract boolean isFailure()
  public abstract boolean isSuccess()
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.Try map(kotlin.jvm.functions.Function1)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final net.corda.core.utilities.Try on(kotlin.jvm.functions.Function0)
  public static final net.corda.core.utilities.Try$Companion Companion
##
public static final class net.corda.core.utilities.Try$Companion extends java.lang.Object
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.Try on(kotlin.jvm.functions.Function0)
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.utilities.Try$Failure extends net.corda.core.utilities.Try
  public <init>(Throwable)
  @org.jetbrains.annotations.NotNull public final Throwable component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.Try$Failure copy(Throwable)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final Throwable getException()
  public Object getOrThrow()
  public int hashCode()
  public boolean isFailure()
  public boolean isSuccess()
  @org.jetbrains.annotations.NotNull public String toString()
##
@net.corda.core.serialization.CordaSerializable public static final class net.corda.core.utilities.Try$Success extends net.corda.core.utilities.Try
  public <init>(Object)
  public final Object component1()
  @org.jetbrains.annotations.NotNull public final net.corda.core.utilities.Try$Success copy(Object)
  public boolean equals(Object)
  public Object getOrThrow()
  public final Object getValue()
  public int hashCode()
  public boolean isFailure()
  public boolean isSuccess()
  @org.jetbrains.annotations.NotNull public String toString()
##
public final class net.corda.core.utilities.UntrustworthyData extends java.lang.Object
  public <init>(Object)
  public final Object getFromUntrustedWorld()
  @co.paralleluniverse.fibers.Suspendable public final Object unwrap(net.corda.core.utilities.UntrustworthyData$Validator)
##
public static interface net.corda.core.utilities.UntrustworthyData$Validator extends java.io.Serializable
  @co.paralleluniverse.fibers.Suspendable public abstract Object validate(Object)
##
public final class net.corda.core.utilities.UntrustworthyDataKt extends java.lang.Object
  public static final Object unwrap(net.corda.core.utilities.UntrustworthyData, kotlin.jvm.functions.Function1)
##
public final class net.corda.core.utilities.UuidGenerator extends java.lang.Object
  public <init>()
  public static final net.corda.core.utilities.UuidGenerator$Companion Companion
##
public static final class net.corda.core.utilities.UuidGenerator$Companion extends java.lang.Object
  @org.jetbrains.annotations.NotNull public final UUID next()
##
public interface net.corda.core.utilities.VariablePropertyDelegate extends net.corda.core.utilities.PropertyDelegate
  public abstract void setValue(Object, kotlin.reflect.KProperty, Object)
##
public final class net.corda.client.jackson.JacksonSupport extends java.lang.Object
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final com.fasterxml.jackson.databind.ObjectMapper createDefaultMapper(net.corda.core.messaging.CordaRPCOps)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final com.fasterxml.jackson.databind.ObjectMapper createDefaultMapper(net.corda.core.messaging.CordaRPCOps, com.fasterxml.jackson.core.JsonFactory)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final com.fasterxml.jackson.databind.ObjectMapper createDefaultMapper(net.corda.core.messaging.CordaRPCOps, com.fasterxml.jackson.core.JsonFactory, boolean)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final com.fasterxml.jackson.databind.ObjectMapper createInMemoryMapper(net.corda.core.node.services.IdentityService)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final com.fasterxml.jackson.databind.ObjectMapper createInMemoryMapper(net.corda.core.node.services.IdentityService, com.fasterxml.jackson.core.JsonFactory)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final com.fasterxml.jackson.databind.ObjectMapper createInMemoryMapper(net.corda.core.node.services.IdentityService, com.fasterxml.jackson.core.JsonFactory, boolean)
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final com.fasterxml.jackson.databind.ObjectMapper createNonRpcMapper()
  @kotlin.jvm.JvmStatic @org.jetbrains.annotations.NotNull public static final com.fasterxml.jackson.databind.ObjectMapper createNonRpcMapper(com.fasterxml.jackson.core.JsonFactory)
  @org.jetbrains.annotations.NotNull public final com.fasterxml.jackson.databind.Module getCordaModule()
  public static final net.corda.client.jackson.JacksonSupport INSTANCE
##
public static final class net.corda.client.jackson.JacksonSupport$AmountDeserializer extends com.fasterxml.jackson.databind.JsonDeserializer
  @org.jetbrains.annotations.NotNull public net.corda.core.contracts.Amount deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
  public static final net.corda.client.jackson.JacksonSupport$AmountDeserializer INSTANCE
##
public static final class net.corda.client.jackson.JacksonSupport$AmountSerializer extends com.fasterxml.jackson.databind.JsonSerializer
  public void serialize(net.corda.core.contracts.Amount, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
  public static final net.corda.client.jackson.JacksonSupport$AmountSerializer INSTANCE
##
public static final class net.corda.client.jackson.JacksonSupport$AnonymousPartyDeserializer extends com.fasterxml.jackson.databind.JsonDeserializer
  @org.jetbrains.annotations.NotNull public net.corda.core.identity.AnonymousParty deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
  public static final net.corda.client.jackson.JacksonSupport$AnonymousPartyDeserializer INSTANCE
##
public static final class net.corda.client.jackson.JacksonSupport$AnonymousPartySerializer extends com.fasterxml.jackson.databind.JsonSerializer
  public void serialize(net.corda.core.identity.AnonymousParty, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
  public static final net.corda.client.jackson.JacksonSupport$AnonymousPartySerializer INSTANCE
##
public static final class net.corda.client.jackson.JacksonSupport$CordaX500NameDeserializer extends com.fasterxml.jackson.databind.JsonDeserializer
  @org.jetbrains.annotations.NotNull public net.corda.core.identity.CordaX500Name deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
  public static final net.corda.client.jackson.JacksonSupport$CordaX500NameDeserializer INSTANCE
##
public static final class net.corda.client.jackson.JacksonSupport$CordaX500NameSerializer extends com.fasterxml.jackson.databind.JsonSerializer
  public void serialize(net.corda.core.identity.CordaX500Name, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
  public static final net.corda.client.jackson.JacksonSupport$CordaX500NameSerializer INSTANCE
##
public static final class net.corda.client.jackson.JacksonSupport$IdentityObjectMapper extends com.fasterxml.jackson.databind.ObjectMapper implements net.corda.client.jackson.JacksonSupport$PartyObjectMapper
  public <init>(net.corda.core.node.services.IdentityService, com.fasterxml.jackson.core.JsonFactory, boolean)
  public final boolean getFuzzyIdentityMatch()
  @org.jetbrains.annotations.NotNull public final net.corda.core.node.services.IdentityService getIdentityService()
  @org.jetbrains.annotations.NotNull public Set partiesFromName(String)
  @org.jetbrains.annotations.Nullable public net.corda.core.identity.Party partyFromKey(java.security.PublicKey)
  @org.jetbrains.annotations.Nullable public net.corda.core.identity.Party wellKnownPartyFromX500Name(net.corda.core.identity.CordaX500Name)
##
public static final class net.corda.client.jackson.JacksonSupport$NoPartyObjectMapper extends com.fasterxml.jackson.databind.ObjectMapper implements net.corda.client.jackson.JacksonSupport$PartyObjectMapper
  public <init>(com.fasterxml.jackson.core.JsonFactory)
  @org.jetbrains.annotations.NotNull public Void partiesFromName(String)
  @org.jetbrains.annotations.Nullable public net.corda.core.identity.Party partyFromKey(java.security.PublicKey)
  @org.jetbrains.annotations.Nullable public net.corda.core.identity.Party wellKnownPartyFromX500Name(net.corda.core.identity.CordaX500Name)
##
public static final class net.corda.client.jackson.JacksonSupport$NodeInfoDeserializer extends com.fasterxml.jackson.databind.JsonDeserializer
  @org.jetbrains.annotations.NotNull public net.corda.core.node.NodeInfo deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
  public static final net.corda.client.jackson.JacksonSupport$NodeInfoDeserializer INSTANCE
##
public static final class net.corda.client.jackson.JacksonSupport$NodeInfoSerializer extends com.fasterxml.jackson.databind.JsonSerializer
  public void serialize(net.corda.core.node.NodeInfo, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
  public static final net.corda.client.jackson.JacksonSupport$NodeInfoSerializer INSTANCE
##
public static final class net.corda.client.jackson.JacksonSupport$OpaqueBytesDeserializer extends com.fasterxml.jackson.databind.JsonDeserializer
  @org.jetbrains.annotations.NotNull public net.corda.core.utilities.OpaqueBytes deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
  public static final net.corda.client.jackson.JacksonSupport$OpaqueBytesDeserializer INSTANCE
##
public static final class net.corda.client.jackson.JacksonSupport$OpaqueBytesSerializer extends com.fasterxml.jackson.databind.JsonSerializer
  public void serialize(net.corda.core.utilities.OpaqueBytes, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
  public static final net.corda.client.jackson.JacksonSupport$OpaqueBytesSerializer INSTANCE
##
public static final class net.corda.client.jackson.JacksonSupport$PartyDeserializer extends com.fasterxml.jackson.databind.JsonDeserializer
  @org.jetbrains.annotations.NotNull public net.corda.core.identity.Party deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
  public static final net.corda.client.jackson.JacksonSupport$PartyDeserializer INSTANCE
##
public static interface net.corda.client.jackson.JacksonSupport$PartyObjectMapper
  @org.jetbrains.annotations.NotNull public abstract Set partiesFromName(String)
  @org.jetbrains.annotations.Nullable public abstract net.corda.core.identity.Party partyFromKey(java.security.PublicKey)
  @org.jetbrains.annotations.Nullable public abstract net.corda.core.identity.Party wellKnownPartyFromX500Name(net.corda.core.identity.CordaX500Name)
##
public static final class net.corda.client.jackson.JacksonSupport$PartySerializer extends com.fasterxml.jackson.databind.JsonSerializer
  public void serialize(net.corda.core.identity.Party, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
  public static final net.corda.client.jackson.JacksonSupport$PartySerializer INSTANCE
##
public static final class net.corda.client.jackson.JacksonSupport$PublicKeyDeserializer extends com.fasterxml.jackson.databind.JsonDeserializer
  @org.jetbrains.annotations.NotNull public java.security.PublicKey deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
  public static final net.corda.client.jackson.JacksonSupport$PublicKeyDeserializer INSTANCE
##
public static final class net.corda.client.jackson.JacksonSupport$PublicKeySerializer extends com.fasterxml.jackson.databind.JsonSerializer
  public void serialize(java.security.PublicKey, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
  public static final net.corda.client.jackson.JacksonSupport$PublicKeySerializer INSTANCE
##
public static final class net.corda.client.jackson.JacksonSupport$RpcObjectMapper extends com.fasterxml.jackson.databind.ObjectMapper implements net.corda.client.jackson.JacksonSupport$PartyObjectMapper
  public <init>(net.corda.core.messaging.CordaRPCOps, com.fasterxml.jackson.core.JsonFactory, boolean)
  public final boolean getFuzzyIdentityMatch()
  @org.jetbrains.annotations.NotNull public final net.corda.core.messaging.CordaRPCOps getRpc()
  @org.jetbrains.annotations.NotNull public Set partiesFromName(String)
  @org.jetbrains.annotations.Nullable public net.corda.core.identity.Party partyFromKey(java.security.PublicKey)
  @org.jetbrains.annotations.Nullable public net.corda.core.identity.Party wellKnownPartyFromX500Name(net.corda.core.identity.CordaX500Name)
##
public static final class net.corda.client.jackson.JacksonSupport$SecureHashDeserializer extends com.fasterxml.jackson.databind.JsonDeserializer
  public <init>()
  @org.jetbrains.annotations.NotNull public net.corda.core.crypto.SecureHash deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
##
public static final class net.corda.client.jackson.JacksonSupport$SecureHashSerializer extends com.fasterxml.jackson.databind.JsonSerializer
  public void serialize(net.corda.core.crypto.SecureHash, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
  public static final net.corda.client.jackson.JacksonSupport$SecureHashSerializer INSTANCE
##
public abstract static class net.corda.client.jackson.JacksonSupport$SignedTransactionMixin extends java.lang.Object
  public <init>()
  @com.fasterxml.jackson.annotation.JsonIgnore @org.jetbrains.annotations.NotNull public abstract net.corda.core.crypto.SecureHash getId()
  @com.fasterxml.jackson.annotation.JsonIgnore @org.jetbrains.annotations.NotNull public abstract List getInputs()
  @com.fasterxml.jackson.annotation.JsonIgnore @org.jetbrains.annotations.Nullable public abstract net.corda.core.identity.Party getNotary()
  @com.fasterxml.jackson.annotation.JsonIgnore @org.jetbrains.annotations.NotNull public abstract net.corda.core.transactions.NotaryChangeWireTransaction getNotaryChangeTx()
  @com.fasterxml.jackson.annotation.JsonIgnore @org.jetbrains.annotations.NotNull public abstract Set getRequiredSigningKeys()
  @com.fasterxml.jackson.annotation.JsonProperty @org.jetbrains.annotations.NotNull protected abstract List getSigs()
  @com.fasterxml.jackson.annotation.JsonProperty @org.jetbrains.annotations.NotNull protected abstract net.corda.core.transactions.CoreTransaction getTransaction()
  @com.fasterxml.jackson.annotation.JsonIgnore @org.jetbrains.annotations.NotNull public abstract net.corda.core.transactions.WireTransaction getTx()
  @com.fasterxml.jackson.annotation.JsonIgnore @org.jetbrains.annotations.NotNull public abstract net.corda.core.serialization.SerializedBytes getTxBits()
##
public static final class net.corda.client.jackson.JacksonSupport$ToStringSerializer extends com.fasterxml.jackson.databind.JsonSerializer
  public void serialize(Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
  public static final net.corda.client.jackson.JacksonSupport$ToStringSerializer INSTANCE
##
public abstract static class net.corda.client.jackson.JacksonSupport$WireTransactionMixin extends java.lang.Object
  public <init>()
  @com.fasterxml.jackson.annotation.JsonIgnore @org.jetbrains.annotations.NotNull public abstract List getAvailableComponentHashes()
  @com.fasterxml.jackson.annotation.JsonIgnore @org.jetbrains.annotations.NotNull public abstract List getAvailableComponents()
  @com.fasterxml.jackson.annotation.JsonIgnore @org.jetbrains.annotations.NotNull public abstract net.corda.core.crypto.MerkleTree getMerkleTree()
  @com.fasterxml.jackson.annotation.JsonIgnore @org.jetbrains.annotations.NotNull public abstract List getOutputStates()
##
@javax.annotation.concurrent.ThreadSafe public class net.corda.client.jackson.StringToMethodCallParser extends java.lang.Object
  public <init>(Class)
  public <init>(Class, com.fasterxml.jackson.databind.ObjectMapper)
  public <init>(kotlin.reflect.KClass)
  @org.jetbrains.annotations.NotNull public final Map getAvailableCommands()
  @org.jetbrains.annotations.NotNull protected final com.google.common.collect.Multimap getMethodMap()
  @org.jetbrains.annotations.NotNull public final Map getMethodParamNames()
  @org.jetbrains.annotations.NotNull public List paramNamesFromConstructor(reflect.Constructor)
  @org.jetbrains.annotations.NotNull public List paramNamesFromMethod(reflect.Method)
  @org.jetbrains.annotations.NotNull public final net.corda.client.jackson.StringToMethodCallParser$ParsedMethodCall parse(Object, String)
  @org.jetbrains.annotations.NotNull public final Object[] parseArguments(String, List, String)
  public static final net.corda.client.jackson.StringToMethodCallParser$Companion Companion
##
public static final class net.corda.client.jackson.StringToMethodCallParser$Companion extends java.lang.Object
##
public final class net.corda.client.jackson.StringToMethodCallParser$ParsedMethodCall extends java.lang.Object implements java.util.concurrent.Callable
  public <init>(net.corda.client.jackson.StringToMethodCallParser, Object, reflect.Method, Object[])
  @org.jetbrains.annotations.Nullable public Object call()
  @org.jetbrains.annotations.NotNull public final Object[] getArgs()
  @org.jetbrains.annotations.NotNull public final reflect.Method getMethod()
  @org.jetbrains.annotations.Nullable public final Object invoke()
##
public static class net.corda.client.jackson.StringToMethodCallParser$UnparseableCallException extends net.corda.core.CordaException
  public <init>(String, Throwable)
##
public static final class net.corda.client.jackson.StringToMethodCallParser$UnparseableCallException$FailedParse extends net.corda.client.jackson.StringToMethodCallParser$UnparseableCallException
  public <init>(Exception)
##
public static final class net.corda.client.jackson.StringToMethodCallParser$UnparseableCallException$MissingParameter extends net.corda.client.jackson.StringToMethodCallParser$UnparseableCallException
  public <init>(String, String, String)
  @org.jetbrains.annotations.NotNull public final String getParamName()
##
public static final class net.corda.client.jackson.StringToMethodCallParser$UnparseableCallException$ReflectionDataMissing extends net.corda.client.jackson.StringToMethodCallParser$UnparseableCallException
  public <init>(String, int)
##
public static final class net.corda.client.jackson.StringToMethodCallParser$UnparseableCallException$TooManyParameters extends net.corda.client.jackson.StringToMethodCallParser$UnparseableCallException
  public <init>(String, String)
##
public static final class net.corda.client.jackson.StringToMethodCallParser$UnparseableCallException$UnknownMethod extends net.corda.client.jackson.StringToMethodCallParser$UnparseableCallException
  public <init>(String)
  @org.jetbrains.annotations.NotNull public final String getMethodName()
##
public final class net.corda.client.rpc.CordaRPCClient extends java.lang.Object
  public <init>(net.corda.core.utilities.NetworkHostAndPort)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, net.corda.client.rpc.CordaRPCClientConfiguration)
  @org.jetbrains.annotations.NotNull public final net.corda.client.rpc.CordaRPCConnection start(String, String)
  @org.jetbrains.annotations.NotNull public final net.corda.client.rpc.CordaRPCConnection start(String, String, net.corda.core.context.Trace, net.corda.core.context.Actor)
  public final Object use(String, String, kotlin.jvm.functions.Function1)
##
public final class net.corda.client.rpc.CordaRPCClientConfiguration extends java.lang.Object
  public <init>(java.time.Duration)
  @org.jetbrains.annotations.NotNull public final java.time.Duration component1()
  @org.jetbrains.annotations.NotNull public final net.corda.client.rpc.CordaRPCClientConfiguration copy(java.time.Duration)
  public boolean equals(Object)
  @org.jetbrains.annotations.NotNull public final java.time.Duration getConnectionMaxRetryInterval()
  public int hashCode()
  public String toString()
  public static final net.corda.client.rpc.CordaRPCClientConfiguration$Companion Companion
  @kotlin.jvm.JvmField @org.jetbrains.annotations.NotNull public static final net.corda.client.rpc.CordaRPCClientConfiguration DEFAULT
##
public static final class net.corda.client.rpc.CordaRPCClientConfiguration$Companion extends java.lang.Object
##
public final class net.corda.client.rpc.CordaRPCConnection extends java.lang.Object implements net.corda.client.rpc.RPCConnection
  public <init>(net.corda.client.rpc.RPCConnection)
  public void close()
  public void forceClose()
  @org.jetbrains.annotations.NotNull public net.corda.core.messaging.CordaRPCOps getProxy()
  public int getServerProtocolVersion()
  public void notifyServerAndClose()
##
public final class net.corda.client.rpc.PermissionException extends net.corda.core.CordaRuntimeException
  public <init>(String)
##
@net.corda.core.DoNotImplement public interface net.corda.client.rpc.RPCConnection extends java.io.Closeable
  public abstract void forceClose()
  @org.jetbrains.annotations.NotNull public abstract net.corda.core.messaging.RPCOps getProxy()
  public abstract int getServerProtocolVersion()
  public abstract void notifyServerAndClose()
##
public class net.corda.client.rpc.RPCException extends net.corda.core.CordaRuntimeException
  public <init>(String)
  public <init>(String, Throwable)
##
public @interface net.corda.client.rpc.RPCSinceVersion
  public abstract int version()
##
public final class net.corda.client.rpc.UtilsKt extends java.lang.Object
  public static final void notUsed(rx.Observable)
##
